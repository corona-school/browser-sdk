{"version":3,"file":"datadog-rum-slim.js","mappings":"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","sources":["webpack:///../core/src/tools/getGlobalObject.ts","webpack:///../core/src/tools/getZoneJsOriginalValue.ts","webpack:///../core/src/tools/display.ts","webpack:///../core/src/tools/monitor.ts","webpack:///../core/src/tools/timer.ts","webpack:///../core/src/tools/utils/functionUtils.ts","webpack:///../core/src/tools/observable.ts","webpack:///../core/src/tools/catchUserErrors.ts","webpack:///../core/src/tools/utils/polyfills.ts","webpack:///../core/src/tools/utils/byteUtils.ts","webpack:///../core/src/tools/utils/typeUtils.ts","webpack:///../core/src/tools/mergeInto.ts","webpack:///../core/src/tools/serialisation/jsonStringify.ts","webpack:///../core/src/tools/serialisation/sanitize.ts","webpack:///../core/src/tools/serialisation/heavyCustomerDataWarning.ts","webpack:///../core/src/tools/serialisation/contextManager.ts","webpack:///../core/src/tools/boundedBuffer.ts","webpack:///../core/src/tools/utils/numberUtils.ts","webpack:///../core/src/tools/utils/timeUtils.ts","webpack:///../core/src/tools/utils/stringUtils.ts","webpack:///../core/src/browser/cookie.ts","webpack:///../core/src/domain/synthetics/syntheticsWorkerValues.ts","webpack:///../core/src/transport/eventBridge.ts","webpack:///../core/src/domain/tracekit/computeStackTrace.ts","webpack:///../core/src/domain/error/error.ts","webpack:///../core/src/tools/experimentalFeatures.ts","webpack:///../core/src/domain/user/user.ts","webpack:///../core/src/tools/utils/objectUtils.ts","webpack:///../core/src/domain/session/sessionConstants.ts","webpack:///../core/src/domain/session/storeStrategies/sessionStoreStrategy.ts","webpack:///../core/src/domain/session/sessionState.ts","webpack:///../core/src/domain/session/oldCookiesMigration.ts","webpack:///../core/src/domain/session/storeStrategies/sessionInCookie.ts","webpack:///../core/src/domain/session/storeStrategies/sessionInLocalStorage.ts","webpack:///../core/src/domain/session/sessionStoreOperations.ts","webpack:///../core/src/tools/utils/browserDetection.ts","webpack:///../core/src/domain/session/sessionStore.ts","webpack:///../core/src/tools/utils/urlPolyfill.ts","webpack:///../core/src/domain/configuration/intakeSites.ts","webpack:///../core/src/domain/configuration/endpointBuilder.ts","webpack:///../core/src/domain/configuration/tags.ts","webpack:///../core/src/domain/configuration/transportConfiguration.ts","webpack:///../core/src/domain/configuration/configuration.ts","webpack:///../core/src/tools/matchOption.ts","webpack:///../rum-core/src/domain/tracing/tracer.ts","webpack:///../rum-core/src/domain/configuration.ts","webpack:///../rum-core/src/domain/contexts/commonContext.ts","webpack:///../core/src/tools/sendToExtension.ts","webpack:///../core/src/domain/telemetry/rawTelemetryEvent.types.ts","webpack:///../core/src/domain/telemetry/telemetry.ts","webpack:///../core/src/browser/addEventListener.ts","webpack:///../core/src/browser/pageExitObservable.ts","webpack:///../rum-core/src/browser/domMutationObservable.ts","webpack:///../core/src/browser/runOnReadyState.ts","webpack:///../rum-core/src/domain/rumEventsCollection/resource/resourceUtils.ts","webpack:///../rum-core/src/browser/htmlDomUtils.ts","webpack:///../rum-core/src/domain/tracing/getDocumentTraceId.ts","webpack:///../rum-core/src/browser/performanceCollection.ts","webpack:///../core/src/domain/error/error.types.ts","webpack:///../rum-core/src/browser/viewportObservable.ts","webpack:///../rum-core/src/domain/contexts/displayContext.ts","webpack:///../core/src/domain/eventRateLimiter/createEventRateLimiter.ts","webpack:///../rum-core/src/domain/contexts/syntheticsContext.ts","webpack:///../rum-core/src/domain/limitModification.ts","webpack:///../rum-core/src/domain/assembly.ts","webpack:///../rum-core/src/domain/contexts/ciTestContext.ts","webpack:///../core/src/tools/abstractLifeCycle.ts","webpack:///../core/src/browser/xhrObservable.ts","webpack:///../rum-core/src/domain/lifeCycle.ts","webpack:///../core/src/tools/valueHistory.ts","webpack:///../rum-core/src/domain/contexts/viewContexts.ts","webpack:///../core/src/tools/instrumentMethod.ts","webpack:///../core/src/browser/fetchObservable.ts","webpack:///../rum-core/src/domain/requestCollection.ts","webpack:///../core/src/tools/utils/responseUtils.ts","webpack:///../core/src/tools/readBytesFromStream.ts","webpack:///../rum-core/src/domain/trackEventCounts.ts","webpack:///../rum-core/src/domain/waitPageActivityEnd.ts","webpack:///../rum-core/src/domain/rumEventsCollection/action/clickChain.ts","webpack:///../rum-core/src/domain/rumEventsCollection/action/getActionNameFromElement.ts","webpack:///../rum-core/src/domain/rumEventsCollection/action/getSelectorFromElement.ts","webpack:///../rum-core/src/domain/rumEventsCollection/action/listenActionEvents.ts","webpack:///../rum-core/src/domain/rumEventsCollection/action/computeFrustration.ts","webpack:///../rum-core/src/domain/rumEventsCollection/action/trackClickActions.ts","webpack:///../rum-core/src/domain/rumEventsCollection/action/actionCollection.ts","webpack:///../core/src/domain/tracekit/tracekit.ts","webpack:///../core/src/domain/console/consoleObservable.ts","webpack:///../core/src/domain/report/reportObservable.ts","webpack:///../rum-core/src/domain/rumEventsCollection/view/trackFirstHidden.ts","webpack:///../rum-core/src/domain/rumEventsCollection/error/errorCollection.ts","webpack:///../rum-core/src/domain/rumEventsCollection/error/trackConsoleError.ts","webpack:///../core/src/domain/error/trackRuntimeError.ts","webpack:///../rum-core/src/domain/rumEventsCollection/error/trackReportError.ts","webpack:///../rum-core/src/domain/rumEventsCollection/resource/matchRequestTiming.ts","webpack:///../rum-core/src/domain/rumEventsCollection/resource/resourceCollection.ts","webpack:///../rum-core/src/domain/contexts/foregroundContexts.ts","webpack:///../rum-core/src/domain/rumEventsCollection/view/trackInitialViewTimings.ts","webpack:///../rum-core/src/domain/rumEventsCollection/view/trackViewMetrics.ts","webpack:///../rum-core/src/browser/scroll.ts","webpack:///../rum-core/src/domain/rumEventsCollection/view/trackViewEventCounts.ts","webpack:///../rum-core/src/domain/rumEventsCollection/view/trackViews.ts","webpack:///../rum-core/src/domain/rumEventsCollection/view/viewCollection.ts","webpack:///../core/src/domain/session/sessionManager.ts","webpack:///../rum-core/src/domain/rumSessionManager.ts","webpack:///../core/src/transport/flushController.ts","webpack:///../core/src/transport/batch.ts","webpack:///../core/src/transport/sendWithRetryStrategy.ts","webpack:///../core/src/transport/httpRequest.ts","webpack:///../rum-core/src/transport/startRumBatch.ts","webpack:///../rum-core/src/domain/contexts/urlContexts.ts","webpack:///../rum-core/src/browser/locationChangeObservable.ts","webpack:///../rum-core/src/domain/contexts/featureFlagContext.ts","webpack:///../rum-core/src/domain/startCustomerDataTelemetry.ts","webpack:///../rum-core/src/domain/contexts/pageStateHistory.ts","webpack:///../rum-core/src/domain/getSessionReplayUrl.ts","webpack:///./src/entries/main.ts","webpack:///../core/src/boot/init.ts","webpack:///../rum-core/src/boot/rumPublicApi.ts","webpack:///../rum-core/src/boot/startRum.ts","webpack:///../rum-core/src/transport/startRumEventBridge.ts","webpack:///../rum-core/src/domain/rumEventsCollection/longTask/longTaskCollection.ts","webpack:///../rum-core/src/domain/rumEventsCollection/view/startWebVitalTelemetryDebug.ts","webpack:///../rum-core/src/domain/contexts/internalContext.ts","webpack:///./src/domain/getSessionReplayLink.ts"],"sourcesContent":["/**\n * inspired by https://mathiasbynens.be/notes/globalthis\n */\n\nexport function getGlobalObject<T>(): T {\n  if (typeof globalThis === 'object') {\n    return globalThis as unknown as T\n  }\n  Object.defineProperty(Object.prototype, '_dd_temp_', {\n    get() {\n      return this as object\n    },\n    configurable: true,\n  })\n  // @ts-ignore _dd_temp is defined using defineProperty\n  let globalObject: unknown = _dd_temp_\n  // @ts-ignore _dd_temp is defined using defineProperty\n  delete Object.prototype._dd_temp_\n  if (typeof globalObject !== 'object') {\n    // on safari _dd_temp_ is available on window but not globally\n    // fallback on other browser globals check\n    if (typeof self === 'object') {\n      globalObject = self\n    } else if (typeof window === 'object') {\n      globalObject = window\n    } else {\n      globalObject = {}\n    }\n  }\n  return globalObject as T\n}\n","import { getGlobalObject } from './getGlobalObject'\n\nexport interface BrowserWindowWithZoneJs extends Window {\n  Zone?: {\n    // All Zone.js versions expose the __symbol__ method, but we observed that some website have a\n    // 'Zone' global variable unrelated to Zone.js, so let's consider this method optional\n    // nonetheless.\n    __symbol__?: (name: string) => string\n  }\n}\n\n/**\n * Gets the original value for a DOM API that was potentially patched by Zone.js.\n *\n * Zone.js[1] is a library that patches a bunch of JS and DOM APIs. It usually stores the original\n * value of the patched functions/constructors/methods in a hidden property prefixed by\n * __zone_symbol__.\n *\n * In multiple occasions, we observed that Zone.js is the culprit of important issues leading to\n * browser resource exhaustion (memory leak, high CPU usage). This method is used as a workaround to\n * use the original DOM API instead of the one patched by Zone.js.\n *\n * [1]: https://github.com/angular/angular/tree/main/packages/zone.js\n */\nexport function getZoneJsOriginalValue<Target, Name extends keyof Target & string>(\n  target: Target,\n  name: Name\n): Target[Name] {\n  const browserWindow = getGlobalObject<BrowserWindowWithZoneJs>()\n  let original: Target[Name] | undefined\n  if (browserWindow.Zone && typeof browserWindow.Zone.__symbol__ === 'function') {\n    original = (target as any)[browserWindow.Zone.__symbol__(name)]\n  }\n  if (!original) {\n    original = target[name]\n  }\n  return original\n}\n","/* eslint-disable local-rules/disallow-side-effects */\n/**\n * Keep references on console methods to avoid triggering patched behaviors\n *\n * NB: in some setup, console could already be patched by another SDK.\n * In this case, some display messages can be sent by the other SDK\n * but we should be safe from infinite loop nonetheless.\n */\n\nexport const ConsoleApiName = {\n  log: 'log',\n  debug: 'debug',\n  info: 'info',\n  warn: 'warn',\n  error: 'error',\n} as const\n\nexport type ConsoleApiName = (typeof ConsoleApiName)[keyof typeof ConsoleApiName]\n\ninterface Display {\n  (api: ConsoleApiName, ...args: any[]): void\n  debug: typeof console.debug\n  log: typeof console.log\n  info: typeof console.info\n  warn: typeof console.warn\n  error: typeof console.error\n}\n\nexport const display: Display = (api, ...args) => {\n  if (!Object.prototype.hasOwnProperty.call(ConsoleApiName, api)) {\n    api = ConsoleApiName.log\n  }\n  display[api](...args)\n}\n\n/**\n * When building JS bundles, some users might use a plugin[1] or configuration[2] to remove\n * \"console.*\" references. This causes some issue as we expect `console.*` to be defined.\n * As a workaround, let's use a variable alias, so those expressions won't be taken into account by\n * simple static analysis.\n *\n * [1]: https://babeljs.io/docs/babel-plugin-transform-remove-console/\n * [2]: https://github.com/terser/terser#compress-options (look for drop_console)\n */\nexport const globalConsole = console\n\ndisplay.debug = globalConsole.debug.bind(globalConsole)\ndisplay.log = globalConsole.log.bind(globalConsole)\ndisplay.info = globalConsole.info.bind(globalConsole)\ndisplay.warn = globalConsole.warn.bind(globalConsole)\ndisplay.error = globalConsole.error.bind(globalConsole)\n","import { ConsoleApiName, display } from './display'\n\nlet onMonitorErrorCollected: undefined | ((error: unknown) => void)\nlet debugMode = false\n\nexport function startMonitorErrorCollection(newOnMonitorErrorCollected: (error: unknown) => void) {\n  onMonitorErrorCollected = newOnMonitorErrorCollected\n}\n\nexport function setDebugMode(newDebugMode: boolean) {\n  debugMode = newDebugMode\n}\n\nexport function resetMonitor() {\n  onMonitorErrorCollected = undefined\n  debugMode = false\n}\n\nexport function monitored<T extends (...params: any[]) => unknown>(\n  _: any,\n  __: string,\n  descriptor: TypedPropertyDescriptor<T>\n) {\n  const originalMethod = descriptor.value!\n  descriptor.value = function (this: any, ...args: Parameters<T>) {\n    const decorated = onMonitorErrorCollected ? monitor(originalMethod) : originalMethod\n    return decorated.apply(this, args) as ReturnType<T>\n  } as T\n}\n\nexport function monitor<T extends (...args: any[]) => any>(fn: T): T {\n  return function (this: any) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return callMonitored(fn, this, arguments as unknown as Parameters<T>)\n  } as unknown as T // consider output type has input type\n}\n\nexport function callMonitored<T extends (...args: any[]) => any>(\n  fn: T,\n  context: ThisParameterType<T>,\n  args: Parameters<T>\n): ReturnType<T> | undefined\nexport function callMonitored<T extends (this: void) => any>(fn: T): ReturnType<T> | undefined\nexport function callMonitored<T extends (...args: any[]) => any>(\n  fn: T,\n  context?: any,\n  args?: any\n): ReturnType<T> | undefined {\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return fn.apply(context, args)\n  } catch (e) {\n    displayIfDebugEnabled(ConsoleApiName.error, e)\n    if (onMonitorErrorCollected) {\n      try {\n        onMonitorErrorCollected(e)\n      } catch (e) {\n        displayIfDebugEnabled(ConsoleApiName.error, e)\n      }\n    }\n  }\n}\n\nexport function displayIfDebugEnabled(api: ConsoleApiName, ...args: any[]) {\n  if (debugMode) {\n    display(api, '[MONITOR]', ...args)\n  }\n}\n","import { getZoneJsOriginalValue } from './getZoneJsOriginalValue'\nimport { monitor } from './monitor'\nimport { getGlobalObject } from './getGlobalObject'\n\nexport type TimeoutId = ReturnType<typeof window.setTimeout>\n\nexport function setTimeout(callback: () => void, delay?: number): TimeoutId {\n  return getZoneJsOriginalValue(getGlobalObject<Window>(), 'setTimeout')(monitor(callback), delay)\n}\n\nexport function clearTimeout(timeoutId: TimeoutId | undefined) {\n  getZoneJsOriginalValue(getGlobalObject<Window>(), 'clearTimeout')(timeoutId)\n}\n\nexport function setInterval(callback: () => void, delay?: number): TimeoutId {\n  return getZoneJsOriginalValue(window, 'setInterval')(monitor(callback), delay)\n}\n\nexport function clearInterval(timeoutId: TimeoutId | undefined) {\n  getZoneJsOriginalValue(window, 'clearInterval')(timeoutId)\n}\n","import type { TimeoutId } from '../timer'\nimport { setTimeout, clearTimeout } from '../timer'\n\n// use lodash API\nexport function throttle<T extends (...args: any[]) => void>(\n  fn: T,\n  wait: number,\n  options?: { leading?: boolean; trailing?: boolean }\n) {\n  const needLeadingExecution = options && options.leading !== undefined ? options.leading : true\n  const needTrailingExecution = options && options.trailing !== undefined ? options.trailing : true\n  let inWaitPeriod = false\n  let pendingExecutionWithParameters: Parameters<T> | undefined\n  let pendingTimeoutId: TimeoutId\n\n  return {\n    throttled: (...parameters: Parameters<T>) => {\n      if (inWaitPeriod) {\n        pendingExecutionWithParameters = parameters\n        return\n      }\n      if (needLeadingExecution) {\n        fn(...parameters)\n      } else {\n        pendingExecutionWithParameters = parameters\n      }\n      inWaitPeriod = true\n      pendingTimeoutId = setTimeout(() => {\n        if (needTrailingExecution && pendingExecutionWithParameters) {\n          fn(...pendingExecutionWithParameters)\n        }\n        inWaitPeriod = false\n        pendingExecutionWithParameters = undefined\n      }, wait)\n    },\n    cancel: () => {\n      clearTimeout(pendingTimeoutId)\n      inWaitPeriod = false\n      pendingExecutionWithParameters = undefined\n    },\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport function noop() {}\n\nexport type ListenerHandler = () => void\n","export interface Subscription {\n  unsubscribe: () => void\n}\n\nexport class Observable<T> {\n  private observers: Array<(data: T) => void> = []\n  private onLastUnsubscribe?: () => void\n\n  constructor(private onFirstSubscribe?: () => (() => void) | void) {}\n\n  subscribe(f: (data: T) => void): Subscription {\n    if (!this.observers.length && this.onFirstSubscribe) {\n      this.onLastUnsubscribe = this.onFirstSubscribe() || undefined\n    }\n    this.observers.push(f)\n    return {\n      unsubscribe: () => {\n        this.observers = this.observers.filter((other) => f !== other)\n        if (!this.observers.length && this.onLastUnsubscribe) {\n          this.onLastUnsubscribe()\n        }\n      },\n    }\n  }\n\n  notify(data: T) {\n    this.observers.forEach((observer) => observer(data))\n  }\n}\n\nexport function mergeObservables<T>(...observables: Array<Observable<T>>) {\n  const globalObservable = new Observable<T>(() => {\n    const subscriptions: Subscription[] = observables.map((observable) =>\n      observable.subscribe((data) => globalObservable.notify(data))\n    )\n    return () => subscriptions.forEach((subscription) => subscription.unsubscribe())\n  })\n\n  return globalObservable\n}\n","import { display } from './display'\n\nexport function catchUserErrors<Args extends any[], R>(fn: (...args: Args) => R, errorMsg: string) {\n  return (...args: Args) => {\n    try {\n      return fn(...args)\n    } catch (err) {\n      display.error(errorMsg, err)\n    }\n  }\n}\n","export function includes(candidate: string, search: string): boolean\nexport function includes<T>(candidate: T[], search: T): boolean\nexport function includes(candidate: string | unknown[], search: any) {\n  return candidate.indexOf(search) !== -1\n}\n\nexport function arrayFrom<T>(arrayLike: ArrayLike<T> | Set<T>): T[] {\n  if (Array.from) {\n    return Array.from(arrayLike)\n  }\n\n  const array = []\n\n  if (arrayLike instanceof Set) {\n    arrayLike.forEach((item) => array.push(item))\n  } else {\n    for (let i = 0; i < arrayLike.length; i++) {\n      array.push(arrayLike[i])\n    }\n  }\n\n  return array\n}\n\nexport function find<T, S extends T>(\n  array: ArrayLike<T>,\n  predicate: (item: T, index: number) => item is S\n): S | undefined\nexport function find<T>(array: ArrayLike<T>, predicate: (item: T, index: number) => boolean): T | undefined\nexport function find(\n  array: ArrayLike<unknown>,\n  predicate: (item: unknown, index: number) => boolean\n): unknown | undefined {\n  for (let i = 0; i < array.length; i += 1) {\n    const item = array[i]\n    if (predicate(item, i)) {\n      return item\n    }\n  }\n  return undefined\n}\n\nexport function findLast<T, S extends T>(\n  array: T[],\n  predicate: (item: T, index: number, array: T[]) => item is S\n): S | undefined {\n  for (let i = array.length - 1; i >= 0; i -= 1) {\n    const item = array[i]\n    if (predicate(item, i, array)) {\n      return item\n    }\n  }\n  return undefined\n}\n\nexport function forEach<List extends { [index: number]: any }>(\n  list: List,\n  callback: (value: List[number], index: number, parent: List) => void\n) {\n  Array.prototype.forEach.call(list, callback as any)\n}\n\nexport function objectValues<T = unknown>(object: { [key: string]: T }) {\n  return Object.keys(object).map((key) => object[key])\n}\n\nexport function objectEntries<T = unknown>(object: { [key: string]: T }): Array<[string, T]> {\n  return Object.keys(object).map((key) => [key, object[key]])\n}\n\nexport function startsWith(candidate: string, search: string) {\n  return candidate.slice(0, search.length) === search\n}\n\nexport function endsWith(candidate: string, search: string) {\n  return candidate.slice(-search.length) === search\n}\n\nexport function elementMatches(element: Element & { msMatchesSelector?(selector: string): boolean }, selector: string) {\n  if (element.matches) {\n    return element.matches(selector)\n  }\n  // IE11 support\n  if (element.msMatchesSelector) {\n    return element.msMatchesSelector(selector)\n  }\n  return false\n}\n\n// https://github.com/jquery/jquery/blob/a684e6ba836f7c553968d7d026ed7941e1a612d8/src/selector/escapeSelector.js\nexport function cssEscape(str: string) {\n  if (window.CSS && window.CSS.escape) {\n    return window.CSS.escape(str)\n  }\n\n  // eslint-disable-next-line no-control-regex\n  return str.replace(/([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\x80-\\uFFFF\\w-]/g, function (ch, asCodePoint) {\n    if (asCodePoint) {\n      // U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n      if (ch === '\\0') {\n        return '\\uFFFD'\n      }\n      // Control characters and (dependent upon position) numbers get escaped as code points\n      return `${ch.slice(0, -1)}\\\\${ch.charCodeAt(ch.length - 1).toString(16)} `\n    }\n    // Other potentially-special ASCII characters get backslash-escaped\n    return `\\\\${ch}`\n  })\n}\n\ninterface Assignable {\n  [key: string]: any\n}\n\nexport function assign<T, U>(target: T, source: U): T & U\nexport function assign<T, U, V>(target: T, source1: U, source2: V): T & U & V\nexport function assign<T, U, V, W>(target: T, source1: U, source2: V, source3: W): T & U & V & W\nexport function assign(target: Assignable, ...toAssign: Assignable[]) {\n  toAssign.forEach((source: Assignable) => {\n    for (const key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key]\n      }\n    }\n  })\n  return target\n}\n","export const ONE_KIBI_BYTE = 1024\nexport const ONE_MEBI_BYTE = 1024 * ONE_KIBI_BYTE\n\n// eslint-disable-next-line no-control-regex\nconst HAS_MULTI_BYTES_CHARACTERS = /[^\\u0000-\\u007F]/\n\nexport function computeBytesCount(candidate: string): number {\n  // Accurate bytes count computations can degrade performances when there is a lot of events to process\n  if (!HAS_MULTI_BYTES_CHARACTERS.test(candidate)) {\n    return candidate.length\n  }\n\n  if (window.TextEncoder !== undefined) {\n    return new TextEncoder().encode(candidate).length\n  }\n\n  return new Blob([candidate]).size\n}\n\nexport function concatBuffers(buffers: Uint8Array[]) {\n  const length = buffers.reduce((total, buffer) => total + buffer.length, 0)\n  const result = new Uint8Array(length)\n  let offset = 0\n  for (const buffer of buffers) {\n    result.set(buffer, offset)\n    offset += buffer.length\n  }\n  return result\n}\n","/**\n * Similar to `typeof`, but distinguish plain objects from `null` and arrays\n */\nexport function getType(value: unknown) {\n  if (value === null) {\n    return 'null'\n  }\n  if (Array.isArray(value)) {\n    return 'array'\n  }\n  return typeof value\n}\n","import { getType } from './utils/typeUtils'\n\ntype Merged<TDestination, TSource> =\n  // case 1 - source is undefined - return destination\n  TSource extends undefined\n    ? TDestination\n    : // case 2 - destination is undefined - return source\n    TDestination extends undefined\n    ? TSource\n    : // case 3 - source is an array - see if it merges or overwrites\n    TSource extends any[]\n    ? TDestination extends any[]\n      ? TDestination & TSource\n      : TSource\n    : // case 4 - source is an object - see if it merges or overwrites\n    TSource extends object\n    ? TDestination extends object\n      ? TDestination extends any[]\n        ? TSource\n        : TDestination & TSource\n      : TSource\n    : // case 5 - cannot merge - return source\n      TSource\n\n/**\n * Iterate over source and affect its sub values into destination, recursively.\n * If the source and destination can't be merged, return source.\n */\nexport function mergeInto<D, S>(\n  destination: D,\n  source: S,\n  circularReferenceChecker = createCircularReferenceChecker()\n): Merged<D, S> {\n  // ignore the source if it is undefined\n  if (source === undefined) {\n    return destination as Merged<D, S>\n  }\n\n  if (typeof source !== 'object' || source === null) {\n    // primitive values - just return source\n    return source as Merged<D, S>\n  } else if (source instanceof Date) {\n    return new Date(source.getTime()) as unknown as Merged<D, S>\n  } else if (source instanceof RegExp) {\n    const flags =\n      source.flags ||\n      // old browsers compatibility\n      [\n        source.global ? 'g' : '',\n        source.ignoreCase ? 'i' : '',\n        source.multiline ? 'm' : '',\n        source.sticky ? 'y' : '',\n        source.unicode ? 'u' : '',\n      ].join('')\n    return new RegExp(source.source, flags) as unknown as Merged<D, S>\n  }\n\n  if (circularReferenceChecker.hasAlreadyBeenSeen(source)) {\n    // remove circular references\n    return undefined as unknown as Merged<D, S>\n  } else if (Array.isArray(source)) {\n    const merged: any[] = Array.isArray(destination) ? destination : []\n    for (let i = 0; i < source.length; ++i) {\n      merged[i] = mergeInto(merged[i], source[i], circularReferenceChecker)\n    }\n    return merged as unknown as Merged<D, S>\n  }\n\n  const merged = getType(destination) === 'object' ? (destination as Record<any, any>) : {}\n  for (const key in source) {\n    if (Object.prototype.hasOwnProperty.call(source, key)) {\n      merged[key] = mergeInto(merged[key], source[key], circularReferenceChecker)\n    }\n  }\n  return merged as unknown as Merged<D, S>\n}\n\n/**\n * A simplistic implementation of a deep clone algorithm.\n * Caveats:\n * - It doesn't maintain prototype chains - don't use with instances of custom classes.\n * - It doesn't handle Map and Set\n */\nexport function deepClone<T>(value: T): T {\n  return mergeInto(undefined, value) as T\n}\n\ntype Combined<A, B> = A extends null ? B : B extends null ? A : Merged<A, B>\n\n/*\n * Performs a deep merge of objects and arrays.\n * - Arguments won't be mutated\n * - Object and arrays in the output value are de-referenced (\"deep cloned\")\n * - Arrays values are merged index by index\n * - Objects are merged by keys\n * - Values get replaced, unless undefined\n */\nexport function combine<A, B>(a: A, b: B): Combined<A, B>\nexport function combine<A, B, C>(a: A, b: B, c: C): Combined<Combined<A, B>, C>\nexport function combine<A, B, C, D>(a: A, b: B, c: C, d: D): Combined<Combined<Combined<A, B>, C>, D>\nexport function combine<A, B, C, D, E>(\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n  e: E\n): Combined<Combined<Combined<Combined<A, B>, C>, D>, E>\nexport function combine<A, B, C, D, E, F>(\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n  e: E,\n  f: F\n): Combined<Combined<Combined<Combined<Combined<A, B>, C>, D>, E>, F>\nexport function combine<A, B, C, D, E, F, G>(\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n  e: E,\n  f: F,\n  g: G\n): Combined<Combined<Combined<Combined<Combined<Combined<A, B>, C>, D>, E>, F>, G>\nexport function combine<A, B, C, D, E, F, G, H>(\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n  e: E,\n  f: F,\n  g: G,\n  h: H\n): Combined<Combined<Combined<Combined<Combined<Combined<Combined<A, B>, C>, D>, E>, F>, G>, H>\nexport function combine(...sources: any[]): unknown {\n  let destination: any\n\n  for (const source of sources) {\n    // Ignore any undefined or null sources.\n    if (source === undefined || source === null) {\n      continue\n    }\n\n    destination = mergeInto(destination, source)\n  }\n\n  return destination as unknown\n}\n\ninterface CircularReferenceChecker {\n  hasAlreadyBeenSeen(value: any): boolean\n}\n\nfunction createCircularReferenceChecker(): CircularReferenceChecker {\n  if (typeof WeakSet !== 'undefined') {\n    const set: WeakSet<any> = new WeakSet()\n    return {\n      hasAlreadyBeenSeen(value) {\n        const has = set.has(value)\n        if (!has) {\n          set.add(value)\n        }\n        return has\n      },\n    }\n  }\n  const array: any[] = []\n  return {\n    hasAlreadyBeenSeen(value) {\n      const has = array.indexOf(value) >= 0\n      if (!has) {\n        array.push(value)\n      }\n      return has\n    },\n  }\n}\n","import { noop } from '../utils/functionUtils'\n\n/**\n * Custom implementation of JSON.stringify that ignores some toJSON methods. We need to do that\n * because some sites badly override toJSON on certain objects. Removing all toJSON methods from\n * nested values would be too costly, so we just detach them from the root value, and native classes\n * used to build JSON values (Array and Object).\n *\n * Note: this still assumes that JSON.stringify is correct.\n */\nexport function jsonStringify(\n  value: unknown,\n  replacer?: Array<string | number>,\n  space?: string | number\n): string | undefined {\n  if (typeof value !== 'object' || value === null) {\n    return JSON.stringify(value)\n  }\n\n  // Note: The order matter here. We need to detach toJSON methods on parent classes before their\n  // subclasses.\n  const restoreObjectPrototypeToJson = detachToJsonMethod(Object.prototype)\n  const restoreArrayPrototypeToJson = detachToJsonMethod(Array.prototype)\n  const restoreValuePrototypeToJson = detachToJsonMethod(Object.getPrototypeOf(value))\n  const restoreValueToJson = detachToJsonMethod(value)\n\n  try {\n    return JSON.stringify(value, replacer, space)\n  } catch {\n    return '<error: unable to serialize object>'\n  } finally {\n    restoreObjectPrototypeToJson()\n    restoreArrayPrototypeToJson()\n    restoreValuePrototypeToJson()\n    restoreValueToJson()\n  }\n}\n\nexport interface ObjectWithToJsonMethod {\n  toJSON?: () => unknown\n}\n\nexport function detachToJsonMethod(value: object) {\n  const object = value as ObjectWithToJsonMethod\n  const objectToJson = object.toJSON\n  if (objectToJson) {\n    delete object.toJSON\n    return () => {\n      object.toJSON = objectToJson\n    }\n  }\n  return noop\n}\n","import { display } from '../display'\nimport { ONE_KIBI_BYTE } from '../utils/byteUtils'\nimport type { Context, ContextArray, ContextValue } from './context'\nimport type { ObjectWithToJsonMethod } from './jsonStringify'\nimport { detachToJsonMethod } from './jsonStringify'\n\n// eslint-disable-next-line @typescript-eslint/ban-types\ntype PrimitivesAndFunctions = string | number | boolean | undefined | null | symbol | bigint | Function\ntype ExtendedContextValue = PrimitivesAndFunctions | object | ExtendedContext | ExtendedContextArray\ntype ExtendedContext = { [key: string]: ExtendedContextValue }\ntype ExtendedContextArray = ExtendedContextValue[]\n\ntype ContainerElementToProcess = {\n  source: ExtendedContextArray | ExtendedContext\n  target: ContextArray | Context\n  path: string\n}\n\n// The maximum size of a single event is 256KiB. By default, we ensure that user-provided data\n// going through sanitize fits inside our events, while leaving room for other contexts, metadata, ...\nconst SANITIZE_DEFAULT_MAX_CHARACTER_COUNT = 220 * ONE_KIBI_BYTE\n\n// Symbol for the root element of the JSONPath used for visited objects\nconst JSON_PATH_ROOT_ELEMENT = '$'\n\n// When serializing (using JSON.stringify) a key of an object, { key: 42 } gets wrapped in quotes as \"key\".\n// With the separator (:), we need to add 3 characters to the count.\nconst KEY_DECORATION_LENGTH = 3\n\n/**\n * Ensures user-provided data is 'safe' for the SDK\n * - Deep clones data\n * - Removes cyclic references\n * - Transforms unserializable types to a string representation\n *\n * LIMITATIONS:\n * - Size is in characters, not byte count (may differ according to character encoding)\n * - Size does not take into account indentation that can be applied to JSON.stringify\n * - Non-numerical properties of Arrays are ignored. Same behavior as JSON.stringify\n *\n * @param source              User-provided data meant to be serialized using JSON.stringify\n * @param maxCharacterCount   Maximum number of characters allowed in serialized form\n */\nexport function sanitize(source: string, maxCharacterCount?: number): string | undefined\nexport function sanitize(source: Context, maxCharacterCount?: number): Context\nexport function sanitize(source: unknown, maxCharacterCount?: number): ContextValue\nexport function sanitize(source: unknown, maxCharacterCount = SANITIZE_DEFAULT_MAX_CHARACTER_COUNT) {\n  // Unbind any toJSON function we may have on [] or {} prototypes\n  const restoreObjectPrototypeToJson = detachToJsonMethod(Object.prototype)\n  const restoreArrayPrototypeToJson = detachToJsonMethod(Array.prototype)\n\n  // Initial call to sanitizeProcessor - will populate containerQueue if source is an Array or a plain Object\n  const containerQueue: ContainerElementToProcess[] = []\n  const visitedObjectsWithPath = new WeakMap<object, string>()\n  const sanitizedData = sanitizeProcessor(\n    source as ExtendedContextValue,\n    JSON_PATH_ROOT_ELEMENT,\n    undefined,\n    containerQueue,\n    visitedObjectsWithPath\n  )\n  let accumulatedCharacterCount = JSON.stringify(sanitizedData)?.length || 0\n  if (accumulatedCharacterCount > maxCharacterCount) {\n    warnOverCharacterLimit(maxCharacterCount, 'discarded', source)\n    return undefined\n  }\n\n  while (containerQueue.length > 0 && accumulatedCharacterCount < maxCharacterCount) {\n    const containerToProcess = containerQueue.shift()!\n    let separatorLength = 0 // 0 for the first element, 1 for subsequent elements\n\n    // Arrays and Objects have to be handled distinctly to ensure\n    // we do not pick up non-numerical properties from Arrays\n    if (Array.isArray(containerToProcess.source)) {\n      for (let key = 0; key < containerToProcess.source.length; key++) {\n        const targetData = sanitizeProcessor(\n          containerToProcess.source[key],\n          containerToProcess.path,\n          key,\n          containerQueue,\n          visitedObjectsWithPath\n        )\n\n        if (targetData !== undefined) {\n          accumulatedCharacterCount += JSON.stringify(targetData).length\n        } else {\n          // When an element of an Array (targetData) is undefined, it is serialized as null:\n          // JSON.stringify([undefined]) => '[null]' - This accounts for 4 characters\n          accumulatedCharacterCount += 4\n        }\n        accumulatedCharacterCount += separatorLength\n        separatorLength = 1\n        if (accumulatedCharacterCount > maxCharacterCount) {\n          warnOverCharacterLimit(maxCharacterCount, 'truncated', source)\n          break\n        }\n        ;(containerToProcess.target as ContextArray)[key] = targetData\n      }\n    } else {\n      for (const key in containerToProcess.source) {\n        if (Object.prototype.hasOwnProperty.call(containerToProcess.source, key)) {\n          const targetData = sanitizeProcessor(\n            containerToProcess.source[key],\n            containerToProcess.path,\n            key,\n            containerQueue,\n            visitedObjectsWithPath\n          )\n          // When a property of an object has an undefined value, it will be dropped during serialization:\n          // JSON.stringify({a:undefined}) => '{}'\n          if (targetData !== undefined) {\n            accumulatedCharacterCount +=\n              JSON.stringify(targetData).length + separatorLength + key.length + KEY_DECORATION_LENGTH\n            separatorLength = 1\n          }\n          if (accumulatedCharacterCount > maxCharacterCount) {\n            warnOverCharacterLimit(maxCharacterCount, 'truncated', source)\n            break\n          }\n          ;(containerToProcess.target as Context)[key] = targetData\n        }\n      }\n    }\n  }\n\n  // Rebind detached toJSON functions\n  restoreObjectPrototypeToJson()\n  restoreArrayPrototypeToJson()\n\n  return sanitizedData\n}\n\n/**\n * Internal function to factorize the process common to the\n * initial call to sanitize, and iterations for Arrays and Objects\n *\n */\nfunction sanitizeProcessor(\n  source: ExtendedContextValue,\n  parentPath: string,\n  key: string | number | undefined,\n  queue: ContainerElementToProcess[],\n  visitedObjectsWithPath: WeakMap<object, string>\n) {\n  // Start by handling toJSON, as we want to sanitize its output\n  const sourceToSanitize = tryToApplyToJSON(source)\n\n  if (!sourceToSanitize || typeof sourceToSanitize !== 'object') {\n    return sanitizePrimitivesAndFunctions(sourceToSanitize)\n  }\n\n  const sanitizedSource = sanitizeObjects(sourceToSanitize)\n  if (sanitizedSource !== '[Object]' && sanitizedSource !== '[Array]' && sanitizedSource !== '[Error]') {\n    return sanitizedSource\n  }\n\n  // Handle potential cyclic references\n  // We need to use source as sourceToSanitize could be a reference to a new object\n  // At this stage, we know the source is an object type\n  const sourceAsObject = source as object\n  if (visitedObjectsWithPath.has(sourceAsObject)) {\n    return `[Reference seen at ${visitedObjectsWithPath.get(sourceAsObject)!}]`\n  }\n\n  // Add processed source to queue\n  const currentPath = key !== undefined ? `${parentPath}.${key}` : parentPath\n  const target = Array.isArray(sourceToSanitize) ? ([] as ContextArray) : ({} as Context)\n  visitedObjectsWithPath.set(sourceAsObject, currentPath)\n  queue.push({ source: sourceToSanitize as ExtendedContext | ExtendedContextArray, target, path: currentPath })\n\n  return target\n}\n\n/**\n * Handles sanitization of simple, non-object types\n *\n */\nfunction sanitizePrimitivesAndFunctions(value: PrimitivesAndFunctions) {\n  // BigInt cannot be serialized by JSON.stringify(), convert it to a string representation\n  if (typeof value === 'bigint') {\n    return `[BigInt] ${value.toString()}`\n  }\n  // Functions cannot be serialized by JSON.stringify(). Moreover, if a faulty toJSON is present, it needs to be converted\n  // so it won't prevent stringify from serializing later\n  if (typeof value === 'function') {\n    return `[Function] ${value.name || 'unknown'}`\n  }\n  // JSON.stringify() does not serialize symbols.\n  if (typeof value === 'symbol') {\n    // symbol.description is part of ES2019+\n    type symbolWithDescription = symbol & { description: string }\n    return `[Symbol] ${(value as symbolWithDescription).description || value.toString()}`\n  }\n\n  return value\n}\n\n/**\n * Handles sanitization of object types\n *\n * LIMITATIONS\n * - If a class defines a toStringTag Symbol, it will fall in the catch-all method and prevent enumeration of properties.\n * To avoid this, a toJSON method can be defined.\n * - IE11 does not return a distinct type for objects such as Map, WeakMap, ... These objects will pass through and their\n * properties enumerated if any.\n *\n */\nfunction sanitizeObjects(value: object) {\n  try {\n    // Handle events - Keep a simple implementation to avoid breaking changes\n    if (value instanceof Event) {\n      return {\n        isTrusted: value.isTrusted,\n      }\n    }\n\n    // Handle all remaining object types in a generic way\n    const result = Object.prototype.toString.call(value)\n    const match = result.match(/\\[object (.*)\\]/)\n    if (match && match[1]) {\n      return `[${match[1]}]`\n    }\n  } catch {\n    // If the previous serialization attempts failed, and we cannot convert using\n    // Object.prototype.toString, declare the value unserializable\n  }\n  return '[Unserializable]'\n}\n\n/**\n * Checks if a toJSON function exists and tries to execute it\n *\n */\nfunction tryToApplyToJSON(value: ExtendedContextValue) {\n  const object = value as ObjectWithToJsonMethod\n  if (object && typeof object.toJSON === 'function') {\n    try {\n      return object.toJSON() as ExtendedContextValue\n    } catch {\n      // If toJSON fails, we continue by trying to serialize the value manually\n    }\n  }\n\n  return value\n}\n\n/**\n * Helper function to display the warning when the accumulated character count is over the limit\n */\nfunction warnOverCharacterLimit(maxCharacterCount: number, changeType: 'discarded' | 'truncated', source: unknown) {\n  display.warn(\n    `The data provided has been ${changeType} as it is over the limit of ${maxCharacterCount} characters:`,\n    source\n  )\n}\n","import { ONE_KIBI_BYTE } from '../utils/byteUtils'\nimport { display } from '../display'\n\n// RUM and logs batch bytes limit is 16KB\n// ensure that we leave room for other event attributes and maintain a decent amount of event per batch\n// (3KB (customer data) + 1KB (other attributes)) * 4 (events per batch) = 16KB\nexport const CUSTOMER_DATA_BYTES_LIMIT = 3 * ONE_KIBI_BYTE\n\nexport const enum CustomerDataType {\n  FeatureFlag = 'feature flag evaluation',\n  User = 'user',\n  GlobalContext = 'global context',\n  LoggerContext = 'logger context',\n}\n\nexport function warnIfCustomerDataLimitReached(bytesCount: number, customerDataType: CustomerDataType): boolean {\n  if (bytesCount > CUSTOMER_DATA_BYTES_LIMIT) {\n    display.warn(\n      `The ${customerDataType} data exceeds the recommended ${\n        CUSTOMER_DATA_BYTES_LIMIT / ONE_KIBI_BYTE\n      }KiB threshold. More details: https://docs.datadoghq.com/real_user_monitoring/browser/troubleshooting/#customer-data-exceeds-the-recommended-3kib-warning`\n    )\n    return true\n  }\n  return false\n}\n","import { computeBytesCount } from '../utils/byteUtils'\nimport { throttle } from '../utils/functionUtils'\nimport { deepClone } from '../mergeInto'\nimport { getType } from '../utils/typeUtils'\nimport { jsonStringify } from './jsonStringify'\nimport { sanitize } from './sanitize'\nimport { warnIfCustomerDataLimitReached } from './heavyCustomerDataWarning'\nimport type { CustomerDataType } from './heavyCustomerDataWarning'\nimport type { Context, ContextValue } from './context'\n\nexport const BYTES_COMPUTATION_THROTTLING_DELAY = 200\n\nexport type ContextManager = ReturnType<typeof createContextManager>\n\nexport function createContextManager(customerDataType: CustomerDataType, computeBytesCountImpl = computeBytesCount) {\n  let context: Context = {}\n  let bytesCountCache: number\n  let alreadyWarned = false\n\n  // Throttle the bytes computation to minimize the impact on performance.\n  // Especially useful if the user call context APIs synchronously multiple times in a row\n  const { throttled: computeBytesCountThrottled } = throttle((context: Context) => {\n    bytesCountCache = computeBytesCountImpl(jsonStringify(context)!)\n    if (!alreadyWarned) {\n      alreadyWarned = warnIfCustomerDataLimitReached(bytesCountCache, customerDataType)\n    }\n  }, BYTES_COMPUTATION_THROTTLING_DELAY)\n\n  const contextManager = {\n    getBytesCount: () => bytesCountCache,\n    /** @deprecated use getContext instead */\n    get: () => context,\n\n    /** @deprecated use setContextProperty instead */\n    add: (key: string, value: any) => {\n      context[key] = value as ContextValue\n      computeBytesCountThrottled(context)\n    },\n\n    /** @deprecated renamed to removeContextProperty */\n    remove: (key: string) => {\n      delete context[key]\n      computeBytesCountThrottled(context)\n    },\n\n    /** @deprecated use setContext instead */\n    set: (newContext: object) => {\n      context = newContext as Context\n      computeBytesCountThrottled(context)\n    },\n\n    getContext: () => deepClone(context),\n\n    setContext: (newContext: Context) => {\n      if (getType(newContext) === 'object') {\n        context = sanitize(newContext)\n        computeBytesCountThrottled(context)\n      } else {\n        contextManager.clearContext()\n      }\n    },\n\n    setContextProperty: (key: string, property: any) => {\n      context[key] = sanitize(property)\n      computeBytesCountThrottled(context)\n    },\n\n    removeContextProperty: (key: string) => {\n      delete context[key]\n      computeBytesCountThrottled(context)\n    },\n\n    clearContext: () => {\n      context = {}\n      bytesCountCache = 0\n    },\n  }\n  return contextManager\n}\n","const BUFFER_LIMIT = 500\n\nexport class BoundedBuffer {\n  private buffer: Array<() => void> = []\n\n  add(callback: () => void) {\n    const length = this.buffer.push(callback)\n    if (length > BUFFER_LIMIT) {\n      this.buffer.splice(0, 1)\n    }\n  }\n\n  drain() {\n    this.buffer.forEach((callback) => callback())\n    this.buffer.length = 0\n  }\n}\n","/**\n * Return true if the draw is successful\n * @param threshold between 0 and 100\n */\nexport function performDraw(threshold: number): boolean {\n  return threshold !== 0 && Math.random() * 100 <= threshold\n}\n\nexport function round(num: number, decimals: 0 | 1 | 2 | 3 | 4) {\n  return +num.toFixed(decimals)\n}\n\nexport function isPercentage(value: unknown) {\n  return isNumber(value) && value >= 0 && value <= 100\n}\n\nexport function isNumber(value: unknown): value is number {\n  return typeof value === 'number'\n}\n","import { isNumber, round } from './numberUtils'\n\nexport const ONE_SECOND = 1000\nexport const ONE_MINUTE = 60 * ONE_SECOND\nexport const ONE_HOUR = 60 * ONE_MINUTE\nexport const ONE_DAY = 24 * ONE_HOUR\nexport const ONE_YEAR = 365 * ONE_DAY\n\nexport type Duration = number & { d: 'Duration in ms' }\nexport type ServerDuration = number & { s: 'Duration in ns' }\nexport type TimeStamp = number & { t: 'Epoch time' }\nexport type RelativeTime = number & { r: 'Time relative to navigation start' } & { d: 'Duration in ms' }\nexport type ClocksState = { relative: RelativeTime; timeStamp: TimeStamp }\n\nexport function relativeToClocks(relative: RelativeTime) {\n  return { relative, timeStamp: getCorrectedTimeStamp(relative) }\n}\n\nfunction getCorrectedTimeStamp(relativeTime: RelativeTime) {\n  const correctedOrigin = (dateNow() - performance.now()) as TimeStamp\n  // apply correction only for positive drift\n  if (correctedOrigin > getNavigationStart()) {\n    return Math.round(addDuration(correctedOrigin, relativeTime)) as TimeStamp\n  }\n  return getTimeStamp(relativeTime)\n}\n\nexport function currentDrift() {\n  return Math.round(dateNow() - addDuration(getNavigationStart(), performance.now() as Duration))\n}\n\nexport function toServerDuration(duration: Duration): ServerDuration\nexport function toServerDuration(duration: Duration | undefined): ServerDuration | undefined\nexport function toServerDuration(duration: Duration | undefined) {\n  if (!isNumber(duration)) {\n    return duration\n  }\n  return round(duration * 1e6, 0) as ServerDuration\n}\n\nexport function dateNow() {\n  // Do not use `Date.now` because sometimes websites are wrongly \"polyfilling\" it. For example, we\n  // had some users using a very old version of `datejs`, which patched `Date.now` to return a Date\n  // instance instead of a timestamp[1]. Those users are unlikely to fix this, so let's handle this\n  // case ourselves.\n  // [1]: https://github.com/datejs/Datejs/blob/97f5c7c58c5bc5accdab8aa7602b6ac56462d778/src/core-debug.js#L14-L16\n  return new Date().getTime()\n}\n\nexport function timeStampNow() {\n  return dateNow() as TimeStamp\n}\n\nexport function relativeNow() {\n  return performance.now() as RelativeTime\n}\n\nexport function clocksNow() {\n  return { relative: relativeNow(), timeStamp: timeStampNow() }\n}\n\nexport function clocksOrigin() {\n  return { relative: 0 as RelativeTime, timeStamp: getNavigationStart() }\n}\n\nexport function elapsed(start: TimeStamp, end: TimeStamp): Duration\nexport function elapsed(start: RelativeTime, end: RelativeTime): Duration\nexport function elapsed(start: number, end: number) {\n  return (end - start) as Duration\n}\n\nexport function addDuration(a: TimeStamp, b: Duration): TimeStamp\nexport function addDuration(a: RelativeTime, b: Duration): RelativeTime\nexport function addDuration(a: Duration, b: Duration): Duration\nexport function addDuration(a: number, b: number) {\n  return a + b\n}\n\n/**\n * Get the time since the navigation was started.\n *\n * Note: this does not use `performance.timeOrigin` because it doesn't seem to reflect the actual\n * time on which the navigation has started: it may be much farther in the past, at least in Firefox 71.\n * Related issue in Firefox: https://bugzilla.mozilla.org/show_bug.cgi?id=1429926\n */\nexport function getRelativeTime(timestamp: TimeStamp) {\n  return (timestamp - getNavigationStart()) as RelativeTime\n}\n\nexport function getTimeStamp(relativeTime: RelativeTime) {\n  return Math.round(addDuration(getNavigationStart(), relativeTime)) as TimeStamp\n}\n\nexport function looksLikeRelativeTime(time: RelativeTime | TimeStamp): time is RelativeTime {\n  return time < ONE_YEAR\n}\n\n/**\n * Navigation start slightly change on some rare cases\n */\nlet navigationStart: TimeStamp | undefined\n\nfunction getNavigationStart() {\n  if (navigationStart === undefined) {\n    navigationStart = performance.timing.navigationStart as TimeStamp\n  }\n  return navigationStart\n}\n\nexport function resetNavigationStart() {\n  navigationStart = undefined\n}\n","/**\n * UUID v4\n * from https://gist.github.com/jed/982883\n */\nexport function generateUUID(placeholder?: string): string {\n  return placeholder\n    ? // eslint-disable-next-line  no-bitwise\n      (parseInt(placeholder, 10) ^ ((Math.random() * 16) >> (parseInt(placeholder, 10) / 4))).toString(16)\n    : `${1e7}-${1e3}-${4e3}-${8e3}-${1e11}`.replace(/[018]/g, generateUUID)\n}\n\nexport function findCommaSeparatedValue(rawString: string, name: string) {\n  const regex = new RegExp(`(?:^|;)\\\\s*${name}\\\\s*=\\\\s*([^;]+)`)\n  const matches = regex.exec(rawString)\n  return matches ? matches[1] : undefined\n}\n\nexport function safeTruncate(candidate: string, length: number, suffix = '') {\n  const lastChar = candidate.charCodeAt(length - 1)\n  const isLastCharSurrogatePair = lastChar >= 0xd800 && lastChar <= 0xdbff\n  const correctedLength = isLastCharSurrogatePair ? length + 1 : length\n\n  if (candidate.length <= correctedLength) {\n    return candidate\n  }\n\n  return `${candidate.slice(0, correctedLength)}${suffix}`\n}\n","import { display } from '../tools/display'\nimport { ONE_MINUTE, ONE_SECOND } from '../tools/utils/timeUtils'\nimport { generateUUID } from '../tools/utils/stringUtils'\n\nexport interface CookieOptions {\n  secure?: boolean\n  crossSite?: boolean\n  domain?: string\n}\n\nconst cookieMap = new Map<string, string>()\n\nexport function setCookie(name: string, value: string, _expireDelay: number, _options?: CookieOptions) {\n  cookieMap.set(name, value)\n}\n\nexport function getCookie(name: string) {\n  return cookieMap.get(name)\n}\n\nexport function deleteCookie(name: string, _options?: CookieOptions) {\n  cookieMap.delete(name)\n}\n\nexport function areCookiesAuthorized(options: CookieOptions): boolean {\n  if (document.cookie === undefined || document.cookie === null) {\n    return false\n  }\n  try {\n    // Use a unique cookie name to avoid issues when the SDK is initialized multiple times during\n    // the test cookie lifetime\n    const testCookieName = `dd_cookie_test_${generateUUID()}`\n    const testCookieValue = 'test'\n    setCookie(testCookieName, testCookieValue, ONE_MINUTE, options)\n    const isCookieCorrectlySet = getCookie(testCookieName) === testCookieValue\n    deleteCookie(testCookieName, options)\n    return isCookieCorrectlySet\n  } catch (error) {\n    display.error(error)\n    return false\n  }\n}\n\n/**\n * No API to retrieve it, number of levels for subdomain and suffix are unknown\n * strategy: find the minimal domain on which cookies are allowed to be set\n * https://web.dev/same-site-same-origin/#site\n */\nlet getCurrentSiteCache: string | undefined\nexport function getCurrentSite() {\n  if (getCurrentSiteCache === undefined) {\n    // Use a unique cookie name to avoid issues when the SDK is initialized multiple times during\n    // the test cookie lifetime\n    const testCookieName = `dd_site_test_${generateUUID()}`\n    const testCookieValue = 'test'\n\n    const domainLevels = window.location.hostname.split('.')\n    let candidateDomain = domainLevels.pop()!\n    while (domainLevels.length && !getCookie(testCookieName)) {\n      candidateDomain = `${domainLevels.pop()!}.${candidateDomain}`\n      setCookie(testCookieName, testCookieValue, ONE_SECOND, { domain: candidateDomain })\n    }\n    deleteCookie(testCookieName, { domain: candidateDomain })\n    getCurrentSiteCache = candidateDomain\n  }\n  return getCurrentSiteCache\n}\n","import { getCookie } from '../../browser/cookie'\n\nexport const SYNTHETICS_TEST_ID_COOKIE_NAME = 'datadog-synthetics-public-id'\nexport const SYNTHETICS_RESULT_ID_COOKIE_NAME = 'datadog-synthetics-result-id'\nexport const SYNTHETICS_INJECTS_RUM_COOKIE_NAME = 'datadog-synthetics-injects-rum'\n\nexport interface BrowserWindow extends Window {\n  _DATADOG_SYNTHETICS_PUBLIC_ID?: unknown\n  _DATADOG_SYNTHETICS_RESULT_ID?: unknown\n  _DATADOG_SYNTHETICS_INJECTS_RUM?: unknown\n}\n\nexport function willSyntheticsInjectRum(): boolean {\n  return Boolean(\n    (window as BrowserWindow)._DATADOG_SYNTHETICS_INJECTS_RUM || getCookie(SYNTHETICS_INJECTS_RUM_COOKIE_NAME)\n  )\n}\n\nexport function getSyntheticsTestId(): string | undefined {\n  const value = (window as BrowserWindow)._DATADOG_SYNTHETICS_PUBLIC_ID || getCookie(SYNTHETICS_TEST_ID_COOKIE_NAME)\n  return typeof value === 'string' ? value : undefined\n}\n\nexport function getSyntheticsResultId(): string | undefined {\n  const value = (window as BrowserWindow)._DATADOG_SYNTHETICS_RESULT_ID || getCookie(SYNTHETICS_RESULT_ID_COOKIE_NAME)\n  return typeof value === 'string' ? value : undefined\n}\n","import { endsWith } from '../tools/utils/polyfills'\nimport { getGlobalObject } from '../tools/getGlobalObject'\n\nexport interface BrowserWindowWithEventBridge extends Window {\n  DatadogEventBridge?: DatadogEventBridge\n}\n\nexport interface DatadogEventBridge {\n  getAllowedWebViewHosts(): string\n  send(msg: string): void\n}\n\nexport function getEventBridge<T, E>() {\n  const eventBridgeGlobal = getEventBridgeGlobal()\n\n  if (!eventBridgeGlobal) {\n    return\n  }\n\n  return {\n    getAllowedWebViewHosts() {\n      return JSON.parse(eventBridgeGlobal.getAllowedWebViewHosts()) as string[]\n    },\n    send(eventType: T, event: E) {\n      eventBridgeGlobal.send(JSON.stringify({ eventType, event }))\n    },\n  }\n}\n\nexport function canUseEventBridge(currentHost = getGlobalObject<Window>().location?.hostname): boolean {\n  const bridge = getEventBridge()\n  return (\n    !!bridge &&\n    bridge\n      .getAllowedWebViewHosts()\n      .some((allowedHost) => currentHost === allowedHost || endsWith(currentHost, `.${allowedHost}`))\n  )\n}\n\nfunction getEventBridgeGlobal() {\n  return getGlobalObject<BrowserWindowWithEventBridge>().DatadogEventBridge\n}\n","import { startsWith } from '../../tools/utils/polyfills'\nimport type { StackTrace, StackFrame } from './types'\n\nconst UNKNOWN_FUNCTION = '?'\n\n/**\n * Computes a stack trace for an exception.\n */\nexport function computeStackTrace(ex: unknown): StackTrace {\n  const stack: StackFrame[] = []\n\n  let stackProperty = tryToGetString(ex, 'stack')\n  const exString = String(ex)\n  if (stackProperty && startsWith(stackProperty, exString)) {\n    stackProperty = stackProperty.slice(exString.length)\n  }\n  if (stackProperty) {\n    stackProperty.split('\\n').forEach((line) => {\n      const stackFrame =\n        parseChromeLine(line) || parseChromeAnonymousLine(line) || parseWinLine(line) || parseGeckoLine(line)\n      if (stackFrame) {\n        if (!stackFrame.func && stackFrame.line) {\n          stackFrame.func = UNKNOWN_FUNCTION\n        }\n\n        stack.push(stackFrame)\n      }\n    })\n  }\n\n  return {\n    message: tryToGetString(ex, 'message'),\n    name: tryToGetString(ex, 'name'),\n    stack,\n  }\n}\nconst fileUrl = '((?:file|https?|blob|chrome-extension|native|eval|webpack|snippet|<anonymous>|\\\\w+\\\\.|\\\\/).*?)'\nconst filePosition = '(?::(\\\\d+))'\nconst CHROME_LINE_RE = new RegExp(`^\\\\s*at (.*?) ?\\\\(${fileUrl}${filePosition}?${filePosition}?\\\\)?\\\\s*$`, 'i')\n\nconst CHROME_EVAL_RE = new RegExp(`\\\\((\\\\S*)${filePosition}${filePosition}\\\\)`)\n\nfunction parseChromeLine(line: string): StackFrame | undefined {\n  const parts = CHROME_LINE_RE.exec(line)\n\n  if (!parts) {\n    return\n  }\n\n  const isNative = parts[2] && parts[2].indexOf('native') === 0 // start of line\n  const isEval = parts[2] && parts[2].indexOf('eval') === 0 // start of line\n  const submatch = CHROME_EVAL_RE.exec(parts[2])\n\n  if (isEval && submatch) {\n    // throw out eval line/column and use top-most line/column number\n    parts[2] = submatch[1] // url\n    parts[3] = submatch[2] // line\n    parts[4] = submatch[3] // column\n  }\n\n  return {\n    args: isNative ? [parts[2]] : [],\n    column: parts[4] ? +parts[4] : undefined,\n    func: parts[1] || UNKNOWN_FUNCTION,\n    line: parts[3] ? +parts[3] : undefined,\n    url: !isNative ? parts[2] : undefined,\n  }\n}\n\nconst CHROME_ANONYMOUS_FUNCTION_RE = new RegExp(`^\\\\s*at ?${fileUrl}${filePosition}?${filePosition}??\\\\s*$`, 'i')\n\nfunction parseChromeAnonymousLine(line: string): StackFrame | undefined {\n  const parts = CHROME_ANONYMOUS_FUNCTION_RE.exec(line)\n\n  if (!parts) {\n    return\n  }\n\n  return {\n    args: [],\n    column: parts[3] ? +parts[3] : undefined,\n    func: UNKNOWN_FUNCTION,\n    line: parts[2] ? +parts[2] : undefined,\n    url: parts[1],\n  }\n}\n\nconst WINJS_LINE_RE =\n  /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i\n\nfunction parseWinLine(line: string): StackFrame | undefined {\n  const parts = WINJS_LINE_RE.exec(line)\n  if (!parts) {\n    return\n  }\n\n  return {\n    args: [],\n    column: parts[4] ? +parts[4] : undefined,\n    func: parts[1] || UNKNOWN_FUNCTION,\n    line: +parts[3],\n    url: parts[2],\n  }\n}\n\nconst GECKO_LINE_RE =\n  /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)((?:file|https?|blob|chrome|webpack|resource|capacitor|\\[native).*?|[^@]*bundle)(?::(\\d+))?(?::(\\d+))?\\s*$/i\nconst GECKO_EVAL_RE = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i\n\nfunction parseGeckoLine(line: string): StackFrame | undefined {\n  const parts = GECKO_LINE_RE.exec(line)\n  if (!parts) {\n    return\n  }\n\n  const isEval = parts[3] && parts[3].indexOf(' > eval') > -1\n  const submatch = GECKO_EVAL_RE.exec(parts[3])\n\n  if (isEval && submatch) {\n    // throw out eval line/column and use top-most line number\n    parts[3] = submatch[1]\n    parts[4] = submatch[2]\n    parts[5] = undefined! // no column when eval\n  }\n\n  return {\n    args: parts[2] ? parts[2].split(',') : [],\n    column: parts[5] ? +parts[5] : undefined,\n    func: parts[1] || UNKNOWN_FUNCTION,\n    line: parts[4] ? +parts[4] : undefined,\n    url: parts[3],\n  }\n}\n\nfunction tryToGetString(candidate: unknown, property: string) {\n  if (typeof candidate !== 'object' || !candidate || !(property in candidate)) {\n    return undefined\n  }\n  const value = (candidate as { [k: string]: unknown })[property]\n  return typeof value === 'string' ? value : undefined\n}\n","import type { StackTrace } from '../tracekit'\nimport { computeStackTrace } from '../tracekit'\nimport { callMonitored } from '../../tools/monitor'\nimport { sanitize } from '../../tools/serialisation/sanitize'\nimport type { ClocksState } from '../../tools/utils/timeUtils'\nimport { noop } from '../../tools/utils/functionUtils'\nimport { jsonStringify } from '../../tools/serialisation/jsonStringify'\nimport type { ErrorSource, ErrorHandling, RawError, RawErrorCause, ErrorWithCause, NonErrorPrefix } from './error.types'\n\nexport const NO_ERROR_STACK_PRESENT_MESSAGE = 'No stack, consider using an instance of Error'\n\ntype RawErrorParams = {\n  stackTrace?: StackTrace\n  originalError: unknown\n\n  handlingStack?: string\n  startClocks: ClocksState\n  nonErrorPrefix: NonErrorPrefix\n  source: ErrorSource\n  handling: ErrorHandling\n}\n\nexport function computeRawError({\n  stackTrace,\n  originalError,\n  handlingStack,\n  startClocks,\n  nonErrorPrefix,\n  source,\n  handling,\n}: RawErrorParams): RawError {\n  const isErrorInstance = originalError instanceof Error\n\n  const message = computeMessage(stackTrace, isErrorInstance, nonErrorPrefix, originalError)\n  const stack = hasUsableStack(isErrorInstance, stackTrace)\n    ? toStackTraceString(stackTrace)\n    : NO_ERROR_STACK_PRESENT_MESSAGE\n  const causes = isErrorInstance ? flattenErrorCauses(originalError as ErrorWithCause, source) : undefined\n  const type = stackTrace?.name\n  const fingerprint = tryToGetFingerprint(originalError)\n\n  return {\n    startClocks,\n    source,\n    handling,\n    handlingStack,\n    originalError,\n    type,\n    message,\n    stack,\n    causes,\n    fingerprint,\n  }\n}\n\nfunction computeMessage(\n  stackTrace: StackTrace | undefined,\n  isErrorInstance: boolean,\n  nonErrorPrefix: NonErrorPrefix,\n  originalError: unknown\n) {\n  // Favor stackTrace message only if tracekit has really been able to extract something meaningful (message + name)\n  // TODO rework tracekit integration to avoid scattering error building logic\n  return stackTrace?.message && stackTrace?.name\n    ? stackTrace.message\n    : !isErrorInstance\n    ? `${nonErrorPrefix} ${jsonStringify(sanitize(originalError))!}`\n    : 'Empty message'\n}\n\nfunction hasUsableStack(isErrorInstance: boolean, stackTrace?: StackTrace): stackTrace is StackTrace {\n  if (stackTrace === undefined) {\n    return false\n  }\n  if (isErrorInstance) {\n    return true\n  }\n  // handle cases where tracekit return stack = [] or stack = [{url: undefined, line: undefined, column: undefined}]\n  // TODO rework tracekit integration to avoid generating those unusable stack\n  return stackTrace.stack.length > 0 && (stackTrace.stack.length > 1 || stackTrace.stack[0].url !== undefined)\n}\n\nexport function tryToGetFingerprint(originalError: unknown) {\n  return originalError instanceof Error && 'dd_fingerprint' in originalError\n    ? String(originalError.dd_fingerprint)\n    : undefined\n}\n\nexport function toStackTraceString(stack: StackTrace) {\n  let result = formatErrorMessage(stack)\n  stack.stack.forEach((frame) => {\n    const func = frame.func === '?' ? '<anonymous>' : frame.func\n    const args = frame.args && frame.args.length > 0 ? `(${frame.args.join(', ')})` : ''\n    const line = frame.line ? `:${frame.line}` : ''\n    const column = frame.line && frame.column ? `:${frame.column}` : ''\n    result += `\\n  at ${func!}${args} @ ${frame.url!}${line}${column}`\n  })\n  return result\n}\n\nexport function getFileFromStackTraceString(stack: string) {\n  return /@ (.+)/.exec(stack)?.[1]\n}\n\nexport function formatErrorMessage(stack: StackTrace) {\n  return `${stack.name || 'Error'}: ${stack.message!}`\n}\n\n/**\n Creates a stacktrace without SDK internal frames.\n \n Constraints:\n - Has to be called at the utmost position of the call stack.\n - No monitored function should encapsulate it, that is why we need to use callMonitored inside it.\n */\nexport function createHandlingStack(): string {\n  /**\n   * Skip the two internal frames:\n   * - SDK API (console.error, ...)\n   * - this function\n   * in order to keep only the user calls\n   */\n  const internalFramesToSkip = 2\n  const error = new Error()\n  let formattedStack: string\n\n  // IE needs to throw the error to fill in the stack trace\n  if (!error.stack) {\n    try {\n      throw error\n    } catch (e) {\n      noop()\n    }\n  }\n\n  callMonitored(() => {\n    const stackTrace = computeStackTrace(error)\n    stackTrace.stack = stackTrace.stack.slice(internalFramesToSkip)\n    formattedStack = toStackTraceString(stackTrace)\n  })\n\n  return formattedStack!\n}\n\nexport function flattenErrorCauses(error: ErrorWithCause, parentSource: ErrorSource): RawErrorCause[] | undefined {\n  let currentError = error\n  const causes: RawErrorCause[] = []\n  while (currentError?.cause instanceof Error && causes.length < 10) {\n    const stackTrace = computeStackTrace(currentError.cause)\n    causes.push({\n      message: currentError.cause.message,\n      source: parentSource,\n      type: stackTrace?.name,\n      stack: stackTrace && toStackTraceString(stackTrace),\n    })\n    currentError = currentError.cause\n  }\n  return causes.length ? causes : undefined\n}\n","/**\n * LIMITATION:\n * For NPM setup, this feature flag singleton is shared between RUM and Logs product.\n * This means that an experimental flag set on the RUM product will be set on the Logs product.\n * So keep in mind that in certain configurations, your experimental feature flag may affect other products.\n *\n * FORMAT:\n * All feature flags should be snake_cased\n */\n// We want to use a real enum (i.e. not a const enum) here, to be able to check whether an arbitrary\n// string is an expected feature flag\n// eslint-disable-next-line no-restricted-syntax\nexport enum ExperimentalFeature {\n  PAGEHIDE = 'pagehide',\n  FEATURE_FLAGS = 'feature_flags',\n  RESOURCE_PAGE_STATES = 'resource_page_states',\n  PAGE_STATES = 'page_states',\n  COLLECT_FLUSH_REASON = 'collect_flush_reason',\n  NO_RESOURCE_DURATION_FROZEN_STATE = 'no_resource_duration_frozen_state',\n  SCROLLMAP = 'scrollmap',\n  DISABLE_REPLAY_INLINE_CSS = 'disable_replay_inline_css',\n}\n\nconst enabledExperimentalFeatures: Set<ExperimentalFeature> = new Set()\n\nexport function addExperimentalFeatures(enabledFeatures: ExperimentalFeature[]): void {\n  enabledFeatures.forEach((flag) => {\n    enabledExperimentalFeatures.add(flag)\n  })\n}\n\nexport function isExperimentalFeatureEnabled(featureName: ExperimentalFeature): boolean {\n  return enabledExperimentalFeatures.has(featureName)\n}\n\nexport function resetExperimentalFeatures(): void {\n  enabledExperimentalFeatures.clear()\n}\n\nexport function getExperimentalFeatures(): Set<ExperimentalFeature> {\n  return enabledExperimentalFeatures\n}\n","import type { Context } from '../../tools/serialisation/context'\nimport { display } from '../../tools/display'\nimport { getType } from '../../tools/utils/typeUtils'\nimport { assign } from '../../tools/utils/polyfills'\nimport type { User } from './user.types'\n\n/**\n * Clone input data and ensure known user properties (id, name, email)\n * are strings, as defined here:\n * https://docs.datadoghq.com/logs/log_configuration/attributes_naming_convention/#user-related-attributes\n */\nexport function sanitizeUser(newUser: Context): Context {\n  // We shallow clone only to prevent mutation of user data.\n  const user = assign({}, newUser)\n  const keys = ['id', 'name', 'email']\n  keys.forEach((key) => {\n    if (key in user) {\n      user[key] = String(user[key])\n    }\n  })\n  return user\n}\n\n/**\n * Simple check to ensure user is valid\n */\nexport function checkUser(newUser: User): boolean {\n  const isValid = getType(newUser) === 'object'\n  if (!isValid) {\n    display.error('Unsupported user:', newUser)\n  }\n  return isValid\n}\n","import { assign } from './polyfills'\n\nexport function shallowClone<T>(object: T): T & Record<string, never> {\n  return assign({}, object)\n}\n\nexport function objectHasValue<T extends { [key: string]: unknown }>(object: T, value: unknown): value is T[keyof T] {\n  return Object.keys(object).some((key) => object[key] === value)\n}\n\nexport function isEmptyObject(object: object) {\n  return Object.keys(object).length === 0\n}\n\nexport function mapValues<A, B>(object: { [key: string]: A }, fn: (arg: A) => B) {\n  const newObject: { [key: string]: B } = {}\n  for (const key of Object.keys(object)) {\n    newObject[key] = fn(object[key])\n  }\n  return newObject\n}\n","import { ONE_HOUR, ONE_MINUTE } from '../../tools/utils/timeUtils'\n\nexport const SESSION_TIME_OUT_DELAY = 4 * ONE_HOUR\nexport const SESSION_EXPIRATION_DELAY = 15 * ONE_MINUTE\n","import type { CookieOptions } from '../../../browser/cookie'\nimport type { SessionState } from '../sessionState'\n\nexport const SESSION_STORE_KEY = '_dd_s'\n\nexport type SessionStoreStrategyType = { type: 'Cookie'; cookieOptions: CookieOptions } | { type: 'LocalStorage' }\n\nexport interface SessionStoreStrategy {\n  persistSession: (session: SessionState) => void\n  retrieveSession: () => SessionState\n  clearSession: () => void\n}\n","import { isEmptyObject } from '../../tools/utils/objectUtils'\nimport { objectEntries } from '../../tools/utils/polyfills'\nimport { dateNow } from '../../tools/utils/timeUtils'\nimport { SESSION_EXPIRATION_DELAY } from './sessionConstants'\n\nconst SESSION_ENTRY_REGEXP = /^([a-z]+)=([a-z0-9-]+)$/\nconst SESSION_ENTRY_SEPARATOR = '&'\n\nexport interface SessionState {\n  id?: string\n  created?: string\n  expire?: string\n  lock?: string\n\n  [key: string]: string | undefined\n}\n\nexport function isSessionInExpiredState(session: SessionState) {\n  return isEmptyObject(session)\n}\n\nexport function expandSessionState(session: SessionState) {\n  session.expire = String(dateNow() + SESSION_EXPIRATION_DELAY)\n}\n\nexport function toSessionString(session: SessionState) {\n  return objectEntries(session)\n    .map(([key, value]) => `${key}=${value as string}`)\n    .join(SESSION_ENTRY_SEPARATOR)\n}\n\nexport function toSessionState(sessionString: string | undefined | null) {\n  const session: SessionState = {}\n  if (isValidSessionString(sessionString)) {\n    sessionString.split(SESSION_ENTRY_SEPARATOR).forEach((entry) => {\n      const matches = SESSION_ENTRY_REGEXP.exec(entry)\n      if (matches !== null) {\n        const [, key, value] = matches\n        session[key] = value\n      }\n    })\n  }\n  return session\n}\n\nfunction isValidSessionString(sessionString: string | undefined | null): sessionString is string {\n  return (\n    !!sessionString &&\n    (sessionString.indexOf(SESSION_ENTRY_SEPARATOR) !== -1 || SESSION_ENTRY_REGEXP.test(sessionString))\n  )\n}\n","import { getCookie } from '../../browser/cookie'\nimport type { SessionStoreStrategy } from './storeStrategies/sessionStoreStrategy'\nimport { SESSION_STORE_KEY } from './storeStrategies/sessionStoreStrategy'\nimport type { SessionState } from './sessionState'\nimport { expandSessionState, isSessionInExpiredState } from './sessionState'\n\nexport const OLD_SESSION_COOKIE_NAME = '_dd'\nexport const OLD_RUM_COOKIE_NAME = '_dd_r'\nexport const OLD_LOGS_COOKIE_NAME = '_dd_l'\n\n// duplicate values to avoid dependency issues\nexport const RUM_SESSION_KEY = 'rum'\nexport const LOGS_SESSION_KEY = 'logs'\n\n/**\n * This migration should remain in the codebase as long as older versions are available/live\n * to allow older sdk versions to be upgraded to newer versions without compatibility issues.\n */\nexport function tryOldCookiesMigration(cookieStoreStrategy: SessionStoreStrategy) {\n  const sessionString = getCookie(SESSION_STORE_KEY)\n  if (!sessionString) {\n    const oldSessionId = getCookie(OLD_SESSION_COOKIE_NAME)\n    const oldRumType = getCookie(OLD_RUM_COOKIE_NAME)\n    const oldLogsType = getCookie(OLD_LOGS_COOKIE_NAME)\n    const session: SessionState = {}\n\n    if (oldSessionId) {\n      session.id = oldSessionId\n    }\n    if (oldLogsType && /^[01]$/.test(oldLogsType)) {\n      session[LOGS_SESSION_KEY] = oldLogsType\n    }\n    if (oldRumType && /^[012]$/.test(oldRumType)) {\n      session[RUM_SESSION_KEY] = oldRumType\n    }\n\n    if (!isSessionInExpiredState(session)) {\n      expandSessionState(session)\n      cookieStoreStrategy.persistSession(session)\n    }\n  }\n}\n","import type { CookieOptions } from '../../../browser/cookie'\nimport { getCurrentSite, areCookiesAuthorized, deleteCookie, getCookie, setCookie } from '../../../browser/cookie'\nimport type { InitConfiguration } from '../../configuration'\nimport { tryOldCookiesMigration } from '../oldCookiesMigration'\nimport { SESSION_EXPIRATION_DELAY } from '../sessionConstants'\nimport type { SessionState } from '../sessionState'\nimport { toSessionString, toSessionState } from '../sessionState'\nimport type { SessionStoreStrategy, SessionStoreStrategyType } from './sessionStoreStrategy'\nimport { SESSION_STORE_KEY } from './sessionStoreStrategy'\n\nexport function selectCookieStrategy(initConfiguration: InitConfiguration): SessionStoreStrategyType | undefined {\n  const cookieOptions = buildCookieOptions(initConfiguration)\n  return areCookiesAuthorized(cookieOptions) ? { type: 'Cookie', cookieOptions } : undefined\n}\n\nexport function initCookieStrategy(cookieOptions: CookieOptions): SessionStoreStrategy {\n  const cookieStore = {\n    persistSession: persistSessionCookie(cookieOptions),\n    retrieveSession: retrieveSessionCookie,\n    clearSession: deleteSessionCookie(cookieOptions),\n  }\n\n  tryOldCookiesMigration(cookieStore)\n\n  return cookieStore\n}\n\nfunction persistSessionCookie(options: CookieOptions) {\n  return (session: SessionState) => {\n    setCookie(SESSION_STORE_KEY, toSessionString(session), SESSION_EXPIRATION_DELAY, options)\n  }\n}\n\nfunction retrieveSessionCookie(): SessionState {\n  const sessionString = getCookie(SESSION_STORE_KEY)\n  return toSessionState(sessionString)\n}\n\nfunction deleteSessionCookie(options: CookieOptions) {\n  return () => {\n    deleteCookie(SESSION_STORE_KEY, options)\n  }\n}\n\nexport function buildCookieOptions(initConfiguration: InitConfiguration) {\n  const cookieOptions: CookieOptions = {}\n\n  cookieOptions.secure = !!initConfiguration.useSecureSessionCookie || !!initConfiguration.useCrossSiteSessionCookie\n  cookieOptions.crossSite = !!initConfiguration.useCrossSiteSessionCookie\n\n  if (initConfiguration.trackSessionAcrossSubdomains) {\n    cookieOptions.domain = getCurrentSite()\n  }\n\n  return cookieOptions\n}\n","import { generateUUID } from '../../../tools/utils/stringUtils'\nimport type { SessionState } from '../sessionState'\nimport { toSessionString, toSessionState } from '../sessionState'\nimport type { SessionStoreStrategy, SessionStoreStrategyType } from './sessionStoreStrategy'\nimport { SESSION_STORE_KEY } from './sessionStoreStrategy'\n\nconst LOCAL_STORAGE_TEST_KEY = '_dd_test_'\n\nexport function selectLocalStorageStrategy(): SessionStoreStrategyType | undefined {\n  try {\n    const id = generateUUID()\n    const testKey = `${LOCAL_STORAGE_TEST_KEY}${id}`\n    localStorage.setItem(testKey, id)\n    const retrievedId = localStorage.getItem(testKey)\n    localStorage.removeItem(testKey)\n    return id === retrievedId ? { type: 'LocalStorage' } : undefined\n  } catch (e) {\n    return undefined\n  }\n}\n\nexport function initLocalStorageStrategy(): SessionStoreStrategy {\n  return {\n    persistSession: persistInLocalStorage,\n    retrieveSession: retrieveSessionFromLocalStorage,\n    clearSession: clearSessionFromLocalStorage,\n  }\n}\n\nfunction persistInLocalStorage(sessionState: SessionState) {\n  localStorage.setItem(SESSION_STORE_KEY, toSessionString(sessionState))\n}\n\nfunction retrieveSessionFromLocalStorage(): SessionState {\n  const sessionString = localStorage.getItem(SESSION_STORE_KEY)\n  return toSessionState(sessionString)\n}\n\nfunction clearSessionFromLocalStorage() {\n  localStorage.removeItem(SESSION_STORE_KEY)\n}\n","import { setTimeout } from '../../tools/timer'\nimport { generateUUID } from '../../tools/utils/stringUtils'\nimport { isChromium } from '../../tools/utils/browserDetection'\nimport type { SessionStoreStrategy } from './storeStrategies/sessionStoreStrategy'\nimport type { SessionState } from './sessionState'\nimport { expandSessionState, isSessionInExpiredState } from './sessionState'\n\ntype Operations = {\n  process: (sessionState: SessionState) => SessionState | undefined\n  after?: (sessionState: SessionState) => void\n}\n\nexport const LOCK_RETRY_DELAY = 10\nexport const LOCK_MAX_TRIES = 100\nconst bufferedOperations: Operations[] = []\nlet ongoingOperations: Operations | undefined\n\nexport function processSessionStoreOperations(\n  operations: Operations,\n  sessionStoreStrategy: SessionStoreStrategy,\n  numberOfRetries = 0\n) {\n  const { retrieveSession, persistSession, clearSession } = sessionStoreStrategy\n  const lockEnabled = isLockEnabled()\n\n  if (!ongoingOperations) {\n    ongoingOperations = operations\n  }\n  if (operations !== ongoingOperations) {\n    bufferedOperations.push(operations)\n    return\n  }\n  if (lockEnabled && numberOfRetries >= LOCK_MAX_TRIES) {\n    next(sessionStoreStrategy)\n    return\n  }\n  let currentLock: string\n  let currentSession = retrieveSession()\n  if (lockEnabled) {\n    // if someone has lock, retry later\n    if (currentSession.lock) {\n      retryLater(operations, sessionStoreStrategy, numberOfRetries)\n      return\n    }\n    // acquire lock\n    currentLock = generateUUID()\n    currentSession.lock = currentLock\n    persistSession(currentSession)\n    // if lock is not acquired, retry later\n    currentSession = retrieveSession()\n    if (currentSession.lock !== currentLock) {\n      retryLater(operations, sessionStoreStrategy, numberOfRetries)\n      return\n    }\n  }\n  let processedSession = operations.process(currentSession)\n  if (lockEnabled) {\n    // if lock corrupted after process, retry later\n    currentSession = retrieveSession()\n    if (currentSession.lock !== currentLock!) {\n      retryLater(operations, sessionStoreStrategy, numberOfRetries)\n      return\n    }\n  }\n  if (processedSession) {\n    if (isSessionInExpiredState(processedSession)) {\n      clearSession()\n    } else {\n      expandSessionState(processedSession)\n      persistSession(processedSession)\n    }\n  }\n  if (lockEnabled) {\n    // correctly handle lock around expiration would require to handle this case properly at several levels\n    // since we don't have evidence of lock issues around expiration, let's just not do the corruption check for it\n    if (!(processedSession && isSessionInExpiredState(processedSession))) {\n      // if lock corrupted after persist, retry later\n      currentSession = retrieveSession()\n      if (currentSession.lock !== currentLock!) {\n        retryLater(operations, sessionStoreStrategy, numberOfRetries)\n        return\n      }\n      delete currentSession.lock\n      persistSession(currentSession)\n      processedSession = currentSession\n    }\n  }\n  // call after even if session is not persisted in order to perform operations on\n  // up-to-date session state value => the value could have been modified by another tab\n  operations.after?.(processedSession || currentSession)\n  next(sessionStoreStrategy)\n}\n\n/**\n * Lock strategy allows mitigating issues due to concurrent access to cookie.\n * This issue concerns only chromium browsers and enabling this on firefox increases cookie write failures.\n */\nexport const isLockEnabled = () => isChromium()\n\nfunction retryLater(operations: Operations, sessionStore: SessionStoreStrategy, currentNumberOfRetries: number) {\n  setTimeout(() => {\n    processSessionStoreOperations(operations, sessionStore, currentNumberOfRetries + 1)\n  }, LOCK_RETRY_DELAY)\n}\n\nfunction next(sessionStore: SessionStoreStrategy) {\n  ongoingOperations = undefined\n  const nextOperations = bufferedOperations.shift()\n  if (nextOperations) {\n    processSessionStoreOperations(nextOperations, sessionStore)\n  }\n}\n","export function isIE() {\n  return Boolean((document as any).documentMode)\n}\n\nexport function isChromium() {\n  return !!(window as any).chrome || /HeadlessChrome/.test(window.navigator.userAgent)\n}\n","import { clearInterval, setInterval } from '../../tools/timer'\nimport { Observable } from '../../tools/observable'\nimport { ONE_SECOND, dateNow } from '../../tools/utils/timeUtils'\nimport { throttle } from '../../tools/utils/functionUtils'\nimport { generateUUID } from '../../tools/utils/stringUtils'\nimport type { InitConfiguration } from '../configuration'\nimport { SESSION_TIME_OUT_DELAY } from './sessionConstants'\nimport { selectCookieStrategy, initCookieStrategy } from './storeStrategies/sessionInCookie'\nimport type { SessionStoreStrategyType } from './storeStrategies/sessionStoreStrategy'\nimport type { SessionState } from './sessionState'\nimport { initLocalStorageStrategy, selectLocalStorageStrategy } from './storeStrategies/sessionInLocalStorage'\nimport { processSessionStoreOperations } from './sessionStoreOperations'\n\nexport interface SessionStore {\n  expandOrRenewSession: () => void\n  expandSession: () => void\n  getSession: () => SessionState\n  renewObservable: Observable<void>\n  expireObservable: Observable<void>\n  expire: () => void\n  stop: () => void\n}\n\n/**\n * Every second, the storage will be polled to check for any change that can occur\n * to the session state in another browser tab, or another window.\n * This value has been determined from our previous cookie-only implementation.\n */\nexport const STORAGE_POLL_DELAY = ONE_SECOND\n\n/**\n * Checks if cookies are available as the preferred storage\n * Else, checks if LocalStorage is allowed and available\n */\nexport function selectSessionStoreStrategyType(\n  initConfiguration: InitConfiguration\n): SessionStoreStrategyType | undefined {\n  let sessionStoreStrategyType = selectCookieStrategy(initConfiguration)\n  if (!sessionStoreStrategyType && initConfiguration.allowFallbackToLocalStorage) {\n    sessionStoreStrategyType = selectLocalStorageStrategy()\n  }\n  return sessionStoreStrategyType\n}\n\n/**\n * Different session concepts:\n * - tracked, the session has an id and is updated along the user navigation\n * - not tracked, the session does not have an id but it is updated along the user navigation\n * - inactive, no session in store or session expired, waiting for a renew session\n */\nexport function startSessionStore<TrackingType extends string>(\n  sessionStoreStrategyType: SessionStoreStrategyType,\n  productKey: string,\n  computeSessionState: (rawTrackingType?: string) => { trackingType: TrackingType; isTracked: boolean }\n): SessionStore {\n  const renewObservable = new Observable<void>()\n  const expireObservable = new Observable<void>()\n\n  const sessionStoreStrategy =\n    sessionStoreStrategyType.type === 'Cookie'\n      ? initCookieStrategy(sessionStoreStrategyType.cookieOptions)\n      : initLocalStorageStrategy()\n  const { clearSession, retrieveSession } = sessionStoreStrategy\n\n  const watchSessionTimeoutId = setInterval(watchSession, STORAGE_POLL_DELAY)\n  let sessionCache: SessionState = retrieveActiveSession()\n\n  function expandOrRenewSession() {\n    let isTracked: boolean\n    processSessionStoreOperations(\n      {\n        process: (sessionState) => {\n          const synchronizedSession = synchronizeSession(sessionState)\n          isTracked = expandOrRenewSessionState(synchronizedSession)\n          return synchronizedSession\n        },\n        after: (sessionState) => {\n          if (isTracked && !hasSessionInCache()) {\n            renewSessionInCache(sessionState)\n          }\n          sessionCache = sessionState\n        },\n      },\n      sessionStoreStrategy\n    )\n  }\n\n  function expandSession() {\n    processSessionStoreOperations(\n      {\n        process: (sessionState) => (hasSessionInCache() ? synchronizeSession(sessionState) : undefined),\n      },\n      sessionStoreStrategy\n    )\n  }\n\n  /**\n   * allows two behaviors:\n   * - if the session is active, synchronize the session cache without updating the session store\n   * - if the session is not active, clear the session store and expire the session cache\n   */\n  function watchSession() {\n    processSessionStoreOperations(\n      {\n        process: (sessionState) => (!isActiveSession(sessionState) ? {} : undefined),\n        after: synchronizeSession,\n      },\n      sessionStoreStrategy\n    )\n  }\n\n  function synchronizeSession(sessionState: SessionState) {\n    if (!isActiveSession(sessionState)) {\n      sessionState = {}\n    }\n    if (hasSessionInCache()) {\n      if (isSessionInCacheOutdated(sessionState)) {\n        expireSessionInCache()\n      } else {\n        sessionCache = sessionState\n      }\n    }\n    return sessionState\n  }\n\n  function expandOrRenewSessionState(sessionState: SessionState) {\n    const { trackingType, isTracked } = computeSessionState(sessionState[productKey])\n    sessionState[productKey] = trackingType\n    if (isTracked && !sessionState.id) {\n      sessionState.id = generateUUID()\n      sessionState.created = String(dateNow())\n    }\n    return isTracked\n  }\n\n  function hasSessionInCache() {\n    return sessionCache[productKey] !== undefined\n  }\n\n  function isSessionInCacheOutdated(sessionState: SessionState) {\n    return sessionCache.id !== sessionState.id || sessionCache[productKey] !== sessionState[productKey]\n  }\n\n  function expireSessionInCache() {\n    sessionCache = {}\n    expireObservable.notify()\n  }\n\n  function renewSessionInCache(sessionState: SessionState) {\n    sessionCache = sessionState\n    renewObservable.notify()\n  }\n\n  function retrieveActiveSession(): SessionState {\n    const session = retrieveSession()\n    if (isActiveSession(session)) {\n      return session\n    }\n    return {}\n  }\n\n  function isActiveSession(sessionState: SessionState) {\n    // created and expire can be undefined for versions which was not storing them\n    // these checks could be removed when older versions will not be available/live anymore\n    return (\n      (sessionState.created === undefined || dateNow() - Number(sessionState.created) < SESSION_TIME_OUT_DELAY) &&\n      (sessionState.expire === undefined || dateNow() < Number(sessionState.expire))\n    )\n  }\n\n  return {\n    expandOrRenewSession: throttle(expandOrRenewSession, STORAGE_POLL_DELAY).throttled,\n    expandSession,\n    getSession: () => sessionCache,\n    renewObservable,\n    expireObservable,\n    expire: () => {\n      clearSession()\n      synchronizeSession({})\n    },\n    stop: () => {\n      clearInterval(watchSessionTimeoutId)\n    },\n  }\n}\n","import { jsonStringify } from '../serialisation/jsonStringify'\n\nexport function normalizeUrl(url: string) {\n  return buildUrl(url, getLocationOrigin()).href\n}\n\nexport function isValidUrl(url: string) {\n  try {\n    return !!buildUrl(url)\n  } catch {\n    return false\n  }\n}\n\nexport function getOrigin(url: string) {\n  return getLinkElementOrigin(buildUrl(url))\n}\n\nexport function getPathName(url: string) {\n  const pathname = buildUrl(url).pathname\n  return pathname[0] === '/' ? pathname : `/${pathname}`\n}\n\nexport function getSearch(url: string) {\n  return buildUrl(url).search\n}\n\nexport function getHash(url: string) {\n  return buildUrl(url).hash\n}\n\nexport function buildUrl(url: string, base?: string) {\n  const supportedURL = getSupportedUrl()\n  if (supportedURL) {\n    try {\n      return base !== undefined ? new supportedURL(url, base) : new supportedURL(url)\n    } catch (error) {\n      throw new Error(`Failed to construct URL: ${String(error)} ${jsonStringify({ url, base })!}`)\n    }\n  }\n  if (base === undefined && !/:/.test(url)) {\n    throw new Error(`Invalid URL: '${url}'`)\n  }\n  let doc = document\n  const anchorElement = doc.createElement('a')\n  if (base !== undefined) {\n    doc = document.implementation.createHTMLDocument('')\n    const baseElement = doc.createElement('base')\n    baseElement.href = base\n    doc.head.appendChild(baseElement)\n    doc.body.appendChild(anchorElement)\n  }\n  anchorElement.href = url\n  return anchorElement\n}\n\nconst originalURL = URL\nlet isURLSupported: boolean | undefined\nfunction getSupportedUrl(): typeof URL | undefined {\n  if (isURLSupported === undefined) {\n    try {\n      const url = new originalURL('http://test/path')\n      isURLSupported = url.href === 'http://test/path'\n    } catch {\n      isURLSupported = false\n    }\n  }\n  return isURLSupported ? originalURL : undefined\n}\n\nexport function getLocationOrigin() {\n  return getLinkElementOrigin(window.location)\n}\n\n/**\n * Fallback\n * On IE HTMLAnchorElement origin is not supported: https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/origin\n * On Firefox window.location.origin is \"null\" for file: URIs: https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n */\nexport function getLinkElementOrigin(element: Location | HTMLAnchorElement | URL) {\n  if (element.origin && element.origin !== 'null') {\n    return element.origin\n  }\n  const sanitizedHost = element.host.replace(/(:80|:443)$/, '')\n  return `${element.protocol}//${sanitizedHost}`\n}\n","export const INTAKE_SITE_STAGING = 'datad0g.com'\nexport const INTAKE_SITE_US1 = 'datadoghq.com'\nexport const INTAKE_SITE_EU1 = 'datadoghq.eu'\nexport const INTAKE_SITE_AP1 = 'ap1.datadoghq.com'\nexport const INTAKE_SITE_US1_FED = 'ddog-gov.com'\n","import type { RetryInfo, FlushReason } from '../../transport'\nimport { timeStampNow } from '../../tools/utils/timeUtils'\nimport { normalizeUrl } from '../../tools/utils/urlPolyfill'\nimport { ExperimentalFeature, isExperimentalFeatureEnabled } from '../../tools/experimentalFeatures'\nimport { generateUUID } from '../../tools/utils/stringUtils'\nimport type { InitConfiguration } from './configuration'\nimport { INTAKE_SITE_AP1, INTAKE_SITE_US1 } from './intakeSites'\n\n// replaced at build time\ndeclare const __BUILD_ENV__SDK_VERSION__: string\n\nexport const ENDPOINTS = {\n  logs: 'logs',\n  rum: 'rum',\n  sessionReplay: 'session-replay',\n} as const\n\nconst INTAKE_TRACKS = {\n  logs: 'logs',\n  rum: 'rum',\n  sessionReplay: 'replay',\n}\n\nexport type EndpointType = keyof typeof ENDPOINTS\n\nexport type EndpointBuilder = ReturnType<typeof createEndpointBuilder>\n\nexport function createEndpointBuilder(\n  initConfiguration: InitConfiguration,\n  endpointType: EndpointType,\n  configurationTags: string[]\n) {\n  const buildUrlWithParameters = createEndpointUrlWithParametersBuilder(initConfiguration, endpointType)\n\n  return {\n    build(api: 'xhr' | 'fetch' | 'beacon', flushReason?: FlushReason, retry?: RetryInfo) {\n      const parameters = buildEndpointParameters(\n        initConfiguration,\n        endpointType,\n        configurationTags,\n        api,\n        flushReason,\n        retry\n      )\n      return buildUrlWithParameters(parameters)\n    },\n    urlPrefix: buildUrlWithParameters(''),\n    endpointType,\n  }\n}\n\n/**\n * Create a function used to build a full endpoint url from provided parameters. The goal of this\n * function is to pre-compute some parts of the URL to avoid re-computing everything on every\n * request, as only parameters are changing.\n */\nfunction createEndpointUrlWithParametersBuilder(\n  initConfiguration: InitConfiguration,\n  endpointType: EndpointType\n): (parameters: string) => string {\n  const path = `/api/v2/${INTAKE_TRACKS[endpointType]}`\n\n  const { proxy, proxyUrl } = initConfiguration\n  if (proxy) {\n    const normalizedProxyUrl = normalizeUrl(proxy)\n    return (parameters) => `${normalizedProxyUrl}?ddforward=${encodeURIComponent(`${path}?${parameters}`)}`\n  }\n\n  const host = buildEndpointHost(initConfiguration, endpointType)\n\n  if (proxy === undefined && proxyUrl) {\n    // TODO: remove this in a future major.\n    const normalizedProxyUrl = normalizeUrl(proxyUrl)\n    return (parameters) =>\n      `${normalizedProxyUrl}?ddforward=${encodeURIComponent(`https://${host}${path}?${parameters}`)}`\n  }\n\n  return (parameters) => `https://${host}${path}?${parameters}`\n}\n\nfunction buildEndpointHost(initConfiguration: InitConfiguration, endpointType: EndpointType) {\n  const { site = INTAKE_SITE_US1, internalAnalyticsSubdomain } = initConfiguration\n\n  if (internalAnalyticsSubdomain && site === INTAKE_SITE_US1) {\n    return `${internalAnalyticsSubdomain}.${INTAKE_SITE_US1}`\n  }\n\n  const domainParts = site.split('.')\n  const extension = domainParts.pop()\n  const subdomain = site !== INTAKE_SITE_AP1 ? `${ENDPOINTS[endpointType]}.` : ''\n  return `${subdomain}browser-intake-${domainParts.join('-')}.${extension!}`\n}\n\n/**\n * Build parameters to be used for an intake request. Parameters should be re-built for each\n * request, as they change randomly.\n */\nfunction buildEndpointParameters(\n  { clientToken, internalAnalyticsSubdomain }: InitConfiguration,\n  endpointType: EndpointType,\n  configurationTags: string[],\n  api: 'xhr' | 'fetch' | 'beacon',\n  flushReason: FlushReason | undefined,\n  retry: RetryInfo | undefined\n) {\n  const tags = [`sdk_version:${__BUILD_ENV__SDK_VERSION__}`, `api:${api}`].concat(configurationTags)\n  if (flushReason && isExperimentalFeatureEnabled(ExperimentalFeature.COLLECT_FLUSH_REASON)) {\n    tags.push(`flush_reason:${flushReason}`)\n  }\n  if (retry) {\n    tags.push(`retry_count:${retry.count}`, `retry_after:${retry.lastFailureStatus}`)\n  }\n  const parameters = [\n    'ddsource=browser',\n    `ddtags=${encodeURIComponent(tags.join(','))}`,\n    `dd-api-key=${clientToken}`,\n    `dd-evp-origin-version=${encodeURIComponent(__BUILD_ENV__SDK_VERSION__)}`,\n    'dd-evp-origin=browser',\n    `dd-request-id=${generateUUID()}`,\n  ]\n\n  if (endpointType === 'rum') {\n    parameters.push(`batch_time=${timeStampNow()}`)\n  }\n  if (internalAnalyticsSubdomain) {\n    parameters.reverse()\n  }\n\n  return parameters.join('&')\n}\n","import { display } from '../../tools/display'\nimport type { InitConfiguration } from './configuration'\n\nexport const TAG_SIZE_LIMIT = 200\n\nexport function buildTags(configuration: InitConfiguration): string[] {\n  const { env, service, version, datacenter } = configuration\n  const tags = []\n\n  if (env) {\n    tags.push(buildTag('env', env))\n  }\n  if (service) {\n    tags.push(buildTag('service', service))\n  }\n  if (version) {\n    tags.push(buildTag('version', version))\n  }\n  if (datacenter) {\n    tags.push(buildTag('datacenter', datacenter))\n  }\n\n  return tags\n}\n\nconst FORBIDDEN_CHARACTERS = /[^a-z0-9_:./-]/\n\nexport function buildTag(key: string, rawValue: string) {\n  // See https://docs.datadoghq.com/getting_started/tagging/#defining-tags for tags syntax. Note\n  // that the backend may not follow the exact same rules, so we only want to display an informal\n  // warning.\n  const valueSizeLimit = TAG_SIZE_LIMIT - key.length - 1\n\n  if (rawValue.length > valueSizeLimit || FORBIDDEN_CHARACTERS.test(rawValue)) {\n    display.warn(`${key} value doesn't meet tag requirements and will be sanitized`)\n  }\n\n  // Let the backend do most of the sanitization, but still make sure multiple tags can't be crafted\n  // by forging a value containing commas.\n  const sanitizedValue = rawValue.replace(/,/g, '_')\n\n  return `${key}:${sanitizedValue}`\n}\n","import { objectValues, assign } from '../../tools/utils/polyfills'\nimport type { InitConfiguration } from './configuration'\nimport type { EndpointBuilder } from './endpointBuilder'\nimport { createEndpointBuilder } from './endpointBuilder'\nimport { buildTags } from './tags'\nimport { INTAKE_SITE_US1 } from './intakeSites'\n\nexport interface TransportConfiguration {\n  logsEndpointBuilder: EndpointBuilder\n  rumEndpointBuilder: EndpointBuilder\n  sessionReplayEndpointBuilder: EndpointBuilder\n  isIntakeUrl: (url: string) => boolean\n  replica?: ReplicaConfiguration\n  site: string\n}\n\nexport interface ReplicaConfiguration {\n  applicationId?: string\n  logsEndpointBuilder: EndpointBuilder\n  rumEndpointBuilder: EndpointBuilder\n}\n\nexport function computeTransportConfiguration(initConfiguration: InitConfiguration): TransportConfiguration {\n  const tags = buildTags(initConfiguration)\n\n  const endpointBuilders = computeEndpointBuilders(initConfiguration, tags)\n  const intakeUrlPrefixes = objectValues(endpointBuilders).map((builder) => builder.urlPrefix)\n\n  const replicaConfiguration = computeReplicaConfiguration(initConfiguration, intakeUrlPrefixes, tags)\n\n  return assign(\n    {\n      isIntakeUrl: (url: string) => intakeUrlPrefixes.some((intakeEndpoint) => url.indexOf(intakeEndpoint) === 0),\n      replica: replicaConfiguration,\n      site: initConfiguration.site || INTAKE_SITE_US1,\n    },\n    endpointBuilders\n  )\n}\n\nfunction computeEndpointBuilders(initConfiguration: InitConfiguration, tags: string[]) {\n  return {\n    logsEndpointBuilder: createEndpointBuilder(initConfiguration, 'logs', tags),\n    rumEndpointBuilder: createEndpointBuilder(initConfiguration, 'rum', tags),\n    sessionReplayEndpointBuilder: createEndpointBuilder(initConfiguration, 'sessionReplay', tags),\n  }\n}\n\nfunction computeReplicaConfiguration(\n  initConfiguration: InitConfiguration,\n  intakeUrlPrefixes: string[],\n  tags: string[]\n): ReplicaConfiguration | undefined {\n  if (!initConfiguration.replica) {\n    return\n  }\n\n  const replicaConfiguration: InitConfiguration = assign({}, initConfiguration, {\n    site: INTAKE_SITE_US1,\n    clientToken: initConfiguration.replica.clientToken,\n  })\n\n  const replicaEndpointBuilders = {\n    logsEndpointBuilder: createEndpointBuilder(replicaConfiguration, 'logs', tags),\n    rumEndpointBuilder: createEndpointBuilder(replicaConfiguration, 'rum', tags),\n  }\n\n  intakeUrlPrefixes.push(...objectValues(replicaEndpointBuilders).map((builder) => builder.urlPrefix))\n\n  return assign({ applicationId: initConfiguration.replica.applicationId }, replicaEndpointBuilders)\n}\n","import { catchUserErrors } from '../../tools/catchUserErrors'\nimport { display } from '../../tools/display'\nimport type { RawTelemetryConfiguration } from '../telemetry'\nimport { ExperimentalFeature, addExperimentalFeatures } from '../../tools/experimentalFeatures'\nimport type { Duration } from '../../tools/utils/timeUtils'\nimport { ONE_SECOND } from '../../tools/utils/timeUtils'\nimport { isPercentage } from '../../tools/utils/numberUtils'\nimport { ONE_KIBI_BYTE } from '../../tools/utils/byteUtils'\nimport { objectHasValue } from '../../tools/utils/objectUtils'\nimport { assign } from '../../tools/utils/polyfills'\nimport { selectSessionStoreStrategyType } from '../session/sessionStore'\nimport type { SessionStoreStrategyType } from '../session/storeStrategies/sessionStoreStrategy'\nimport type { TransportConfiguration } from './transportConfiguration'\nimport { computeTransportConfiguration } from './transportConfiguration'\n\nexport const DefaultPrivacyLevel = {\n  ALLOW: 'allow',\n  MASK: 'mask',\n  MASK_USER_INPUT: 'mask-user-input',\n} as const\nexport type DefaultPrivacyLevel = (typeof DefaultPrivacyLevel)[keyof typeof DefaultPrivacyLevel]\n\nexport interface InitConfiguration {\n  // global options\n  clientToken: string\n  beforeSend?: GenericBeforeSendCallback | undefined\n  /**\n   * @deprecated use sessionSampleRate instead\n   */\n  sampleRate?: number | undefined\n  sessionSampleRate?: number | undefined\n  telemetrySampleRate?: number | undefined\n  silentMultipleInit?: boolean | undefined\n  trackResources?: boolean | undefined\n  trackLongTasks?: boolean | undefined\n\n  // transport options\n  proxy?: string | undefined\n  /**\n   * @deprecated use `proxy` instead\n   */\n  proxyUrl?: string | undefined\n  site?: string | undefined\n\n  // tag and context options\n  service?: string | undefined\n  env?: string | undefined\n  version?: string | undefined\n\n  // cookie options\n  useCrossSiteSessionCookie?: boolean | undefined\n  useSecureSessionCookie?: boolean | undefined\n  trackSessionAcrossSubdomains?: boolean | undefined\n\n  // alternate storage option\n  allowFallbackToLocalStorage?: boolean | undefined\n\n  // internal options\n  enableExperimentalFeatures?: string[] | undefined\n  replica?: ReplicaUserConfiguration | undefined\n  datacenter?: string\n  internalAnalyticsSubdomain?: string\n\n  telemetryConfigurationSampleRate?: number\n}\n\n// This type is only used to build the core configuration. Logs and RUM SDKs are using a proper type\n// for this option.\ntype GenericBeforeSendCallback = (event: any, context?: any) => unknown\n\ninterface ReplicaUserConfiguration {\n  applicationId?: string\n  clientToken: string\n}\n\nexport interface Configuration extends TransportConfiguration {\n  // Built from init configuration\n  beforeSend: GenericBeforeSendCallback | undefined\n  sessionStoreStrategyType: SessionStoreStrategyType | undefined\n  sessionSampleRate: number\n  telemetrySampleRate: number\n  telemetryConfigurationSampleRate: number\n  service: string | undefined\n  silentMultipleInit: boolean\n\n  // Event limits\n  eventRateLimiterThreshold: number // Limit the maximum number of actions, errors and logs per minutes\n  maxTelemetryEventsPerPage: number\n\n  // Batch configuration\n  batchBytesLimit: number\n  flushTimeout: Duration\n  batchMessagesLimit: number\n  messageBytesLimit: number\n}\n\nexport function validateAndBuildConfiguration(initConfiguration: InitConfiguration): Configuration | undefined {\n  if (!initConfiguration || !initConfiguration.clientToken) {\n    display.error('Client Token is not configured, we will not send any data.')\n    return\n  }\n\n  const sessionSampleRate = initConfiguration.sessionSampleRate ?? initConfiguration.sampleRate\n  if (sessionSampleRate !== undefined && !isPercentage(sessionSampleRate)) {\n    display.error('Session Sample Rate should be a number between 0 and 100')\n    return\n  }\n\n  if (initConfiguration.telemetrySampleRate !== undefined && !isPercentage(initConfiguration.telemetrySampleRate)) {\n    display.error('Telemetry Sample Rate should be a number between 0 and 100')\n    return\n  }\n\n  if (\n    initConfiguration.telemetryConfigurationSampleRate !== undefined &&\n    !isPercentage(initConfiguration.telemetryConfigurationSampleRate)\n  ) {\n    display.error('Telemetry Configuration Sample Rate should be a number between 0 and 100')\n    return\n  }\n\n  // Set the experimental feature flags as early as possible, so we can use them in most places\n  if (Array.isArray(initConfiguration.enableExperimentalFeatures)) {\n    addExperimentalFeatures(\n      initConfiguration.enableExperimentalFeatures.filter((flag): flag is ExperimentalFeature =>\n        objectHasValue(ExperimentalFeature, flag)\n      )\n    )\n  }\n\n  return assign(\n    {\n      beforeSend:\n        initConfiguration.beforeSend && catchUserErrors(initConfiguration.beforeSend, 'beforeSend threw an error:'),\n      sessionStoreStrategyType: selectSessionStoreStrategyType(initConfiguration),\n      sessionSampleRate: sessionSampleRate ?? 100,\n      telemetrySampleRate: initConfiguration.telemetrySampleRate ?? 20,\n      telemetryConfigurationSampleRate: initConfiguration.telemetryConfigurationSampleRate ?? 5,\n      service: initConfiguration.service,\n      silentMultipleInit: !!initConfiguration.silentMultipleInit,\n\n      /**\n       * beacon payload max queue size implementation is 64kb\n       * ensure that we leave room for logs, rum and potential other users\n       */\n      batchBytesLimit: 16 * ONE_KIBI_BYTE,\n\n      eventRateLimiterThreshold: 3000,\n      maxTelemetryEventsPerPage: 15,\n\n      /**\n       * flush automatically, aim to be lower than ALB connection timeout\n       * to maximize connection reuse.\n       */\n      flushTimeout: (30 * ONE_SECOND) as Duration,\n\n      /**\n       * Logs intake limit\n       */\n      batchMessagesLimit: 50,\n      messageBytesLimit: 256 * ONE_KIBI_BYTE,\n    },\n    computeTransportConfiguration(initConfiguration)\n  )\n}\n\nexport function serializeConfiguration(initConfiguration: InitConfiguration): Partial<RawTelemetryConfiguration> {\n  const proxy = initConfiguration.proxy ?? initConfiguration.proxyUrl\n  return {\n    session_sample_rate: initConfiguration.sessionSampleRate ?? initConfiguration.sampleRate,\n    telemetry_sample_rate: initConfiguration.telemetrySampleRate,\n    telemetry_configuration_sample_rate: initConfiguration.telemetryConfigurationSampleRate,\n    use_before_send: !!initConfiguration.beforeSend,\n    use_cross_site_session_cookie: initConfiguration.useCrossSiteSessionCookie,\n    use_secure_session_cookie: initConfiguration.useSecureSessionCookie,\n    use_proxy: proxy !== undefined ? !!proxy : undefined,\n    silent_multiple_init: initConfiguration.silentMultipleInit,\n    track_session_across_subdomains: initConfiguration.trackSessionAcrossSubdomains,\n    track_resources: initConfiguration.trackResources,\n    track_long_task: initConfiguration.trackLongTasks,\n    allow_fallback_to_local_storage: !!initConfiguration.allowFallbackToLocalStorage,\n  }\n}\n","import { startsWith } from './utils/polyfills'\nimport { display } from './display'\nimport { getType } from './utils/typeUtils'\n\nexport type MatchOption = string | RegExp | ((value: string) => boolean)\n\nexport function isMatchOption(item: unknown): item is MatchOption {\n  const itemType = getType(item)\n  return itemType === 'string' || itemType === 'function' || item instanceof RegExp\n}\n\n/**\n * Returns true if value can be matched by at least one of the provided MatchOptions.\n * When comparing strings, setting useStartsWith to true will compare the value with the start of\n * the option, instead of requiring an exact match.\n */\nexport function matchList(list: MatchOption[], value: string, useStartsWith = false): boolean {\n  return list.some((item) => {\n    try {\n      if (typeof item === 'function') {\n        return item(value)\n      } else if (item instanceof RegExp) {\n        return item.test(value)\n      } else if (typeof item === 'string') {\n        return useStartsWith ? startsWith(value, item) : item === value\n      }\n    } catch (e) {\n      display.error(e)\n    }\n    return false\n  })\n}\n","import {\n  objectEntries,\n  shallowClone,\n  performDraw,\n  isNumber,\n  assign,\n  find,\n  getType,\n  isMatchOption,\n  matchList,\n} from '@datadog/browser-core'\nimport type { RumConfiguration } from '../configuration'\nimport type {\n  RumFetchResolveContext,\n  RumFetchStartContext,\n  RumXhrCompleteContext,\n  RumXhrStartContext,\n} from '../requestCollection'\nimport type { RumSessionManager } from '../rumSessionManager'\nimport type { PropagatorType, TracingOption } from './tracer.types'\n\nexport interface Tracer {\n  traceFetch: (context: Partial<RumFetchStartContext>) => void\n  traceXhr: (context: Partial<RumXhrStartContext>, xhr: XMLHttpRequest) => void\n  clearTracingIfNeeded: (context: RumFetchResolveContext | RumXhrCompleteContext) => void\n}\n\ninterface TracingHeaders {\n  [key: string]: string\n}\n\nexport function isTracingOption(item: unknown): item is TracingOption {\n  const expectedItem = item as TracingOption\n  return (\n    getType(expectedItem) === 'object' &&\n    isMatchOption(expectedItem.match) &&\n    Array.isArray(expectedItem.propagatorTypes)\n  )\n}\n\n/**\n * Clear tracing information to avoid incomplete traces. Ideally, we should do it when the\n * request did not reach the server, but the browser does not expose this. So, we clear tracing\n * information if the request ended with status 0 without being aborted by the application.\n *\n * Reasoning:\n *\n * * Applications are usually aborting requests after a bit of time, for example when the user is\n * typing (autocompletion) or navigating away (in a SPA). With a performant device and good\n * network conditions, the request is likely to reach the server before being canceled.\n *\n * * Requests aborted otherwise (ex: lack of internet, CORS issue, blocked by a privacy extension)\n * are likely to finish quickly and without reaching the server.\n *\n * Of course, it might not be the case every time, but it should limit having incomplete traces a\n * bit.\n * */\nexport function clearTracingIfNeeded(context: RumFetchResolveContext | RumXhrCompleteContext) {\n  if (context.status === 0 && !context.isAborted) {\n    context.traceId = undefined\n    context.spanId = undefined\n    context.traceSampled = undefined\n  }\n}\n\nexport function startTracer(configuration: RumConfiguration, sessionManager: RumSessionManager): Tracer {\n  return {\n    clearTracingIfNeeded,\n    traceFetch: (context) =>\n      injectHeadersIfTracingAllowed(configuration, context, sessionManager, (tracingHeaders: TracingHeaders) => {\n        if (context.input instanceof Request && !context.init?.headers) {\n          context.input = new Request(context.input)\n          Object.keys(tracingHeaders).forEach((key) => {\n            ;(context.input as Request).headers.append(key, tracingHeaders[key])\n          })\n        } else {\n          context.init = shallowClone(context.init)\n          const headers: Array<[string, string]> = []\n          if (context.init.headers instanceof Headers) {\n            context.init.headers.forEach((value, key) => {\n              headers.push([key, value])\n            })\n          } else if (Array.isArray(context.init.headers)) {\n            context.init.headers.forEach((header) => {\n              headers.push(header)\n            })\n          } else if (context.init.headers) {\n            Object.keys(context.init.headers).forEach((key) => {\n              headers.push([key, (context.init!.headers as Record<string, string>)[key]])\n            })\n          }\n          context.init.headers = headers.concat(objectEntries(tracingHeaders))\n        }\n      }),\n    traceXhr: (context, xhr) =>\n      injectHeadersIfTracingAllowed(configuration, context, sessionManager, (tracingHeaders: TracingHeaders) => {\n        Object.keys(tracingHeaders).forEach((name) => {\n          xhr.setRequestHeader(name, tracingHeaders[name])\n        })\n      }),\n  }\n}\n\nfunction injectHeadersIfTracingAllowed(\n  configuration: RumConfiguration,\n  context: Partial<RumFetchStartContext | RumXhrStartContext>,\n  sessionManager: RumSessionManager,\n  inject: (tracingHeaders: TracingHeaders) => void\n) {\n  if (!isTracingSupported() || !sessionManager.findTrackedSession()) {\n    return\n  }\n\n  const tracingOption = find(configuration.allowedTracingUrls, (tracingOption: TracingOption) =>\n    matchList([tracingOption.match], context.url!, true)\n  )\n  if (!tracingOption) {\n    return\n  }\n\n  context.traceId = new TraceIdentifier()\n  context.spanId = new TraceIdentifier()\n  context.traceSampled = !isNumber(configuration.traceSampleRate) || performDraw(configuration.traceSampleRate)\n  inject(makeTracingHeaders(context.traceId, context.spanId, context.traceSampled, tracingOption.propagatorTypes))\n}\n\nexport function isTracingSupported() {\n  return getCrypto() !== undefined\n}\n\nfunction getCrypto() {\n  return window.crypto || (window as any).msCrypto\n}\n\n/**\n * When trace is not sampled, set priority to '0' instead of not adding the tracing headers\n * to prepare the implementation for sampling delegation.\n */\nfunction makeTracingHeaders(\n  traceId: TraceIdentifier,\n  spanId: TraceIdentifier,\n  traceSampled: boolean,\n  propagatorTypes: PropagatorType[]\n): TracingHeaders {\n  const tracingHeaders: TracingHeaders = {}\n\n  propagatorTypes.forEach((propagatorType) => {\n    switch (propagatorType) {\n      case 'datadog': {\n        assign(tracingHeaders, {\n          'x-datadog-origin': 'rum',\n          'x-datadog-parent-id': spanId.toDecimalString(),\n          'x-datadog-sampling-priority': traceSampled ? '1' : '0',\n          'x-datadog-trace-id': traceId.toDecimalString(),\n        })\n        break\n      }\n      // https://www.w3.org/TR/trace-context/\n      case 'tracecontext': {\n        assign(tracingHeaders, {\n          traceparent: `00-0000000000000000${traceId.toPaddedHexadecimalString()}-${spanId.toPaddedHexadecimalString()}-0${\n            traceSampled ? '1' : '0'\n          }`,\n        })\n        break\n      }\n      // https://github.com/openzipkin/b3-propagation\n      case 'b3': {\n        assign(tracingHeaders, {\n          b3: `${traceId.toPaddedHexadecimalString()}-${spanId.toPaddedHexadecimalString()}-${\n            traceSampled ? '1' : '0'\n          }`,\n        })\n        break\n      }\n      case 'b3multi': {\n        assign(tracingHeaders, {\n          'X-B3-TraceId': traceId.toPaddedHexadecimalString(),\n          'X-B3-SpanId': spanId.toPaddedHexadecimalString(),\n          'X-B3-Sampled': traceSampled ? '1' : '0',\n        })\n        break\n      }\n    }\n  })\n  return tracingHeaders\n}\n\n/* eslint-disable no-bitwise */\nexport class TraceIdentifier {\n  private buffer: Uint8Array = new Uint8Array(8)\n\n  constructor() {\n    getCrypto().getRandomValues(this.buffer)\n    this.buffer[0] = this.buffer[0] & 0x7f // force 63-bit\n  }\n\n  toString(radix: number) {\n    let high = this.readInt32(0)\n    let low = this.readInt32(4)\n    let str = ''\n\n    do {\n      const mod = (high % radix) * 4294967296 + low\n      high = Math.floor(high / radix)\n      low = Math.floor(mod / radix)\n      str = (mod % radix).toString(radix) + str\n    } while (high || low)\n\n    return str\n  }\n\n  /**\n   * Format used everywhere except the trace intake\n   */\n  toDecimalString() {\n    return this.toString(10)\n  }\n\n  /**\n   * Format used by OTel headers\n   */\n  toPaddedHexadecimalString() {\n    const traceId = this.toString(16)\n    return Array(17 - traceId.length).join('0') + traceId\n  }\n\n  private readInt32(offset: number) {\n    return (\n      this.buffer[offset] * 16777216 +\n      (this.buffer[offset + 1] << 16) +\n      (this.buffer[offset + 2] << 8) +\n      this.buffer[offset + 3]\n    )\n  }\n}\n/* eslint-enable no-bitwise */\n","import type { Configuration, InitConfiguration, MatchOption, RawTelemetryConfiguration } from '@datadog/browser-core'\nimport {\n  getType,\n  arrayFrom,\n  getOrigin,\n  isMatchOption,\n  serializeConfiguration,\n  assign,\n  DefaultPrivacyLevel,\n  display,\n  isPercentage,\n  objectHasValue,\n  validateAndBuildConfiguration,\n} from '@datadog/browser-core'\nimport type { RumEventDomainContext } from '../domainContext.types'\nimport type { RumEvent } from '../rumEvent.types'\nimport { isTracingOption } from './tracing/tracer'\nimport type { PropagatorType, TracingOption } from './tracing/tracer.types'\n\nexport interface RumInitConfiguration extends InitConfiguration {\n  // global options\n  applicationId: string\n  beforeSend?: ((event: RumEvent, context: RumEventDomainContext) => void | boolean) | undefined\n  /**\n   * @deprecated use sessionReplaySampleRate instead\n   */\n  premiumSampleRate?: number | undefined\n  excludedActivityUrls?: MatchOption[] | undefined\n\n  // tracing options\n  /**\n   * @deprecated use allowedTracingUrls instead\n   */\n  allowedTracingOrigins?: MatchOption[] | undefined\n  allowedTracingUrls?: Array<MatchOption | TracingOption> | undefined\n  /**\n   * @deprecated use traceSampleRate instead\n   */\n  tracingSampleRate?: number | undefined\n  traceSampleRate?: number | undefined\n\n  // replay options\n  defaultPrivacyLevel?: DefaultPrivacyLevel | undefined\n  subdomain?: string\n  /**\n   * @deprecated use sessionReplaySampleRate instead\n   */\n  replaySampleRate?: number | undefined\n  sessionReplaySampleRate?: number | undefined\n\n  // action options\n  /**\n   * @deprecated use trackUserInteractions instead\n   */\n  trackInteractions?: boolean | undefined\n  trackUserInteractions?: boolean | undefined\n  trackFrustrations?: boolean | undefined\n  actionNameAttribute?: string | undefined\n\n  // view options\n  trackViewsManually?: boolean | undefined\n\n  trackResources?: boolean | undefined\n  trackLongTasks?: boolean | undefined\n}\n\nexport type HybridInitConfiguration = Omit<RumInitConfiguration, 'applicationId' | 'clientToken'>\n\nexport interface RumConfiguration extends Configuration {\n  // Built from init configuration\n  actionNameAttribute: string | undefined\n  traceSampleRate: number | undefined\n  allowedTracingUrls: TracingOption[]\n  excludedActivityUrls: MatchOption[]\n  applicationId: string\n  defaultPrivacyLevel: DefaultPrivacyLevel\n  oldPlansBehavior: boolean\n  sessionReplaySampleRate: number\n  trackUserInteractions: boolean\n  trackFrustrations: boolean\n  trackViewsManually: boolean\n  trackResources: boolean | undefined\n  trackLongTasks: boolean | undefined\n  version?: string\n  subdomain?: string\n  customerDataTelemetrySampleRate: number\n}\n\nexport function validateAndBuildRumConfiguration(\n  initConfiguration: RumInitConfiguration\n): RumConfiguration | undefined {\n  if (!initConfiguration.applicationId) {\n    display.error('Application ID is not configured, no RUM data will be collected.')\n    return\n  }\n\n  if (\n    initConfiguration.sessionReplaySampleRate !== undefined &&\n    !isPercentage(initConfiguration.sessionReplaySampleRate)\n  ) {\n    display.error('Session Replay Sample Rate should be a number between 0 and 100')\n    return\n  }\n\n  // TODO remove fallback in next major\n  let premiumSampleRate = initConfiguration.premiumSampleRate ?? initConfiguration.replaySampleRate\n  if (premiumSampleRate !== undefined && initConfiguration.sessionReplaySampleRate !== undefined) {\n    display.warn('Ignoring Premium Sample Rate because Session Replay Sample Rate is set')\n    premiumSampleRate = undefined\n  }\n\n  if (premiumSampleRate !== undefined && !isPercentage(premiumSampleRate)) {\n    display.error('Premium Sample Rate should be a number between 0 and 100')\n    return\n  }\n\n  const traceSampleRate = initConfiguration.traceSampleRate ?? initConfiguration.tracingSampleRate\n  if (traceSampleRate !== undefined && !isPercentage(traceSampleRate)) {\n    display.error('Trace Sample Rate should be a number between 0 and 100')\n    return\n  }\n\n  if (initConfiguration.excludedActivityUrls !== undefined && !Array.isArray(initConfiguration.excludedActivityUrls)) {\n    display.error('Excluded Activity Urls should be an array')\n    return\n  }\n\n  const allowedTracingUrls = validateAndBuildTracingOptions(initConfiguration)\n  if (!allowedTracingUrls) {\n    return\n  }\n\n  const baseConfiguration = validateAndBuildConfiguration(initConfiguration)\n  if (!baseConfiguration) {\n    return\n  }\n\n  const trackUserInteractions = !!(initConfiguration.trackUserInteractions ?? initConfiguration.trackInteractions)\n  const trackFrustrations = !!initConfiguration.trackFrustrations\n\n  return assign(\n    {\n      applicationId: initConfiguration.applicationId,\n      version: initConfiguration.version,\n      actionNameAttribute: initConfiguration.actionNameAttribute,\n      sessionReplaySampleRate: initConfiguration.sessionReplaySampleRate ?? premiumSampleRate ?? 100,\n      oldPlansBehavior: initConfiguration.sessionReplaySampleRate === undefined,\n      traceSampleRate,\n      allowedTracingUrls,\n      excludedActivityUrls: initConfiguration.excludedActivityUrls ?? [],\n      trackUserInteractions: trackUserInteractions || trackFrustrations,\n      trackFrustrations,\n      trackViewsManually: !!initConfiguration.trackViewsManually,\n      trackResources: initConfiguration.trackResources,\n      trackLongTasks: initConfiguration.trackLongTasks,\n      subdomain: initConfiguration.subdomain,\n      defaultPrivacyLevel: objectHasValue(DefaultPrivacyLevel, initConfiguration.defaultPrivacyLevel)\n        ? initConfiguration.defaultPrivacyLevel\n        : DefaultPrivacyLevel.MASK_USER_INPUT,\n      customerDataTelemetrySampleRate: 1,\n    },\n    baseConfiguration\n  )\n}\n\n/**\n * Handles allowedTracingUrls and processes legacy allowedTracingOrigins\n */\nfunction validateAndBuildTracingOptions(initConfiguration: RumInitConfiguration): TracingOption[] | undefined {\n  // Advise about parameters precedence.\n  if (initConfiguration.allowedTracingUrls !== undefined && initConfiguration.allowedTracingOrigins !== undefined) {\n    display.warn(\n      'Both allowedTracingUrls and allowedTracingOrigins (deprecated) have been defined. The parameter allowedTracingUrls will override allowedTracingOrigins.'\n    )\n  }\n  // Handle allowedTracingUrls first\n  if (initConfiguration.allowedTracingUrls !== undefined) {\n    if (!Array.isArray(initConfiguration.allowedTracingUrls)) {\n      display.error('Allowed Tracing URLs should be an array')\n      return\n    }\n    if (initConfiguration.allowedTracingUrls.length !== 0 && initConfiguration.service === undefined) {\n      display.error('Service needs to be configured when tracing is enabled')\n      return\n    }\n    // Convert from (MatchOption | TracingOption) to TracingOption, remove unknown properties\n    const tracingOptions: TracingOption[] = []\n    initConfiguration.allowedTracingUrls.forEach((option) => {\n      if (isMatchOption(option)) {\n        tracingOptions.push({ match: option, propagatorTypes: ['datadog'] })\n      } else if (isTracingOption(option)) {\n        tracingOptions.push(option)\n      } else {\n        display.warn(\n          'Allowed Tracing Urls parameters should be a string, RegExp, function, or an object. Ignoring parameter',\n          option\n        )\n      }\n    })\n\n    return tracingOptions\n  }\n\n  // Handle conversion of allowedTracingOrigins to allowedTracingUrls\n  if (initConfiguration.allowedTracingOrigins !== undefined) {\n    if (!Array.isArray(initConfiguration.allowedTracingOrigins)) {\n      display.error('Allowed Tracing Origins should be an array')\n      return\n    }\n    if (initConfiguration.allowedTracingOrigins.length !== 0 && initConfiguration.service === undefined) {\n      display.error('Service needs to be configured when tracing is enabled')\n      return\n    }\n\n    const tracingOptions: TracingOption[] = []\n    initConfiguration.allowedTracingOrigins.forEach((legacyMatchOption) => {\n      const tracingOption = convertLegacyMatchOptionToTracingOption(legacyMatchOption)\n      if (tracingOption) {\n        tracingOptions.push(tracingOption)\n      }\n    })\n    return tracingOptions\n  }\n\n  return []\n}\n\n/**\n * Converts parameters from the deprecated allowedTracingOrigins\n * to allowedTracingUrls. Handles the change from origin to full URLs.\n */\nfunction convertLegacyMatchOptionToTracingOption(item: MatchOption): TracingOption | undefined {\n  let match: MatchOption | undefined\n  if (typeof item === 'string') {\n    match = item\n  } else if (item instanceof RegExp) {\n    match = (url) => item.test(getOrigin(url))\n  } else if (typeof item === 'function') {\n    match = (url) => item(getOrigin(url))\n  }\n\n  if (match === undefined) {\n    display.warn('Allowed Tracing Origins parameters should be a string, RegExp or function. Ignoring parameter', item)\n    return undefined\n  }\n\n  return { match, propagatorTypes: ['datadog'] }\n}\n\n/**\n * Combines the selected tracing propagators from the different options in allowedTracingUrls,\n * and assumes 'datadog' has been selected when using allowedTracingOrigins\n */\nfunction getSelectedTracingPropagators(configuration: RumInitConfiguration): PropagatorType[] {\n  const usedTracingPropagators = new Set<PropagatorType>()\n\n  if (Array.isArray(configuration.allowedTracingUrls) && configuration.allowedTracingUrls.length > 0) {\n    configuration.allowedTracingUrls.forEach((option) => {\n      if (isMatchOption(option)) {\n        usedTracingPropagators.add('datadog')\n      } else if (getType(option) === 'object' && Array.isArray(option.propagatorTypes)) {\n        // Ensure we have an array, as we cannot rely on types yet (configuration is provided by users)\n        option.propagatorTypes.forEach((propagatorType) => usedTracingPropagators.add(propagatorType))\n      }\n    })\n  }\n\n  if (Array.isArray(configuration.allowedTracingOrigins) && configuration.allowedTracingOrigins.length > 0) {\n    usedTracingPropagators.add('datadog')\n  }\n\n  return arrayFrom(usedTracingPropagators)\n}\n\nexport function serializeRumConfiguration(configuration: RumInitConfiguration): RawTelemetryConfiguration {\n  const baseSerializedConfiguration = serializeConfiguration(configuration)\n\n  return assign(\n    {\n      premium_sample_rate: configuration.premiumSampleRate,\n      replay_sample_rate: configuration.replaySampleRate,\n      session_replay_sample_rate: configuration.sessionReplaySampleRate,\n      trace_sample_rate: configuration.traceSampleRate ?? configuration.tracingSampleRate,\n      action_name_attribute: configuration.actionNameAttribute,\n      use_allowed_tracing_origins:\n        Array.isArray(configuration.allowedTracingOrigins) && configuration.allowedTracingOrigins.length > 0,\n      use_allowed_tracing_urls:\n        Array.isArray(configuration.allowedTracingUrls) && configuration.allowedTracingUrls.length > 0,\n      selected_tracing_propagators: getSelectedTracingPropagators(configuration),\n      default_privacy_level: configuration.defaultPrivacyLevel,\n      use_excluded_activity_urls:\n        Array.isArray(configuration.excludedActivityUrls) && configuration.excludedActivityUrls.length > 0,\n      track_frustrations: configuration.trackFrustrations,\n      track_views_manually: configuration.trackViewsManually,\n      track_user_interactions: configuration.trackUserInteractions ?? configuration.trackInteractions,\n    },\n    baseSerializedConfiguration\n  )\n}\n","import type { Context, ContextManager, User } from '@datadog/browser-core'\nimport type { RecorderApi } from '../../boot/rumPublicApi'\n\nexport interface CommonContext {\n  user: User\n  context: Context\n  hasReplay: true | undefined\n}\n\nexport function buildCommonContext(\n  globalContextManager: ContextManager,\n  userContextManager: ContextManager,\n  recorderApi: RecorderApi\n): CommonContext {\n  return {\n    context: globalContextManager.getContext(),\n    user: userContextManager.getContext(),\n    hasReplay: recorderApi.isRecording() ? true : undefined,\n  }\n}\n","interface BrowserWindow {\n  __ddBrowserSdkExtensionCallback?: (message: unknown) => void\n}\n\ntype ExtensionMessageType = 'logs' | 'record' | 'rum' | 'telemetry'\n\nexport function sendToExtension(type: ExtensionMessageType, payload: unknown) {\n  const callback = (window as BrowserWindow).__ddBrowserSdkExtensionCallback\n  if (callback) {\n    callback({ type, payload })\n  }\n}\n","import type { TelemetryEvent, TelemetryConfigurationEvent } from './telemetryEvent.types'\n\nexport const TelemetryType = {\n  log: 'log',\n  configuration: 'configuration',\n} as const\n\nexport const enum StatusType {\n  debug = 'debug',\n  error = 'error',\n}\n\nexport type RawTelemetryEvent = TelemetryEvent['telemetry']\nexport type RawTelemetryConfiguration = TelemetryConfigurationEvent['telemetry']['configuration']\n","import type { Context } from '../../tools/serialisation/context'\nimport { ConsoleApiName } from '../../tools/display'\nimport { toStackTraceString, NO_ERROR_STACK_PRESENT_MESSAGE } from '../error/error'\nimport { getExperimentalFeatures } from '../../tools/experimentalFeatures'\nimport type { Configuration } from '../configuration'\nimport { INTAKE_SITE_STAGING, INTAKE_SITE_US1_FED } from '../configuration'\nimport type { StackTrace } from '../tracekit'\nimport { computeStackTrace } from '../tracekit'\nimport { Observable } from '../../tools/observable'\nimport { timeStampNow } from '../../tools/utils/timeUtils'\nimport { displayIfDebugEnabled, startMonitorErrorCollection } from '../../tools/monitor'\nimport { sendToExtension } from '../../tools/sendToExtension'\nimport { startsWith, arrayFrom, includes, assign } from '../../tools/utils/polyfills'\nimport { performDraw } from '../../tools/utils/numberUtils'\nimport { jsonStringify } from '../../tools/serialisation/jsonStringify'\nimport { combine } from '../../tools/mergeInto'\nimport { NonErrorPrefix } from '../error/error.types'\nimport type { TelemetryEvent } from './telemetryEvent.types'\nimport type { RawTelemetryConfiguration, RawTelemetryEvent } from './rawTelemetryEvent.types'\nimport { StatusType, TelemetryType } from './rawTelemetryEvent.types'\n\n// replaced at build time\ndeclare const __BUILD_ENV__SDK_VERSION__: string\n\nconst ALLOWED_FRAME_URLS = [\n  'https://www.datadoghq-browser-agent.com',\n  'https://www.datad0g-browser-agent.com',\n  'https://d3uc069fcn7uxw.cloudfront.net',\n  'https://d20xtzwzcl0ceb.cloudfront.net',\n  'http://localhost',\n  '<anonymous>',\n]\n\nexport const enum TelemetryService {\n  LOGS = 'browser-logs-sdk',\n  RUM = 'browser-rum-sdk',\n}\n\nexport interface Telemetry {\n  setContextProvider: (provider: () => Context) => void\n  observable: Observable<TelemetryEvent & Context>\n  enabled: boolean\n}\n\nconst TELEMETRY_EXCLUDED_SITES: string[] = [INTAKE_SITE_US1_FED]\n\nconst telemetryConfiguration: {\n  maxEventsPerPage: number\n  sentEventCount: number\n  telemetryEnabled: boolean\n  telemetryConfigurationEnabled: boolean\n} = { maxEventsPerPage: 0, sentEventCount: 0, telemetryEnabled: false, telemetryConfigurationEnabled: false }\n\nlet onRawTelemetryEventCollected: ((event: RawTelemetryEvent) => void) | undefined\n\nexport function startTelemetry(telemetryService: TelemetryService, configuration: Configuration): Telemetry {\n  let contextProvider: () => Context\n  const observable = new Observable<TelemetryEvent & Context>()\n\n  telemetryConfiguration.telemetryEnabled =\n    !includes(TELEMETRY_EXCLUDED_SITES, configuration.site) && performDraw(configuration.telemetrySampleRate)\n  telemetryConfiguration.telemetryConfigurationEnabled =\n    telemetryConfiguration.telemetryEnabled && performDraw(configuration.telemetryConfigurationSampleRate)\n\n  onRawTelemetryEventCollected = (rawEvent: RawTelemetryEvent) => {\n    if (telemetryConfiguration.telemetryEnabled) {\n      const event = toTelemetryEvent(telemetryService, rawEvent)\n      observable.notify(event)\n      sendToExtension('telemetry', event)\n    }\n  }\n  startMonitorErrorCollection(addTelemetryError)\n\n  assign(telemetryConfiguration, {\n    maxEventsPerPage: configuration.maxTelemetryEventsPerPage,\n    sentEventCount: 0,\n  })\n\n  function toTelemetryEvent(telemetryService: TelemetryService, event: RawTelemetryEvent): TelemetryEvent & Context {\n    return combine(\n      {\n        type: 'telemetry' as const,\n        date: timeStampNow(),\n        service: telemetryService,\n        version: __BUILD_ENV__SDK_VERSION__,\n        source: 'browser' as const,\n        _dd: {\n          format_version: 2 as const,\n        },\n        telemetry: event as any, // https://github.com/microsoft/TypeScript/issues/48457\n        experimental_features: arrayFrom(getExperimentalFeatures()),\n      },\n      contextProvider !== undefined ? contextProvider() : {}\n    )\n  }\n\n  return {\n    setContextProvider: (provider: () => Context) => {\n      contextProvider = provider\n    },\n    observable,\n    enabled: telemetryConfiguration.telemetryEnabled,\n  }\n}\n\nexport function startFakeTelemetry() {\n  const events: RawTelemetryEvent[] = []\n  assign(telemetryConfiguration, {\n    maxEventsPerPage: Infinity,\n    sentEventCount: 0,\n  })\n\n  onRawTelemetryEventCollected = (event: RawTelemetryEvent) => {\n    events.push(event)\n  }\n\n  return events\n}\n\nexport function resetTelemetry() {\n  onRawTelemetryEventCollected = undefined\n}\n\n/**\n * Avoid mixing telemetry events from different data centers\n * but keep replicating staging events for reliability\n */\nexport function isTelemetryReplicationAllowed(configuration: Configuration) {\n  return configuration.site === INTAKE_SITE_STAGING\n}\n\nexport function addTelemetryDebug(message: string, context?: Context) {\n  displayIfDebugEnabled(ConsoleApiName.debug, message, context)\n  addTelemetry(\n    assign(\n      {\n        type: TelemetryType.log,\n        message,\n        status: StatusType.debug,\n      },\n      context\n    )\n  )\n}\n\nexport function addTelemetryError(e: unknown, context?: Context) {\n  addTelemetry(\n    assign(\n      {\n        type: TelemetryType.log,\n        status: StatusType.error,\n      },\n      formatError(e),\n      context\n    )\n  )\n}\n\nexport function addTelemetryConfiguration(configuration: RawTelemetryConfiguration) {\n  if (telemetryConfiguration.telemetryConfigurationEnabled) {\n    addTelemetry({\n      type: TelemetryType.configuration,\n      configuration,\n    })\n  }\n}\n\nfunction addTelemetry(event: RawTelemetryEvent) {\n  if (onRawTelemetryEventCollected && telemetryConfiguration.sentEventCount < telemetryConfiguration.maxEventsPerPage) {\n    telemetryConfiguration.sentEventCount += 1\n    onRawTelemetryEventCollected(event)\n  }\n}\n\nexport function formatError(e: unknown) {\n  if (e instanceof Error) {\n    const stackTrace = computeStackTrace(e)\n    return {\n      error: {\n        kind: stackTrace.name,\n        stack: toStackTraceString(scrubCustomerFrames(stackTrace)),\n      },\n      message: stackTrace.message!,\n    }\n  }\n  return {\n    error: {\n      stack: NO_ERROR_STACK_PRESENT_MESSAGE,\n    },\n    message: `${NonErrorPrefix.UNCAUGHT} ${jsonStringify(e)!}`,\n  }\n}\n\nexport function scrubCustomerFrames(stackTrace: StackTrace) {\n  stackTrace.stack = stackTrace.stack.filter(\n    (frame) => !frame.url || ALLOWED_FRAME_URLS.some((allowedFrameUrl) => startsWith(frame.url!, allowedFrameUrl))\n  )\n  return stackTrace\n}\n","import { monitor } from '../tools/monitor'\nimport { getZoneJsOriginalValue } from '../tools/getZoneJsOriginalValue'\nimport type { VisualViewport, VisualViewportEventMap } from './types'\n\nexport const enum DOM_EVENT {\n  BEFORE_UNLOAD = 'beforeunload',\n  CLICK = 'click',\n  DBL_CLICK = 'dblclick',\n  KEY_DOWN = 'keydown',\n  LOAD = 'load',\n  POP_STATE = 'popstate',\n  SCROLL = 'scroll',\n  TOUCH_START = 'touchstart',\n  TOUCH_END = 'touchend',\n  TOUCH_MOVE = 'touchmove',\n  VISIBILITY_CHANGE = 'visibilitychange',\n  PAGE_SHOW = 'pageshow',\n  FREEZE = 'freeze',\n  RESUME = 'resume',\n  DOM_CONTENT_LOADED = 'DOMContentLoaded',\n  POINTER_DOWN = 'pointerdown',\n  POINTER_UP = 'pointerup',\n  POINTER_CANCEL = 'pointercancel',\n  HASH_CHANGE = 'hashchange',\n  PAGE_HIDE = 'pagehide',\n  MOUSE_DOWN = 'mousedown',\n  MOUSE_UP = 'mouseup',\n  MOUSE_MOVE = 'mousemove',\n  FOCUS = 'focus',\n  BLUR = 'blur',\n  CONTEXT_MENU = 'contextmenu',\n  RESIZE = 'resize',\n  CHANGE = 'change',\n  INPUT = 'input',\n  PLAY = 'play',\n  PAUSE = 'pause',\n  SECURITY_POLICY_VIOLATION = 'securitypolicyviolation',\n  SELECTION_CHANGE = 'selectionchange',\n}\n\ninterface AddEventListenerOptions {\n  once?: boolean\n  capture?: boolean\n  passive?: boolean\n}\n\ntype EventMapFor<T> = T extends Window\n  ? WindowEventMap & {\n      // TS 4.9.5 does not support `freeze` and `resume` events yet\n      freeze: Event\n      resume: Event\n      // TS 4.9.5 does not define `visibilitychange` on Window (only Document)\n      visibilitychange: Event\n    }\n  : T extends Document\n  ? DocumentEventMap\n  : T extends HTMLElement\n  ? HTMLElementEventMap\n  : T extends VisualViewport\n  ? VisualViewportEventMap\n  : T extends ShadowRoot\n  ? // ShadowRootEventMap is not yet defined in our supported TS version. Instead, use\n    // GlobalEventHandlersEventMap which is more than enough as we only need to listen for events bubbling\n    // through the ShadowRoot like \"change\" or \"input\"\n    GlobalEventHandlersEventMap\n  : T extends XMLHttpRequest\n  ? XMLHttpRequestEventMap\n  : T extends Performance\n  ? PerformanceEventMap\n  : T extends Worker\n  ? WorkerEventMap\n  : Record<never, never>\n\n/**\n * Add an event listener to an event target object (Window, Element, mock object...).  This provides\n * a few conveniences compared to using `element.addEventListener` directly:\n *\n * * supports IE11 by: using an option object only if needed and emulating the `once` option\n *\n * * wraps the listener with a `monitor` function\n *\n * * returns a `stop` function to remove the listener\n */\nexport function addEventListener<Target extends EventTarget, EventName extends keyof EventMapFor<Target> & string>(\n  eventTarget: Target,\n  eventName: EventName,\n  listener: (event: EventMapFor<Target>[EventName]) => void,\n  options?: AddEventListenerOptions\n) {\n  return addEventListeners(eventTarget, [eventName], listener, options)\n}\n\n/**\n * Add event listeners to an event target object (Window, Element, mock object...).  This provides\n * a few conveniences compared to using `element.addEventListener` directly:\n *\n * * supports IE11 by: using an option object only if needed and emulating the `once` option\n *\n * * wraps the listener with a `monitor` function\n *\n * * returns a `stop` function to remove the listener\n *\n * * with `once: true`, the listener will be called at most once, even if different events are listened\n */\nexport function addEventListeners<Target extends EventTarget, EventName extends keyof EventMapFor<Target> & string>(\n  eventTarget: Target,\n  eventNames: EventName[],\n  listener: (event: EventMapFor<Target>[EventName]) => void,\n  { once, capture, passive }: AddEventListenerOptions = {}\n) {\n  const wrappedListener = monitor(\n    once\n      ? (event: Event) => {\n          stop()\n          listener(event as EventMapFor<Target>[EventName])\n        }\n      : (listener as (event: Event) => void)\n  )\n\n  const options = passive ? { capture, passive } : capture\n\n  const add = getZoneJsOriginalValue(eventTarget, 'addEventListener')\n  eventNames.forEach((eventName) => add.call(eventTarget, eventName, wrappedListener, options))\n\n  function stop() {\n    const remove = getZoneJsOriginalValue(eventTarget, 'removeEventListener')\n    eventNames.forEach((eventName) => remove.call(eventTarget, eventName, wrappedListener, options))\n  }\n\n  return {\n    stop,\n  }\n}\n","import { isExperimentalFeatureEnabled, ExperimentalFeature } from '../tools/experimentalFeatures'\nimport { Observable } from '../tools/observable'\nimport { objectValues, includes } from '../tools/utils/polyfills'\nimport { noop } from '../tools/utils/functionUtils'\nimport { addEventListeners, addEventListener, DOM_EVENT } from './addEventListener'\n\nexport const PageExitReason = {\n  HIDDEN: 'visibility_hidden',\n  UNLOADING: 'before_unload',\n  PAGEHIDE: 'page_hide',\n  FROZEN: 'page_frozen',\n} as const\n\nexport type PageExitReason = (typeof PageExitReason)[keyof typeof PageExitReason]\n\nexport interface PageExitEvent {\n  reason: PageExitReason\n}\n\nexport function createPageExitObservable(): Observable<PageExitEvent> {\n  const observable = new Observable<PageExitEvent>(() => {\n    const pagehideEnabled = isExperimentalFeatureEnabled(ExperimentalFeature.PAGEHIDE)\n    const { stop: stopListeners } = addEventListeners(\n      window,\n      [DOM_EVENT.VISIBILITY_CHANGE, DOM_EVENT.FREEZE, DOM_EVENT.PAGE_HIDE],\n      (event) => {\n        if (event.type === DOM_EVENT.PAGE_HIDE && pagehideEnabled) {\n          /**\n           * Only event that detect page unload events while being compatible with the back/forward cache (bfcache)\n           */\n          observable.notify({ reason: PageExitReason.PAGEHIDE })\n        } else if (event.type === DOM_EVENT.VISIBILITY_CHANGE && document.visibilityState === 'hidden') {\n          /**\n           * Only event that guarantee to fire on mobile devices when the page transitions to background state\n           * (e.g. when user switches to a different application, goes to homescreen, etc), or is being unloaded.\n           */\n          observable.notify({ reason: PageExitReason.HIDDEN })\n        } else if (event.type === DOM_EVENT.FREEZE) {\n          /**\n           * After transitioning in background a tab can be freezed to preserve resources. (cf: https://developer.chrome.com/blog/page-lifecycle-api)\n           * Allow to collect events happening between hidden and frozen state.\n           */\n          observable.notify({ reason: PageExitReason.FROZEN })\n        }\n      },\n      { capture: true }\n    )\n\n    let stopBeforeUnloadListener = noop\n    if (!pagehideEnabled) {\n      stopBeforeUnloadListener = addEventListener(window, DOM_EVENT.BEFORE_UNLOAD, () => {\n        observable.notify({ reason: PageExitReason.UNLOADING })\n      }).stop\n    }\n\n    return () => {\n      stopListeners()\n      stopBeforeUnloadListener()\n    }\n  })\n\n  return observable\n}\n\nexport function isPageExitReason(reason: string | undefined): reason is PageExitReason {\n  return includes(objectValues(PageExitReason), reason)\n}\n","import { monitor, noop, Observable, getZoneJsOriginalValue } from '@datadog/browser-core'\n\nexport function createDOMMutationObservable() {\n  const MutationObserver = getMutationObserverConstructor()\n\n  const observable: Observable<void> = new Observable<void>(() => {\n    if (!MutationObserver) {\n      return\n    }\n    const observer = new MutationObserver(monitor(() => observable.notify()))\n    observer.observe(document, {\n      attributes: true,\n      characterData: true,\n      childList: true,\n      subtree: true,\n    })\n    return () => observer.disconnect()\n  })\n\n  return observable\n}\n\ntype MutationObserverConstructor = new (callback: MutationCallback) => MutationObserver\n\nexport interface BrowserWindow extends Window {\n  MutationObserver?: MutationObserverConstructor\n  Zone?: unknown\n}\n\nexport function getMutationObserverConstructor(): MutationObserverConstructor | undefined {\n  let constructor: MutationObserverConstructor | undefined\n  const browserWindow: BrowserWindow = window\n\n  // Angular uses Zone.js to provide a context persisting across async tasks.  Zone.js replaces the\n  // global MutationObserver constructor with a patched version to support the context propagation.\n  // There is an ongoing issue[1][2] with this setup when using a MutationObserver within a Angular\n  // component: on some occasions, the callback is being called in an infinite loop, causing the\n  // page to freeze (even if the callback is completely empty).\n  //\n  // To work around this issue, we try to get the original MutationObserver constructor stored by\n  // Zone.js.\n  //\n  // [1] https://github.com/angular/angular/issues/26948\n  // [2] https://github.com/angular/angular/issues/31712\n  if (browserWindow.Zone) {\n    // Zone.js 0.8.6+ is storing original class constructors into the browser 'window' object[3].\n    //\n    // [3] https://github.com/angular/angular/blob/6375fa79875c0fe7b815efc45940a6e6f5c9c9eb/packages/zone.js/lib/common/utils.ts#L288\n    constructor = getZoneJsOriginalValue(browserWindow, 'MutationObserver')\n\n    if (browserWindow.MutationObserver && constructor === browserWindow.MutationObserver) {\n      // Anterior Zone.js versions (used in Angular 2) does not expose the original MutationObserver\n      // in the 'window' object. Luckily, the patched MutationObserver class is storing an original\n      // instance in its properties[4]. Let's get the original MutationObserver constructor from\n      // there.\n      //\n      // [4] https://github.com/angular/zone.js/blob/v0.8.5/lib/common/utils.ts#L412\n\n      const patchedInstance = new browserWindow.MutationObserver(noop) as {\n        originalInstance?: { constructor: MutationObserverConstructor }\n      }\n\n      const originalInstance = getZoneJsOriginalValue(patchedInstance, 'originalInstance')\n      constructor = originalInstance && originalInstance.constructor\n    }\n  }\n\n  if (!constructor) {\n    constructor = browserWindow.MutationObserver\n  }\n\n  return constructor\n}\n","import { DOM_EVENT, addEventListener } from './addEventListener'\n\nexport function runOnReadyState(expectedReadyState: 'complete' | 'interactive', callback: () => void) {\n  if (document.readyState === expectedReadyState || document.readyState === 'complete') {\n    callback()\n  } else {\n    const eventName = expectedReadyState === 'complete' ? DOM_EVENT.LOAD : DOM_EVENT.DOM_CONTENT_LOADED\n    addEventListener(window, eventName, callback, { once: true })\n  }\n}\n","import type { RelativeTime, ServerDuration } from '@datadog/browser-core'\nimport {\n  assign,\n  addTelemetryDebug,\n  elapsed,\n  getPathName,\n  includes,\n  isValidUrl,\n  ResourceType,\n  toServerDuration,\n} from '@datadog/browser-core'\n\nimport type { RumPerformanceResourceTiming } from '../../../browser/performanceCollection'\n\nimport type { PerformanceResourceDetailsElement } from '../../../rawRumEvent.types'\nimport type { RumConfiguration } from '../../configuration'\n\nexport interface PerformanceResourceDetails {\n  redirect?: PerformanceResourceDetailsElement\n  dns?: PerformanceResourceDetailsElement\n  connect?: PerformanceResourceDetailsElement\n  ssl?: PerformanceResourceDetailsElement\n  first_byte: PerformanceResourceDetailsElement\n  download: PerformanceResourceDetailsElement\n}\n\nexport const FAKE_INITIAL_DOCUMENT = 'initial_document'\n\nconst RESOURCE_TYPES: Array<[ResourceType, (initiatorType: string, path: string) => boolean]> = [\n  [ResourceType.DOCUMENT, (initiatorType: string) => FAKE_INITIAL_DOCUMENT === initiatorType],\n  [ResourceType.XHR, (initiatorType: string) => 'xmlhttprequest' === initiatorType],\n  [ResourceType.FETCH, (initiatorType: string) => 'fetch' === initiatorType],\n  [ResourceType.BEACON, (initiatorType: string) => 'beacon' === initiatorType],\n  [ResourceType.CSS, (_: string, path: string) => /\\.css$/i.test(path)],\n  [ResourceType.JS, (_: string, path: string) => /\\.js$/i.test(path)],\n  [\n    ResourceType.IMAGE,\n    (initiatorType: string, path: string) =>\n      includes(['image', 'img', 'icon'], initiatorType) || /\\.(gif|jpg|jpeg|tiff|png|svg|ico)$/i.exec(path) !== null,\n  ],\n  [ResourceType.FONT, (_: string, path: string) => /\\.(woff|eot|woff2|ttf)$/i.exec(path) !== null],\n  [\n    ResourceType.MEDIA,\n    (initiatorType: string, path: string) =>\n      includes(['audio', 'video'], initiatorType) || /\\.(mp3|mp4)$/i.exec(path) !== null,\n  ],\n]\n\nexport function computeResourceKind(timing: RumPerformanceResourceTiming) {\n  const url = timing.name\n  if (!isValidUrl(url)) {\n    addTelemetryDebug(`Failed to construct URL for \"${timing.name}\"`)\n    return ResourceType.OTHER\n  }\n  const path = getPathName(url)\n  for (const [type, isType] of RESOURCE_TYPES) {\n    if (isType(timing.initiatorType, path)) {\n      return type\n    }\n  }\n  return ResourceType.OTHER\n}\n\nfunction areInOrder(...numbers: number[]) {\n  for (let i = 1; i < numbers.length; i += 1) {\n    if (numbers[i - 1] > numbers[i]) {\n      return false\n    }\n  }\n  return true\n}\n\nexport function isRequestKind(timing: RumPerformanceResourceTiming) {\n  return timing.initiatorType === 'xmlhttprequest' || timing.initiatorType === 'fetch'\n}\n\nexport function computePerformanceResourceDuration(entry: RumPerformanceResourceTiming): ServerDuration {\n  const { duration, startTime, responseEnd } = entry\n\n  // Safari duration is always 0 on timings blocked by cross origin policies.\n  if (duration === 0 && startTime < responseEnd) {\n    return toServerDuration(elapsed(startTime, responseEnd))\n  }\n\n  return toServerDuration(duration)\n}\n\nexport function computePerformanceResourceDetails(\n  entry: RumPerformanceResourceTiming\n): PerformanceResourceDetails | undefined {\n  const validEntry = toValidEntry(entry)\n\n  if (!validEntry) {\n    return undefined\n  }\n  const {\n    startTime,\n    fetchStart,\n    redirectStart,\n    redirectEnd,\n    domainLookupStart,\n    domainLookupEnd,\n    connectStart,\n    secureConnectionStart,\n    connectEnd,\n    requestStart,\n    responseStart,\n    responseEnd,\n  } = validEntry\n\n  const details: PerformanceResourceDetails = {\n    download: formatTiming(startTime, responseStart, responseEnd),\n    first_byte: formatTiming(startTime, requestStart, responseStart),\n  }\n\n  // Make sure a connection occurred\n  if (connectEnd !== fetchStart) {\n    details.connect = formatTiming(startTime, connectStart, connectEnd)\n\n    // Make sure a secure connection occurred\n    if (areInOrder(connectStart, secureConnectionStart, connectEnd)) {\n      details.ssl = formatTiming(startTime, secureConnectionStart, connectEnd)\n    }\n  }\n\n  // Make sure a domain lookup occurred\n  if (domainLookupEnd !== fetchStart) {\n    details.dns = formatTiming(startTime, domainLookupStart, domainLookupEnd)\n  }\n\n  if (hasRedirection(entry)) {\n    details.redirect = formatTiming(startTime, redirectStart, redirectEnd)\n  }\n\n  return details\n}\n\nexport function toValidEntry(entry: RumPerformanceResourceTiming) {\n  // Ensure timings are in the right order. On top of filtering out potential invalid\n  // RumPerformanceResourceTiming, it will ignore entries from requests where timings cannot be\n  // collected, for example cross origin requests without a \"Timing-Allow-Origin\" header allowing\n  // it.\n  if (\n    !areInOrder(\n      entry.startTime,\n      entry.fetchStart,\n      entry.domainLookupStart,\n      entry.domainLookupEnd,\n      entry.connectStart,\n      entry.connectEnd,\n      entry.requestStart,\n      entry.responseStart,\n      entry.responseEnd\n    )\n  ) {\n    return undefined\n  }\n\n  if (!hasRedirection(entry)) {\n    return entry\n  }\n\n  let { redirectStart, redirectEnd } = entry\n  // Firefox doesn't provide redirect timings on cross origin requests.\n  // Provide a default for those.\n  if (redirectStart < entry.startTime) {\n    redirectStart = entry.startTime\n  }\n  if (redirectEnd < entry.startTime) {\n    redirectEnd = entry.fetchStart\n  }\n\n  // Make sure redirect timings are in order\n  if (!areInOrder(entry.startTime, redirectStart, redirectEnd, entry.fetchStart)) {\n    return undefined\n  }\n\n  return assign({}, entry, {\n    redirectEnd,\n    redirectStart,\n  })\n}\n\nfunction hasRedirection(entry: RumPerformanceResourceTiming) {\n  // The only time fetchStart is different than startTime is if a redirection occurred.\n  return entry.fetchStart !== entry.startTime\n}\n\nfunction formatTiming(origin: RelativeTime, start: RelativeTime, end: RelativeTime) {\n  return {\n    duration: toServerDuration(elapsed(start, end)),\n    start: toServerDuration(elapsed(origin, start)),\n  }\n}\n\nexport function computeSize(entry: RumPerformanceResourceTiming) {\n  // Make sure a request actually occurred\n  if (entry.startTime < entry.responseStart) {\n    return entry.decodedBodySize\n  }\n  return undefined\n}\n\nexport function isAllowedRequestUrl(configuration: RumConfiguration, url: string) {\n  return url && !configuration.isIntakeUrl(url)\n}\n","export function isTextNode(node: Node): node is Text {\n  return node.nodeType === Node.TEXT_NODE\n}\n\nexport function isCommentNode(node: Node): node is Comment {\n  return node.nodeType === Node.COMMENT_NODE\n}\n\nexport function isElementNode(node: Node): node is Element {\n  return node.nodeType === Node.ELEMENT_NODE\n}\n\nexport function isNodeShadowHost(node: Node): node is Element & { shadowRoot: ShadowRoot } {\n  return isElementNode(node) && Boolean(node.shadowRoot)\n}\n\nexport function isNodeShadowRoot(node: Node): node is ShadowRoot {\n  const shadowRoot = node as ShadowRoot\n  return !!shadowRoot.host && shadowRoot.nodeType === Node.DOCUMENT_FRAGMENT_NODE && isElementNode(shadowRoot.host)\n}\n\nexport function getChildNodes(node: Node) {\n  return isNodeShadowHost(node) ? node.shadowRoot.childNodes : node.childNodes\n}\n\n/**\n * Return `host` in case if the current node is a shadow root otherwise will return the `parentNode`\n */\nexport function getParentNode(node: Node): Node | null {\n  return isNodeShadowRoot(node) ? node.host : node.parentNode\n}\n","import type { TimeStamp } from '@datadog/browser-core'\nimport { dateNow, findCommaSeparatedValue, ONE_MINUTE } from '@datadog/browser-core'\nimport { isCommentNode, isTextNode } from '../../browser/htmlDomUtils'\n\ninterface DocumentTraceData {\n  traceId: string\n  traceTime: TimeStamp\n}\n\nexport const INITIAL_DOCUMENT_OUTDATED_TRACE_ID_THRESHOLD = 2 * ONE_MINUTE\n\nexport function getDocumentTraceId(document: Document): string | undefined {\n  const data = getDocumentTraceDataFromMeta(document) || getDocumentTraceDataFromComment(document)\n\n  if (!data || data.traceTime <= dateNow() - INITIAL_DOCUMENT_OUTDATED_TRACE_ID_THRESHOLD) {\n    return undefined\n  }\n\n  return data.traceId\n}\n\nexport function getDocumentTraceDataFromMeta(document: Document): DocumentTraceData | undefined {\n  const traceIdMeta = document.querySelector<HTMLMetaElement>('meta[name=dd-trace-id]')\n  const traceTimeMeta = document.querySelector<HTMLMetaElement>('meta[name=dd-trace-time]')\n  return createDocumentTraceData(traceIdMeta && traceIdMeta.content, traceTimeMeta && traceTimeMeta.content)\n}\n\nexport function getDocumentTraceDataFromComment(document: Document): DocumentTraceData | undefined {\n  const comment = findTraceComment(document)\n  if (!comment) {\n    return undefined\n  }\n  return createDocumentTraceData(\n    findCommaSeparatedValue(comment, 'trace-id'),\n    findCommaSeparatedValue(comment, 'trace-time')\n  )\n}\n\nexport function createDocumentTraceData(\n  traceId: string | undefined | null,\n  rawTraceTime: string | undefined | null\n): DocumentTraceData | undefined {\n  const traceTime = rawTraceTime && (Number(rawTraceTime) as TimeStamp)\n  if (!traceId || !traceTime) {\n    return undefined\n  }\n\n  return {\n    traceId,\n    traceTime,\n  }\n}\n\nexport function findTraceComment(document: Document): string | undefined {\n  // 1. Try to find the comment as a direct child of the document\n  // Note: TSLint advises to use a 'for of', but TS doesn't allow to use 'for of' if the iterated\n  // value is not an array or string (here, a NodeList).\n  for (let i = 0; i < document.childNodes.length; i += 1) {\n    const comment = getTraceCommentFromNode(document.childNodes[i])\n    if (comment) {\n      return comment\n    }\n  }\n\n  // 2. If the comment is placed after the </html> tag, but have some space or new lines before or\n  // after, the DOM parser will lift it (and the surrounding text) at the end of the <body> tag.\n  // Try to look for the comment at the end of the <body> by by iterating over its child nodes in\n  // reverse order, stopping if we come across a non-text node.\n  if (document.body) {\n    for (let i = document.body.childNodes.length - 1; i >= 0; i -= 1) {\n      const node = document.body.childNodes[i]\n      const comment = getTraceCommentFromNode(node)\n      if (comment) {\n        return comment\n      }\n      if (!isTextNode(node)) {\n        break\n      }\n    }\n  }\n}\n\nfunction getTraceCommentFromNode(node: Node | null) {\n  if (node && isCommentNode(node)) {\n    const match = /^\\s*DATADOG;(.*?)\\s*$/.exec(node.data)\n    if (match) {\n      return match[1]\n    }\n  }\n}\n","import type { Duration, RelativeTime, TimeStamp } from '@datadog/browser-core'\nimport {\n  dateNow,\n  assign,\n  addEventListeners,\n  DOM_EVENT,\n  getRelativeTime,\n  isNumber,\n  monitor,\n  setTimeout,\n  relativeNow,\n  runOnReadyState,\n  addEventListener,\n} from '@datadog/browser-core'\n\nimport type { RumConfiguration } from '../domain/configuration'\nimport type { LifeCycle } from '../domain/lifeCycle'\nimport { LifeCycleEventType } from '../domain/lifeCycle'\nimport { FAKE_INITIAL_DOCUMENT, isAllowedRequestUrl } from '../domain/rumEventsCollection/resource/resourceUtils'\n\nimport { getDocumentTraceId } from '../domain/tracing/getDocumentTraceId'\nimport type { PerformanceEntryRepresentation } from '../domainContext.types'\n\nexport interface RumPerformanceResourceTiming {\n  entryType: 'resource'\n  initiatorType: string\n  name: string\n  startTime: RelativeTime\n  duration: Duration\n  fetchStart: RelativeTime\n  domainLookupStart: RelativeTime\n  domainLookupEnd: RelativeTime\n  connectStart: RelativeTime\n  secureConnectionStart: RelativeTime\n  connectEnd: RelativeTime\n  requestStart: RelativeTime\n  responseStart: RelativeTime\n  responseEnd: RelativeTime\n  redirectStart: RelativeTime\n  redirectEnd: RelativeTime\n  decodedBodySize: number\n  traceId?: string\n}\n\nexport interface RumPerformanceLongTaskTiming {\n  entryType: 'longtask'\n  startTime: RelativeTime\n  duration: Duration\n  toJSON(): PerformanceEntryRepresentation\n}\n\nexport interface RumPerformancePaintTiming {\n  entryType: 'paint'\n  name: 'first-paint' | 'first-contentful-paint'\n  startTime: RelativeTime\n}\n\nexport interface RumPerformanceNavigationTiming {\n  entryType: 'navigation'\n  domComplete: RelativeTime\n  domContentLoadedEventEnd: RelativeTime\n  domInteractive: RelativeTime\n  loadEventEnd: RelativeTime\n  responseStart: RelativeTime\n}\n\nexport interface RumLargestContentfulPaintTiming {\n  entryType: 'largest-contentful-paint'\n  startTime: RelativeTime\n  size: number\n  element?: Element\n}\n\nexport interface RumFirstInputTiming {\n  entryType: 'first-input'\n  startTime: RelativeTime\n  processingStart: RelativeTime\n  target?: Node\n}\n\nexport interface RumLayoutShiftTiming {\n  entryType: 'layout-shift'\n  startTime: RelativeTime\n  value: number\n  hadRecentInput: boolean\n  sources?: Array<{\n    node?: Node\n  }>\n}\n\nexport type RumPerformanceEntry =\n  | RumPerformanceResourceTiming\n  | RumPerformanceLongTaskTiming\n  | RumPerformancePaintTiming\n  | RumPerformanceNavigationTiming\n  | RumLargestContentfulPaintTiming\n  | RumFirstInputTiming\n  | RumLayoutShiftTiming\n\nfunction supportPerformanceObject() {\n  return window.performance !== undefined && 'getEntries' in performance\n}\n\nexport function supportPerformanceTimingEvent(entryType: string) {\n  return (\n    window.PerformanceObserver &&\n    PerformanceObserver.supportedEntryTypes !== undefined &&\n    PerformanceObserver.supportedEntryTypes.includes(entryType)\n  )\n}\n\nexport function startPerformanceCollection(lifeCycle: LifeCycle, configuration: RumConfiguration) {\n  retrieveInitialDocumentResourceTiming((timing) => {\n    handleRumPerformanceEntries(lifeCycle, configuration, [timing])\n  })\n\n  if (supportPerformanceObject()) {\n    const performanceEntries = performance.getEntries()\n    // Because the performance entry list can be quite large\n    // delay the computation to prevent the SDK from blocking the main thread on init\n    setTimeout(() => handleRumPerformanceEntries(lifeCycle, configuration, performanceEntries))\n  }\n\n  if (window.PerformanceObserver) {\n    const handlePerformanceEntryList = monitor((entries: PerformanceObserverEntryList) =>\n      handleRumPerformanceEntries(lifeCycle, configuration, entries.getEntries())\n    )\n    const mainEntries = ['resource', 'navigation', 'longtask', 'paint']\n    const experimentalEntries = ['largest-contentful-paint', 'first-input', 'layout-shift']\n\n    try {\n      // Experimental entries are not retrieved by performance.getEntries()\n      // use a single PerformanceObserver with buffered flag by type\n      // to get values that could happen before SDK init\n      experimentalEntries.forEach((type) => {\n        const observer = new PerformanceObserver(handlePerformanceEntryList)\n        observer.observe({ type, buffered: true })\n      })\n    } catch (e) {\n      // Some old browser versions (ex: chrome 67) don't support the PerformanceObserver type and buffered options\n      // In these cases, fallback to PerformanceObserver with entryTypes\n      mainEntries.push(...experimentalEntries)\n    }\n\n    const mainObserver = new PerformanceObserver(handlePerformanceEntryList)\n    mainObserver.observe({ entryTypes: mainEntries })\n\n    if (supportPerformanceObject() && 'addEventListener' in performance) {\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=1559377\n      addEventListener(performance, 'resourcetimingbufferfull', () => {\n        performance.clearResourceTimings()\n      })\n    }\n  }\n  if (!supportPerformanceTimingEvent('navigation')) {\n    retrieveNavigationTiming((timing) => {\n      handleRumPerformanceEntries(lifeCycle, configuration, [timing])\n    })\n  }\n  if (!supportPerformanceTimingEvent('first-input')) {\n    retrieveFirstInputTiming((timing) => {\n      handleRumPerformanceEntries(lifeCycle, configuration, [timing])\n    })\n  }\n}\n\nexport function retrieveInitialDocumentResourceTiming(callback: (timing: RumPerformanceResourceTiming) => void) {\n  runOnReadyState('interactive', () => {\n    let timing: RumPerformanceResourceTiming\n\n    const forcedAttributes = {\n      entryType: 'resource' as const,\n      initiatorType: FAKE_INITIAL_DOCUMENT,\n      traceId: getDocumentTraceId(document),\n    }\n    if (supportPerformanceTimingEvent('navigation') && performance.getEntriesByType('navigation').length > 0) {\n      const navigationEntry = performance.getEntriesByType('navigation')[0]\n      timing = assign(navigationEntry.toJSON(), forcedAttributes)\n    } else {\n      const relativePerformanceTiming = computeRelativePerformanceTiming()\n      timing = assign(\n        relativePerformanceTiming,\n        {\n          decodedBodySize: 0,\n          duration: relativePerformanceTiming.responseEnd,\n          name: window.location.href,\n          startTime: 0 as RelativeTime,\n        },\n        forcedAttributes\n      )\n    }\n    callback(timing)\n  })\n}\n\nfunction retrieveNavigationTiming(callback: (timing: RumPerformanceNavigationTiming) => void) {\n  function sendFakeTiming() {\n    callback(\n      assign(computeRelativePerformanceTiming(), {\n        entryType: 'navigation' as const,\n      })\n    )\n  }\n\n  runOnReadyState('complete', () => {\n    // Send it a bit after the actual load event, so the \"loadEventEnd\" timing is accurate\n    setTimeout(sendFakeTiming)\n  })\n}\n\n/**\n * first-input timing entry polyfill based on\n * https://github.com/GoogleChrome/web-vitals/blob/master/src/lib/polyfills/firstInputPolyfill.ts\n */\nfunction retrieveFirstInputTiming(callback: (timing: RumFirstInputTiming) => void) {\n  const startTimeStamp = dateNow()\n  let timingSent = false\n\n  const { stop: removeEventListeners } = addEventListeners(\n    window,\n    [DOM_EVENT.CLICK, DOM_EVENT.MOUSE_DOWN, DOM_EVENT.KEY_DOWN, DOM_EVENT.TOUCH_START, DOM_EVENT.POINTER_DOWN],\n    (evt) => {\n      // Only count cancelable events, which should trigger behavior important to the user.\n      if (!evt.cancelable) {\n        return\n      }\n\n      // This timing will be used to compute the \"first Input delay\", which is the delta between\n      // when the system received the event (e.g. evt.timeStamp) and when it could run the callback\n      // (e.g. performance.now()).\n      const timing: RumFirstInputTiming = {\n        entryType: 'first-input',\n        processingStart: relativeNow(),\n        startTime: evt.timeStamp as RelativeTime,\n      }\n\n      if (evt.type === DOM_EVENT.POINTER_DOWN) {\n        sendTimingIfPointerIsNotCancelled(timing)\n      } else {\n        sendTiming(timing)\n      }\n    },\n    { passive: true, capture: true }\n  )\n\n  /**\n   * Pointer events are a special case, because they can trigger main or compositor thread behavior.\n   * We differentiate these cases based on whether or not we see a pointercancel event, which are\n   * fired when we scroll. If we're scrolling we don't need to report input delay since FID excludes\n   * scrolling and pinch/zooming.\n   */\n  function sendTimingIfPointerIsNotCancelled(timing: RumFirstInputTiming) {\n    addEventListeners(\n      window,\n      [DOM_EVENT.POINTER_UP, DOM_EVENT.POINTER_CANCEL],\n      (event) => {\n        if (event.type === DOM_EVENT.POINTER_UP) {\n          sendTiming(timing)\n        }\n      },\n      { once: true }\n    )\n  }\n\n  function sendTiming(timing: RumFirstInputTiming) {\n    if (!timingSent) {\n      timingSent = true\n      removeEventListeners()\n      // In some cases the recorded delay is clearly wrong, e.g. it's negative or it's larger than\n      // the time between now and when the page was loaded.\n      // - https://github.com/GoogleChromeLabs/first-input-delay/issues/4\n      // - https://github.com/GoogleChromeLabs/first-input-delay/issues/6\n      // - https://github.com/GoogleChromeLabs/first-input-delay/issues/7\n      const delay = timing.processingStart - timing.startTime\n      if (delay >= 0 && delay < dateNow() - startTimeStamp) {\n        callback(timing)\n      }\n    }\n  }\n}\n\nexport type RelativePerformanceTiming = {\n  -readonly [key in keyof Omit<PerformanceTiming, 'toJSON'>]: RelativeTime\n}\n\nfunction computeRelativePerformanceTiming() {\n  const result: Partial<RelativePerformanceTiming> = {}\n  const timing = performance.timing\n  for (const key in timing) {\n    if (isNumber(timing[key as keyof PerformanceTiming])) {\n      const numberKey = key as keyof RelativePerformanceTiming\n      const timingElement = timing[numberKey] as TimeStamp\n      result[numberKey] = timingElement === 0 ? (0 as RelativeTime) : getRelativeTime(timingElement)\n    }\n  }\n  return result as RelativePerformanceTiming\n}\n\nfunction handleRumPerformanceEntries(\n  lifeCycle: LifeCycle,\n  configuration: RumConfiguration,\n  entries: Array<PerformanceEntry | RumPerformanceEntry>\n) {\n  const rumPerformanceEntries = entries.filter(\n    (entry) =>\n      entry.entryType === 'resource' ||\n      entry.entryType === 'navigation' ||\n      entry.entryType === 'paint' ||\n      entry.entryType === 'longtask' ||\n      entry.entryType === 'largest-contentful-paint' ||\n      entry.entryType === 'first-input' ||\n      entry.entryType === 'layout-shift'\n  ) as RumPerformanceEntry[]\n\n  const rumAllowedPerformanceEntries = rumPerformanceEntries.filter(\n    (entry) => !isIncompleteNavigation(entry) && !isForbiddenResource(configuration, entry)\n  )\n\n  if (rumAllowedPerformanceEntries.length) {\n    lifeCycle.notify(LifeCycleEventType.PERFORMANCE_ENTRIES_COLLECTED, rumAllowedPerformanceEntries)\n  }\n}\n\nfunction isIncompleteNavigation(entry: RumPerformanceEntry) {\n  return entry.entryType === 'navigation' && entry.loadEventEnd <= 0\n}\n\nfunction isForbiddenResource(configuration: RumConfiguration, entry: RumPerformanceEntry) {\n  return entry.entryType === 'resource' && !isAllowedRequestUrl(configuration, entry.name)\n}\n","import type { ClocksState } from '../../tools/utils/timeUtils'\n\nexport interface ErrorWithCause extends Error {\n  cause?: Error\n}\n\nexport type RawErrorCause = {\n  message: string\n  source: string\n  type?: string\n  stack?: string\n}\n\nexport interface RawError {\n  startClocks: ClocksState\n  message: string\n  type?: string\n  stack?: string\n  source: ErrorSource\n  originalError?: unknown\n  handling?: ErrorHandling\n  handlingStack?: string\n  causes?: RawErrorCause[]\n  fingerprint?: string\n}\n\nexport const ErrorSource = {\n  AGENT: 'agent',\n  CONSOLE: 'console',\n  CUSTOM: 'custom',\n  LOGGER: 'logger',\n  NETWORK: 'network',\n  SOURCE: 'source',\n  REPORT: 'report',\n} as const\n\nexport const enum NonErrorPrefix {\n  UNCAUGHT = 'Uncaught',\n  PROVIDED = 'Provided',\n}\n\nexport const enum ErrorHandling {\n  HANDLED = 'handled',\n  UNHANDLED = 'unhandled',\n}\n\nexport type ErrorSource = (typeof ErrorSource)[keyof typeof ErrorSource]\n","import { Observable, throttle, addEventListener, DOM_EVENT } from '@datadog/browser-core'\n\nexport interface ViewportDimension {\n  height: number\n  width: number\n}\n\nlet viewportObservable: Observable<ViewportDimension> | undefined\n\nexport function initViewportObservable() {\n  if (!viewportObservable) {\n    viewportObservable = createViewportObservable()\n  }\n  return viewportObservable\n}\n\nexport function createViewportObservable() {\n  const observable = new Observable<ViewportDimension>(() => {\n    const { throttled: updateDimension } = throttle(() => {\n      observable.notify(getViewportDimension())\n    }, 200)\n\n    return addEventListener(window, DOM_EVENT.RESIZE, updateDimension, { capture: true, passive: true }).stop\n  })\n\n  return observable\n}\n\n// excludes the width and height of any rendered classic scrollbar that is fixed to the visual viewport\nexport function getViewportDimension(): ViewportDimension {\n  const visual = window.visualViewport\n  if (visual) {\n    return {\n      width: Number(visual.width * visual.scale),\n      height: Number(visual.height * visual.scale),\n    }\n  }\n\n  return {\n    width: Number(window.innerWidth || 0),\n    height: Number(window.innerHeight || 0),\n  }\n}\n","import { getViewportDimension, initViewportObservable } from '../../browser/viewportObservable'\n\nlet viewport: { width: number; height: number } | undefined\nlet stopListeners: (() => void) | undefined\n\nexport function getDisplayContext() {\n  if (!viewport) {\n    viewport = getViewportDimension()\n    stopListeners = initViewportObservable().subscribe((viewportDimension) => {\n      viewport = viewportDimension\n    }).unsubscribe\n  }\n\n  return {\n    viewport,\n  }\n}\n\nexport function resetDisplayContext() {\n  if (stopListeners) {\n    stopListeners()\n  }\n  viewport = undefined\n}\n","import { setTimeout } from '../../tools/timer'\nimport { clocksNow, ONE_MINUTE } from '../../tools/utils/timeUtils'\nimport type { RawError } from '../error/error.types'\nimport { ErrorSource } from '../error/error.types'\n\nexport type EventRateLimiter = ReturnType<typeof createEventRateLimiter>\n\nexport function createEventRateLimiter(\n  eventType: string,\n  limit: number,\n  onLimitReached: (limitError: RawError) => void\n) {\n  let eventCount = 0\n  let allowNextEvent = false\n\n  return {\n    isLimitReached() {\n      if (eventCount === 0) {\n        setTimeout(() => {\n          eventCount = 0\n        }, ONE_MINUTE)\n      }\n\n      eventCount += 1\n      if (eventCount <= limit || allowNextEvent) {\n        allowNextEvent = false\n        return false\n      }\n\n      if (eventCount === limit + 1) {\n        allowNextEvent = true\n        try {\n          onLimitReached({\n            message: `Reached max number of ${eventType}s by minute: ${limit}`,\n            source: ErrorSource.AGENT,\n            startClocks: clocksNow(),\n          })\n        } finally {\n          allowNextEvent = false\n        }\n      }\n\n      return true\n    },\n  }\n}\n","import { getSyntheticsResultId, getSyntheticsTestId, willSyntheticsInjectRum } from '@datadog/browser-core'\n\nexport function getSyntheticsContext() {\n  const testId = getSyntheticsTestId()\n  const resultId = getSyntheticsResultId()\n\n  if (testId && resultId) {\n    return {\n      test_id: testId,\n      result_id: resultId,\n      injected: willSyntheticsInjectRum(),\n    }\n  }\n}\n","import { sanitize, deepClone, getType, objectEntries } from '@datadog/browser-core'\nimport type { Context } from '@datadog/browser-core'\n\nexport type ModifiableFieldPaths = Record<string, 'string' | 'object'>\n\n/**\n * Current limitation:\n * - field path do not support array, 'a.b.c' only\n */\nexport function limitModification<T extends Context, Result>(\n  object: T,\n  modifiableFieldPaths: ModifiableFieldPaths,\n  modifier: (object: T) => Result\n): Result | undefined {\n  const clone = deepClone(object)\n  const result = modifier(clone)\n  objectEntries(modifiableFieldPaths).forEach(([fieldPath, fieldType]) => {\n    const newValue = get(clone, fieldPath)\n    const newType = getType(newValue)\n    if (newType === fieldType) {\n      set(object, fieldPath, sanitize(newValue))\n    } else if (fieldType === 'object' && (newType === 'undefined' || newType === 'null')) {\n      set(object, fieldPath, {})\n    }\n  })\n  return result\n}\n\nfunction get(object: unknown, path: string) {\n  let current = object\n  for (const field of path.split('.')) {\n    if (!isValidObjectContaining(current, field)) {\n      return\n    }\n    current = current[field]\n  }\n  return current\n}\n\nfunction set(object: unknown, path: string, value: unknown) {\n  let current = object\n  const fields = path.split('.')\n  for (let i = 0; i < fields.length; i += 1) {\n    const field = fields[i]\n    if (!isValidObject(current)) {\n      return\n    }\n    if (i !== fields.length - 1) {\n      current = current[field]\n    } else {\n      current[field] = value\n    }\n  }\n}\n\nfunction isValidObject(object: unknown): object is Record<string, unknown> {\n  return getType(object) === 'object'\n}\n\nfunction isValidObjectContaining(object: unknown, field: string): object is Record<string, unknown> {\n  return isValidObject(object) && Object.prototype.hasOwnProperty.call(object, field)\n}\n","import type { Context, RawError, EventRateLimiter, User } from '@datadog/browser-core'\nimport {\n  combine,\n  isEmptyObject,\n  timeStampNow,\n  currentDrift,\n  display,\n  createEventRateLimiter,\n  canUseEventBridge,\n  assign,\n  round,\n} from '@datadog/browser-core'\nimport type { RumEventDomainContext } from '../domainContext.types'\nimport type {\n  RawRumErrorEvent,\n  RawRumEvent,\n  RawRumLongTaskEvent,\n  RawRumResourceEvent,\n  RumContext,\n} from '../rawRumEvent.types'\nimport { RumEventType } from '../rawRumEvent.types'\nimport type { RumEvent } from '../rumEvent.types'\nimport { getSyntheticsContext } from './contexts/syntheticsContext'\nimport { getCiTestContext } from './contexts/ciTestContext'\nimport type { LifeCycle } from './lifeCycle'\nimport { LifeCycleEventType } from './lifeCycle'\nimport type { ViewContexts } from './contexts/viewContexts'\nimport type { RumSessionManager } from './rumSessionManager'\nimport type { UrlContexts } from './contexts/urlContexts'\nimport type { RumConfiguration } from './configuration'\nimport type { ActionContexts } from './rumEventsCollection/action/actionCollection'\nimport { getDisplayContext } from './contexts/displayContext'\nimport type { CommonContext } from './contexts/commonContext'\nimport type { ModifiableFieldPaths } from './limitModification'\nimport { limitModification } from './limitModification'\n\n// replaced at build time\ndeclare const __BUILD_ENV__SDK_VERSION__: string\n\nconst enum SessionType {\n  SYNTHETICS = 'synthetics',\n  USER = 'user',\n  CI_TEST = 'ci_test',\n}\n\nconst VIEW_MODIFIABLE_FIELD_PATHS: ModifiableFieldPaths = {\n  'view.url': 'string',\n  'view.referrer': 'string',\n}\n\nconst USER_CUSTOMIZABLE_FIELD_PATHS: ModifiableFieldPaths = {\n  context: 'object',\n}\n\nlet modifiableFieldPathsByEvent: { [key in RumEventType]: ModifiableFieldPaths }\n\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] }\n\nexport function startRumAssembly(\n  configuration: RumConfiguration,\n  lifeCycle: LifeCycle,\n  sessionManager: RumSessionManager,\n  viewContexts: ViewContexts,\n  urlContexts: UrlContexts,\n  actionContexts: ActionContexts,\n  buildCommonContext: () => CommonContext,\n  reportError: (error: RawError) => void\n) {\n  modifiableFieldPathsByEvent = {\n    [RumEventType.VIEW]: VIEW_MODIFIABLE_FIELD_PATHS,\n    [RumEventType.ERROR]: assign(\n      {\n        'error.message': 'string',\n        'error.stack': 'string',\n        'error.resource.url': 'string',\n        'error.fingerprint': 'string',\n      },\n      USER_CUSTOMIZABLE_FIELD_PATHS,\n      VIEW_MODIFIABLE_FIELD_PATHS\n    ),\n    [RumEventType.RESOURCE]: assign(\n      {\n        'resource.url': 'string',\n      },\n      USER_CUSTOMIZABLE_FIELD_PATHS,\n      VIEW_MODIFIABLE_FIELD_PATHS\n    ),\n    [RumEventType.ACTION]: assign(\n      {\n        'action.target.name': 'string',\n      },\n      USER_CUSTOMIZABLE_FIELD_PATHS,\n      VIEW_MODIFIABLE_FIELD_PATHS\n    ),\n    [RumEventType.LONG_TASK]: assign({}, USER_CUSTOMIZABLE_FIELD_PATHS, VIEW_MODIFIABLE_FIELD_PATHS),\n  }\n  const eventRateLimiters = {\n    [RumEventType.ERROR]: createEventRateLimiter(\n      RumEventType.ERROR,\n      configuration.eventRateLimiterThreshold,\n      reportError\n    ),\n    [RumEventType.ACTION]: createEventRateLimiter(\n      RumEventType.ACTION,\n      configuration.eventRateLimiterThreshold,\n      reportError\n    ),\n  }\n\n  const syntheticsContext = getSyntheticsContext()\n  const ciTestContext = getCiTestContext()\n\n  lifeCycle.subscribe(\n    LifeCycleEventType.RAW_RUM_EVENT_COLLECTED,\n    ({ startTime, rawRumEvent, domainContext, savedCommonContext, customerContext }) => {\n      const viewContext = viewContexts.findView(startTime)\n      const urlContext = urlContexts.findUrl(startTime)\n      const session = sessionManager.findTrackedSession(startTime)\n      if (session && viewContext && urlContext) {\n        const commonContext = savedCommonContext || buildCommonContext()\n        const actionId = actionContexts.findActionId(startTime)\n\n        const rumContext: RumContext = {\n          _dd: {\n            format_version: 2,\n            drift: currentDrift(),\n            session: {\n              plan: session.plan,\n            },\n            configuration: {\n              session_sample_rate: round(configuration.sessionSampleRate, 3),\n              session_replay_sample_rate: round(configuration.sessionReplaySampleRate, 3),\n            },\n            browser_sdk_version: canUseEventBridge() ? __BUILD_ENV__SDK_VERSION__ : undefined,\n          },\n          application: {\n            id: configuration.applicationId,\n          },\n          date: timeStampNow(),\n          service: viewContext.service || configuration.service,\n          version: viewContext.version || configuration.version,\n          source: 'browser',\n          session: {\n            id: session.id,\n            type: syntheticsContext ? SessionType.SYNTHETICS : ciTestContext ? SessionType.CI_TEST : SessionType.USER,\n          },\n          view: {\n            id: viewContext.id,\n            name: viewContext.name,\n            url: urlContext.url,\n            referrer: urlContext.referrer,\n          },\n          action: needToAssembleWithAction(rawRumEvent) && actionId ? { id: actionId } : undefined,\n          synthetics: syntheticsContext,\n          ci_test: ciTestContext,\n          display: getDisplayContext(),\n        }\n\n        const serverRumEvent = combine(rumContext as RumContext & Context, rawRumEvent) as RumEvent & Context\n        serverRumEvent.context = combine(commonContext.context, customerContext)\n\n        if (!('has_replay' in serverRumEvent.session)) {\n          ;(serverRumEvent.session as Mutable<RumEvent['session']>).has_replay = commonContext.hasReplay\n        }\n\n        if (!isEmptyObject(commonContext.user)) {\n          ;(serverRumEvent.usr as Mutable<RumEvent['usr']>) = commonContext.user as User & Context\n        }\n\n        if (shouldSend(serverRumEvent, configuration.beforeSend, domainContext, eventRateLimiters)) {\n          if (isEmptyObject(serverRumEvent.context)) {\n            delete serverRumEvent.context\n          }\n          lifeCycle.notify(LifeCycleEventType.RUM_EVENT_COLLECTED, serverRumEvent)\n        }\n      }\n    }\n  )\n}\n\nfunction shouldSend(\n  event: RumEvent & Context,\n  beforeSend: RumConfiguration['beforeSend'],\n  domainContext: RumEventDomainContext,\n  eventRateLimiters: { [key in RumEventType]?: EventRateLimiter }\n) {\n  if (beforeSend) {\n    const result = limitModification(event, modifiableFieldPathsByEvent[event.type], (event) =>\n      beforeSend(event, domainContext)\n    )\n    if (result === false && event.type !== RumEventType.VIEW) {\n      return false\n    }\n    if (result === false) {\n      display.warn(\"Can't dismiss view events using beforeSend!\")\n    }\n  }\n\n  const rateLimitReached = eventRateLimiters[event.type]?.isLimitReached()\n  return !rateLimitReached\n}\n\nfunction needToAssembleWithAction(\n  event: RawRumEvent\n): event is RawRumErrorEvent | RawRumResourceEvent | RawRumLongTaskEvent {\n  return [RumEventType.ERROR, RumEventType.RESOURCE, RumEventType.LONG_TASK].indexOf(event.type) !== -1\n}\n","export interface CiTestWindow extends Window {\n  Cypress?: {\n    env: (key: string) => string | undefined\n  }\n}\n\nexport function getCiTestContext() {\n  const testExecutionId = (window as CiTestWindow).Cypress?.env('traceId')\n\n  if (typeof testExecutionId === 'string') {\n    return {\n      test_execution_id: testExecutionId,\n    }\n  }\n}\n","import type { Subscription } from './observable'\n\n/**\n * Type helper to extract event types that have \"void\" data. This allows to call `notify` without a\n * second argument. Ex:\n *\n * ```\n * interface EventMap {\n *   foo: void\n * }\n * const LifeCycle = AbstractLifeCycle<EventMap>\n * new LifeCycle().notify('foo')\n * ```\n */\ntype EventTypesWithoutData<EventMap> = {\n  [K in keyof EventMap]: EventMap[K] extends void ? K : never\n}[keyof EventMap]\n\nexport class AbstractLifeCycle<EventMap> {\n  private callbacks: { [key in keyof EventMap]?: Array<(data: any) => void> } = {}\n\n  notify<EventType extends EventTypesWithoutData<EventMap>>(eventType: EventType): void\n  notify<EventType extends keyof EventMap>(eventType: EventType, data: EventMap[EventType]): void\n  notify(eventType: keyof EventMap, data?: unknown) {\n    const eventCallbacks = this.callbacks[eventType]\n    if (eventCallbacks) {\n      eventCallbacks.forEach((callback) => callback(data))\n    }\n  }\n\n  subscribe<EventType extends keyof EventMap>(\n    eventType: EventType,\n    callback: (data: EventMap[EventType]) => void\n  ): Subscription {\n    if (!this.callbacks[eventType]) {\n      this.callbacks[eventType] = []\n    }\n    this.callbacks[eventType]!.push(callback)\n    return {\n      unsubscribe: () => {\n        this.callbacks[eventType] = this.callbacks[eventType]!.filter((other) => callback !== other)\n      },\n    }\n  }\n}\n","import { instrumentMethodAndCallOriginal } from '../tools/instrumentMethod'\nimport { Observable } from '../tools/observable'\nimport type { Duration, RelativeTime, ClocksState } from '../tools/utils/timeUtils'\nimport { elapsed, relativeNow, clocksNow, timeStampNow } from '../tools/utils/timeUtils'\nimport { normalizeUrl } from '../tools/utils/urlPolyfill'\nimport { shallowClone } from '../tools/utils/objectUtils'\nimport { addEventListener } from './addEventListener'\n\nexport interface XhrOpenContext {\n  state: 'open'\n  method: string\n  url: string\n}\n\nexport interface XhrStartContext extends Omit<XhrOpenContext, 'state'> {\n  state: 'start'\n  startTime: RelativeTime // deprecated\n  startClocks: ClocksState\n  isAborted: boolean\n  xhr: XMLHttpRequest\n}\n\nexport interface XhrCompleteContext extends Omit<XhrStartContext, 'state'> {\n  state: 'complete'\n  duration: Duration\n  status: number\n}\n\nexport type XhrContext = XhrOpenContext | XhrStartContext | XhrCompleteContext\n\nlet xhrObservable: Observable<XhrContext> | undefined\nconst xhrContexts = new WeakMap<XMLHttpRequest, XhrContext>()\n\nexport function initXhrObservable() {\n  if (!xhrObservable) {\n    xhrObservable = createXhrObservable()\n  }\n  return xhrObservable\n}\n\nfunction createXhrObservable() {\n  const observable = new Observable<XhrContext>(() => {\n    const { stop: stopInstrumentingStart } = instrumentMethodAndCallOriginal(XMLHttpRequest.prototype, 'open', {\n      before: openXhr,\n    })\n\n    const { stop: stopInstrumentingSend } = instrumentMethodAndCallOriginal(XMLHttpRequest.prototype, 'send', {\n      before() {\n        sendXhr.call(this, observable)\n      },\n    })\n\n    const { stop: stopInstrumentingAbort } = instrumentMethodAndCallOriginal(XMLHttpRequest.prototype, 'abort', {\n      before: abortXhr,\n    })\n\n    return () => {\n      stopInstrumentingStart()\n      stopInstrumentingSend()\n      stopInstrumentingAbort()\n    }\n  })\n  return observable\n}\n\nfunction openXhr(this: XMLHttpRequest, method: string, url: string | URL | undefined | null) {\n  xhrContexts.set(this, {\n    state: 'open',\n    method,\n    url: normalizeUrl(String(url)),\n  })\n}\n\nfunction sendXhr(this: XMLHttpRequest, observable: Observable<XhrContext>) {\n  const context = xhrContexts.get(this)\n  if (!context) {\n    return\n  }\n\n  const startContext = context as XhrStartContext\n  startContext.state = 'start'\n  startContext.startTime = relativeNow()\n  startContext.startClocks = clocksNow()\n  startContext.isAborted = false\n  startContext.xhr = this\n\n  let hasBeenReported = false\n\n  const { stop: stopInstrumentingOnReadyStateChange } = instrumentMethodAndCallOriginal(this, 'onreadystatechange', {\n    before() {\n      if (this.readyState === XMLHttpRequest.DONE) {\n        // Try to report the XHR as soon as possible, because the XHR may be mutated by the\n        // application during a future event. For example, Angular is calling .abort() on\n        // completed requests during a onreadystatechange event, so the status becomes '0'\n        // before the request is collected.\n        onEnd()\n      }\n    },\n  })\n\n  const onEnd = () => {\n    unsubscribeLoadEndListener()\n    stopInstrumentingOnReadyStateChange()\n    if (hasBeenReported) {\n      return\n    }\n    hasBeenReported = true\n\n    const completeContext = context as XhrCompleteContext\n    completeContext.state = 'complete'\n    completeContext.duration = elapsed(startContext.startClocks.timeStamp, timeStampNow())\n    completeContext.status = this.status\n    observable.notify(shallowClone(completeContext))\n  }\n\n  const { stop: unsubscribeLoadEndListener } = addEventListener(this, 'loadend', onEnd)\n\n  observable.notify(startContext)\n}\n\nfunction abortXhr(this: XMLHttpRequest) {\n  const context = xhrContexts.get(this) as XhrStartContext | undefined\n  if (context) {\n    context.isAborted = true\n  }\n}\n","import type { Context, PageExitEvent, RawError, RelativeTime } from '@datadog/browser-core'\nimport { AbstractLifeCycle } from '@datadog/browser-core'\nimport type { RumPerformanceEntry } from '../browser/performanceCollection'\nimport type { RumEventDomainContext } from '../domainContext.types'\nimport type { RawRumEvent } from '../rawRumEvent.types'\nimport type { RumEvent } from '../rumEvent.types'\nimport type { CommonContext } from './contexts/commonContext'\nimport type { RequestCompleteEvent, RequestStartEvent } from './requestCollection'\nimport type { AutoAction } from './rumEventsCollection/action/actionCollection'\nimport type { ViewEvent, ViewCreatedEvent, ViewEndedEvent } from './rumEventsCollection/view/trackViews'\n\nexport const enum LifeCycleEventType {\n  PERFORMANCE_ENTRIES_COLLECTED,\n  AUTO_ACTION_COMPLETED,\n  VIEW_CREATED,\n  VIEW_UPDATED,\n  VIEW_ENDED,\n  REQUEST_STARTED,\n  REQUEST_COMPLETED,\n\n  // The SESSION_EXPIRED lifecycle event has been introduced to represent when a session has expired\n  // and trigger cleanup tasks related to this, prior to renewing the session. Its implementation is\n  // slightly naive: it is not triggered as soon as the session is expired, but rather just before\n  // notifying that the session is renewed. Thus, the session id is already set to the newly renewed\n  // session.\n  //\n  // This implementation is \"good enough\" for our use-cases. Improving this is not trivial,\n  // primarily because multiple instances of the SDK may be managing the same session cookie at\n  // the same time, for example when using Logs and RUM on the same page, or opening multiple tabs\n  // on the same domain.\n  SESSION_EXPIRED,\n\n  SESSION_RENEWED,\n  PAGE_EXITED,\n  RAW_RUM_EVENT_COLLECTED,\n  RUM_EVENT_COLLECTED,\n  RAW_ERROR_COLLECTED,\n}\n\n// This is a workaround for an issue occurring when the Browser SDK is included in a TypeScript\n// project configured with `isolatedModules: true`. Even if the const enum is declared in this\n// module, we cannot use it directly to define the EventMap interface keys (TS error: \"Cannot access\n// ambient const enums when the '--isolatedModules' flag is provided.\").\n//\n// Using a plain enum would fix the issue, but would also add 2KB to the minified bundle. By using\n// this workaround, we can keep using a const enum without impacting the bundle size (since it is a\n// \"declare\" statement, it will only be used during typecheck and completely ignored when building\n// JavaScript).\n//\n// See issues:\n// * https://github.com/DataDog/browser-sdk/issues/2208\n// * https://github.com/microsoft/TypeScript/issues/54152\ndeclare const LifeCycleEventTypeAsConst: {\n  PERFORMANCE_ENTRIES_COLLECTED: LifeCycleEventType.PERFORMANCE_ENTRIES_COLLECTED\n  AUTO_ACTION_COMPLETED: LifeCycleEventType.AUTO_ACTION_COMPLETED\n  VIEW_CREATED: LifeCycleEventType.VIEW_CREATED\n  VIEW_UPDATED: LifeCycleEventType.VIEW_UPDATED\n  VIEW_ENDED: LifeCycleEventType.VIEW_ENDED\n  REQUEST_STARTED: LifeCycleEventType.REQUEST_STARTED\n  REQUEST_COMPLETED: LifeCycleEventType.REQUEST_COMPLETED\n  SESSION_EXPIRED: LifeCycleEventType.SESSION_EXPIRED\n  SESSION_RENEWED: LifeCycleEventType.SESSION_RENEWED\n  PAGE_EXITED: LifeCycleEventType.PAGE_EXITED\n  RAW_RUM_EVENT_COLLECTED: LifeCycleEventType.RAW_RUM_EVENT_COLLECTED\n  RUM_EVENT_COLLECTED: LifeCycleEventType.RUM_EVENT_COLLECTED\n  RAW_ERROR_COLLECTED: LifeCycleEventType.RAW_ERROR_COLLECTED\n}\n\n// Note: this interface needs to be exported even if it is not used outside of this module, else TS\n// fails to build the rum-core package with error TS4058\nexport interface LifeCycleEventMap {\n  [LifeCycleEventTypeAsConst.PERFORMANCE_ENTRIES_COLLECTED]: RumPerformanceEntry[]\n  [LifeCycleEventTypeAsConst.AUTO_ACTION_COMPLETED]: AutoAction\n  [LifeCycleEventTypeAsConst.VIEW_CREATED]: ViewCreatedEvent\n  [LifeCycleEventTypeAsConst.VIEW_UPDATED]: ViewEvent\n  [LifeCycleEventTypeAsConst.VIEW_ENDED]: ViewEndedEvent\n  [LifeCycleEventTypeAsConst.REQUEST_STARTED]: RequestStartEvent\n  [LifeCycleEventTypeAsConst.REQUEST_COMPLETED]: RequestCompleteEvent\n  [LifeCycleEventTypeAsConst.SESSION_EXPIRED]: void\n  [LifeCycleEventTypeAsConst.SESSION_RENEWED]: void\n  [LifeCycleEventTypeAsConst.PAGE_EXITED]: PageExitEvent\n  [LifeCycleEventTypeAsConst.RAW_RUM_EVENT_COLLECTED]: RawRumEventCollectedData\n  [LifeCycleEventTypeAsConst.RUM_EVENT_COLLECTED]: RumEvent & Context\n  [LifeCycleEventTypeAsConst.RAW_ERROR_COLLECTED]: {\n    error: RawError\n    savedCommonContext?: CommonContext\n    customerContext?: Context\n  }\n}\n\nexport interface RawRumEventCollectedData<E extends RawRumEvent = RawRumEvent> {\n  startTime: RelativeTime\n  savedCommonContext?: CommonContext\n  customerContext?: Context\n  rawRumEvent: E\n  domainContext: RumEventDomainContext<E['type']>\n}\n\nexport const LifeCycle = AbstractLifeCycle<LifeCycleEventMap>\nexport type LifeCycle = AbstractLifeCycle<LifeCycleEventMap>\n","import { setInterval, clearInterval } from './timer'\nimport type { TimeoutId } from './timer'\nimport type { Duration, RelativeTime } from './utils/timeUtils'\nimport { addDuration, relativeNow, ONE_MINUTE } from './utils/timeUtils'\n\nconst END_OF_TIMES = Infinity as RelativeTime\n\nexport interface ValueHistoryEntry<T> {\n  startTime: RelativeTime\n  endTime: RelativeTime\n  value: T\n  remove(): void\n  close(endTime: RelativeTime): void\n}\n\nexport const CLEAR_OLD_VALUES_INTERVAL = ONE_MINUTE\n\n/**\n * Store and keep track of values spans. This whole class assumes that values are added in\n * chronological order (i.e. all entries have an increasing start time).\n */\nexport class ValueHistory<Value> {\n  private entries: Array<ValueHistoryEntry<Value>> = []\n  private clearOldValuesInterval: TimeoutId\n\n  constructor(\n    private expireDelay: number,\n    private maxEntries?: number\n  ) {\n    this.clearOldValuesInterval = setInterval(() => this.clearOldValues(), CLEAR_OLD_VALUES_INTERVAL)\n  }\n\n  /**\n   * Add a value to the history associated with a start time. Returns a reference to this newly\n   * added entry that can be removed or closed.\n   */\n  add(value: Value, startTime: RelativeTime): ValueHistoryEntry<Value> {\n    const entry: ValueHistoryEntry<Value> = {\n      value,\n      startTime,\n      endTime: END_OF_TIMES,\n      remove: () => {\n        const index = this.entries.indexOf(entry)\n        if (index >= 0) {\n          this.entries.splice(index, 1)\n        }\n      },\n      close: (endTime: RelativeTime) => {\n        entry.endTime = endTime\n      },\n    }\n\n    if (this.maxEntries && this.entries.length >= this.maxEntries) {\n      this.entries.pop()\n    }\n\n    this.entries.unshift(entry)\n\n    return entry\n  }\n\n  /**\n   * Return the latest value that was active during `startTime`, or the currently active value\n   * if no `startTime` is provided. This method assumes that entries are not overlapping.\n   */\n  find(startTime: RelativeTime = END_OF_TIMES): Value | undefined {\n    for (const entry of this.entries) {\n      if (entry.startTime <= startTime) {\n        if (startTime <= entry.endTime) {\n          return entry.value\n        }\n        break\n      }\n    }\n  }\n\n  /**\n   * Helper function to close the currently active value, if any. This method assumes that entries\n   * are not overlapping.\n   */\n  closeActive(endTime: RelativeTime) {\n    const latestEntry = this.entries[0]\n    if (latestEntry && latestEntry.endTime === END_OF_TIMES) {\n      latestEntry.close(endTime)\n    }\n  }\n\n  /**\n   * Return all values with an active period overlapping with the duration,\n   * or all values that were active during `startTime` if no duration is provided,\n   * or all currently active values if no `startTime` is provided.\n   */\n  findAll(startTime: RelativeTime = END_OF_TIMES, duration = 0 as Duration): Value[] {\n    const endTime = addDuration(startTime, duration)\n    return this.entries\n      .filter((entry) => entry.startTime <= endTime && startTime <= entry.endTime)\n      .map((entry) => entry.value)\n  }\n\n  /**\n   * Remove all entries from this collection.\n   */\n  reset() {\n    this.entries = []\n  }\n\n  /**\n   * Stop internal garbage collection of past entries.\n   */\n  stop() {\n    clearInterval(this.clearOldValuesInterval)\n  }\n\n  private clearOldValues() {\n    const oldTimeThreshold = relativeNow() - this.expireDelay\n    while (this.entries.length > 0 && this.entries[this.entries.length - 1].endTime < oldTimeThreshold) {\n      this.entries.pop()\n    }\n  }\n}\n","import type { RelativeTime, ClocksState } from '@datadog/browser-core'\nimport { SESSION_TIME_OUT_DELAY, ValueHistory } from '@datadog/browser-core'\nimport type { LifeCycle } from '../lifeCycle'\nimport { LifeCycleEventType } from '../lifeCycle'\nimport type { ViewCreatedEvent } from '../rumEventsCollection/view/trackViews'\n\nexport const VIEW_CONTEXT_TIME_OUT_DELAY = SESSION_TIME_OUT_DELAY\n\nexport interface ViewContext {\n  service?: string\n  version?: string\n  id: string\n  name?: string\n  startClocks: ClocksState\n}\n\nexport interface ViewContexts {\n  findView: (startTime?: RelativeTime) => ViewContext | undefined\n  stop: () => void\n}\n\nexport function startViewContexts(lifeCycle: LifeCycle): ViewContexts {\n  const viewContextHistory = new ValueHistory<ViewContext>(VIEW_CONTEXT_TIME_OUT_DELAY)\n\n  lifeCycle.subscribe(LifeCycleEventType.VIEW_CREATED, (view) => {\n    viewContextHistory.add(buildViewContext(view), view.startClocks.relative)\n  })\n\n  lifeCycle.subscribe(LifeCycleEventType.VIEW_ENDED, ({ endClocks }) => {\n    viewContextHistory.closeActive(endClocks.relative)\n  })\n\n  lifeCycle.subscribe(LifeCycleEventType.SESSION_RENEWED, () => {\n    viewContextHistory.reset()\n  })\n\n  function buildViewContext(view: ViewCreatedEvent) {\n    return {\n      service: view.service,\n      version: view.version,\n      id: view.id,\n      name: view.name,\n      startClocks: view.startClocks,\n    }\n  }\n\n  return {\n    findView: (startTime) => viewContextHistory.find(startTime),\n    stop: () => {\n      viewContextHistory.stop()\n    },\n  }\n}\n","import { setTimeout } from './timer'\nimport { callMonitored } from './monitor'\nimport { noop } from './utils/functionUtils'\n\nexport function instrumentMethod<OBJECT extends { [key: string]: any }, METHOD extends keyof OBJECT>(\n  object: OBJECT,\n  method: METHOD,\n  instrumentationFactory: (\n    original: OBJECT[METHOD]\n  ) => (this: OBJECT, ...args: Parameters<OBJECT[METHOD]>) => ReturnType<OBJECT[METHOD]>\n) {\n  const original = object[method]\n\n  let instrumentation = instrumentationFactory(original)\n\n  const instrumentationWrapper = function (this: OBJECT): ReturnType<OBJECT[METHOD]> | undefined {\n    if (typeof instrumentation !== 'function') {\n      return undefined\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return instrumentation.apply(this, arguments as unknown as Parameters<OBJECT[METHOD]>)\n  }\n  object[method] = instrumentationWrapper as OBJECT[METHOD]\n\n  return {\n    stop: () => {\n      if (object[method] === instrumentationWrapper) {\n        object[method] = original\n      } else {\n        instrumentation = original\n      }\n    },\n  }\n}\n\nexport function instrumentMethodAndCallOriginal<OBJECT extends { [key: string]: any }, METHOD extends keyof OBJECT>(\n  object: OBJECT,\n  method: METHOD,\n  {\n    before,\n    after,\n  }: {\n    before?: (this: OBJECT, ...args: Parameters<OBJECT[METHOD]>) => void\n    after?: (this: OBJECT, ...args: Parameters<OBJECT[METHOD]>) => void\n  }\n) {\n  return instrumentMethod(\n    object,\n    method,\n    (original) =>\n      function () {\n        const args = arguments as unknown as Parameters<OBJECT[METHOD]>\n        let result\n\n        if (before) {\n          callMonitored(before, this, args)\n        }\n\n        if (typeof original === 'function') {\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n          result = original.apply(this, args)\n        }\n\n        if (after) {\n          callMonitored(after, this, args)\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return result\n      }\n  )\n}\n\nexport function instrumentSetter<OBJECT extends { [key: string]: any }, PROPERTY extends keyof OBJECT>(\n  object: OBJECT,\n  property: PROPERTY,\n  after: (thisObject: OBJECT, value: OBJECT[PROPERTY]) => void\n) {\n  const originalDescriptor = Object.getOwnPropertyDescriptor(object, property)\n  if (!originalDescriptor || !originalDescriptor.set || !originalDescriptor.configurable) {\n    return { stop: noop }\n  }\n\n  let instrumentation = (thisObject: OBJECT, value: OBJECT[PROPERTY]) => {\n    // put hooked setter into event loop to avoid of set latency\n    setTimeout(() => {\n      after(thisObject, value)\n    }, 0)\n  }\n\n  const instrumentationWrapper = function (this: OBJECT, value: OBJECT[PROPERTY]) {\n    originalDescriptor.set!.call(this, value)\n    instrumentation(this, value)\n  }\n\n  Object.defineProperty(object, property, {\n    set: instrumentationWrapper,\n  })\n\n  return {\n    stop: () => {\n      if (Object.getOwnPropertyDescriptor(object, property)?.set === instrumentationWrapper) {\n        Object.defineProperty(object, property, originalDescriptor)\n      } else {\n        instrumentation = noop\n      }\n    },\n  }\n}\n","import { instrumentMethod } from '../tools/instrumentMethod'\nimport { callMonitored, monitor } from '../tools/monitor'\nimport { Observable } from '../tools/observable'\nimport type { ClocksState } from '../tools/utils/timeUtils'\nimport { clocksNow } from '../tools/utils/timeUtils'\nimport { normalizeUrl } from '../tools/utils/urlPolyfill'\n\ninterface FetchContextBase {\n  method: string\n  startClocks: ClocksState\n  input: unknown\n  init?: RequestInit\n  url: string\n}\n\nexport interface FetchStartContext extends FetchContextBase {\n  state: 'start'\n}\n\nexport interface FetchResolveContext extends FetchContextBase {\n  state: 'resolve'\n  status: number\n  response?: Response\n  responseType?: string\n  isAborted: boolean\n  error?: Error\n}\n\nexport type FetchContext = FetchStartContext | FetchResolveContext\n\nlet fetchObservable: Observable<FetchContext> | undefined\n\nexport function initFetchObservable() {\n  if (!fetchObservable) {\n    fetchObservable = createFetchObservable()\n  }\n  return fetchObservable\n}\n\nfunction createFetchObservable() {\n  const observable = new Observable<FetchContext>(() => {\n    if (!window.fetch) {\n      return\n    }\n\n    const { stop } = instrumentMethod(\n      window,\n      'fetch',\n      (originalFetch) =>\n        function (input, init) {\n          let responsePromise: Promise<Response>\n\n          const context = callMonitored(beforeSend, null, [observable, input, init])\n          if (context) {\n            responsePromise = originalFetch.call(this, context.input as RequestInfo, context.init)\n            callMonitored(afterSend, null, [observable, responsePromise, context])\n          } else {\n            responsePromise = originalFetch.call(this, input, init)\n          }\n\n          return responsePromise\n        }\n    )\n\n    return stop\n  })\n\n  return observable\n}\n\nfunction beforeSend(observable: Observable<FetchContext>, input: unknown, init?: RequestInit) {\n  const method = (init && init.method) || (input instanceof Request && input.method) || 'GET'\n  const url = input instanceof Request ? input.url : normalizeUrl(String(input))\n  const startClocks = clocksNow()\n\n  const context: FetchStartContext = {\n    state: 'start',\n    init,\n    input,\n    method,\n    startClocks,\n    url,\n  }\n\n  observable.notify(context)\n\n  return context\n}\n\nfunction afterSend(\n  observable: Observable<FetchContext>,\n  responsePromise: Promise<Response>,\n  startContext: FetchStartContext\n) {\n  const reportFetch = (response: Response | Error) => {\n    const context = startContext as unknown as FetchResolveContext\n    context.state = 'resolve'\n    if ('stack' in response || response instanceof Error) {\n      context.status = 0\n      context.isAborted = response instanceof DOMException && response.code === DOMException.ABORT_ERR\n      context.error = response\n    } else if ('status' in response) {\n      context.response = response\n      context.responseType = response.type\n      context.status = response.status\n      context.isAborted = false\n    }\n    observable.notify(context)\n  }\n\n  responsePromise.then(monitor(reportFetch), monitor(reportFetch))\n}\n","import type {\n  Duration,\n  XhrCompleteContext,\n  XhrStartContext,\n  ClocksState,\n  FetchStartContext,\n  FetchResolveContext,\n} from '@datadog/browser-core'\nimport {\n  RequestType,\n  initFetchObservable,\n  initXhrObservable,\n  readBytesFromStream,\n  elapsed,\n  timeStampNow,\n  tryToClone,\n} from '@datadog/browser-core'\nimport type { RumSessionManager } from '..'\nimport type { RumConfiguration } from './configuration'\nimport type { LifeCycle } from './lifeCycle'\nimport { LifeCycleEventType } from './lifeCycle'\nimport { isAllowedRequestUrl } from './rumEventsCollection/resource/resourceUtils'\nimport type { TraceIdentifier, Tracer } from './tracing/tracer'\nimport { startTracer } from './tracing/tracer'\n\nexport interface CustomContext {\n  requestIndex: number\n  spanId?: TraceIdentifier\n  traceId?: TraceIdentifier\n  traceSampled?: boolean\n}\nexport interface RumFetchStartContext extends FetchStartContext, CustomContext {}\nexport interface RumFetchResolveContext extends FetchResolveContext, CustomContext {}\nexport interface RumXhrStartContext extends XhrStartContext, CustomContext {}\nexport interface RumXhrCompleteContext extends XhrCompleteContext, CustomContext {}\n\nexport interface RequestStartEvent {\n  requestIndex: number\n  url: string\n}\nexport interface RequestCompleteEvent {\n  requestIndex: number\n  type: RequestType\n  method: string\n  url: string\n  status: number\n  responseType?: string\n  startClocks: ClocksState\n  duration: Duration\n  spanId?: TraceIdentifier\n  traceId?: TraceIdentifier\n  traceSampled?: boolean\n  xhr?: XMLHttpRequest\n  response?: Response\n  input?: unknown\n  init?: RequestInit\n  error?: Error\n}\n\nlet nextRequestIndex = 1\n\nexport function startRequestCollection(\n  lifeCycle: LifeCycle,\n  configuration: RumConfiguration,\n  sessionManager: RumSessionManager\n) {\n  const tracer = startTracer(configuration, sessionManager)\n  trackXhr(lifeCycle, configuration, tracer)\n  trackFetch(lifeCycle, configuration, tracer)\n}\n\nexport function trackXhr(lifeCycle: LifeCycle, configuration: RumConfiguration, tracer: Tracer) {\n  const subscription = initXhrObservable().subscribe((rawContext) => {\n    const context = rawContext as RumXhrStartContext | RumXhrCompleteContext\n    if (!isAllowedRequestUrl(configuration, context.url)) {\n      return\n    }\n\n    switch (context.state) {\n      case 'start':\n        tracer.traceXhr(context, context.xhr)\n        context.requestIndex = getNextRequestIndex()\n\n        lifeCycle.notify(LifeCycleEventType.REQUEST_STARTED, {\n          requestIndex: context.requestIndex,\n          url: context.url,\n        })\n        break\n      case 'complete':\n        tracer.clearTracingIfNeeded(context)\n        lifeCycle.notify(LifeCycleEventType.REQUEST_COMPLETED, {\n          duration: context.duration,\n          method: context.method,\n          requestIndex: context.requestIndex,\n          spanId: context.spanId,\n          startClocks: context.startClocks,\n          status: context.status,\n          traceId: context.traceId,\n          traceSampled: context.traceSampled,\n          type: RequestType.XHR,\n          url: context.url,\n          xhr: context.xhr,\n        })\n        break\n    }\n  })\n\n  return { stop: () => subscription.unsubscribe() }\n}\n\nexport function trackFetch(lifeCycle: LifeCycle, configuration: RumConfiguration, tracer: Tracer) {\n  const subscription = initFetchObservable().subscribe((rawContext) => {\n    const context = rawContext as RumFetchResolveContext | RumFetchStartContext\n    if (!isAllowedRequestUrl(configuration, context.url)) {\n      return\n    }\n\n    switch (context.state) {\n      case 'start':\n        tracer.traceFetch(context)\n        context.requestIndex = getNextRequestIndex()\n\n        lifeCycle.notify(LifeCycleEventType.REQUEST_STARTED, {\n          requestIndex: context.requestIndex,\n          url: context.url,\n        })\n        break\n      case 'resolve':\n        waitForResponseToComplete(context, (duration: Duration) => {\n          tracer.clearTracingIfNeeded(context)\n          lifeCycle.notify(LifeCycleEventType.REQUEST_COMPLETED, {\n            duration,\n            method: context.method,\n            requestIndex: context.requestIndex,\n            responseType: context.responseType,\n            spanId: context.spanId,\n            startClocks: context.startClocks,\n            status: context.status,\n            traceId: context.traceId,\n            traceSampled: context.traceSampled,\n            type: RequestType.FETCH,\n            url: context.url,\n            response: context.response,\n            init: context.init,\n            input: context.input,\n          })\n        })\n        break\n    }\n  })\n  return { stop: () => subscription.unsubscribe() }\n}\n\nfunction getNextRequestIndex() {\n  const result = nextRequestIndex\n  nextRequestIndex += 1\n  return result\n}\n\nfunction waitForResponseToComplete(context: RumFetchResolveContext, callback: (duration: Duration) => void) {\n  const clonedResponse = context.response && tryToClone(context.response)\n  if (!clonedResponse || !clonedResponse.body) {\n    // do not try to wait for the response if the clone failed, fetch error or null body\n    callback(elapsed(context.startClocks.timeStamp, timeStampNow()))\n  } else {\n    readBytesFromStream(\n      clonedResponse.body,\n      () => {\n        callback(elapsed(context.startClocks.timeStamp, timeStampNow()))\n      },\n      {\n        bytesLimit: Number.POSITIVE_INFINITY,\n        collectStreamBody: false,\n      }\n    )\n  }\n}\n","export function isServerError(status: number) {\n  return status >= 500\n}\n\nexport function tryToClone(response: Response): Response | undefined {\n  try {\n    return response.clone()\n  } catch (e) {\n    // clone can throw if the response has already been used by another instrumentation or is disturbed\n    return\n  }\n}\n","import { monitor } from './monitor'\nimport { noop } from './utils/functionUtils'\n\ntype Options = {\n  bytesLimit: number\n  collectStreamBody?: boolean\n}\n/**\n * Read bytes from a ReadableStream until at least `limit` bytes have been read (or until the end of\n * the stream). The callback is invoked with the at most `limit` bytes, and indicates that the limit\n * has been exceeded if more bytes were available.\n */\nexport function readBytesFromStream(\n  stream: ReadableStream<Uint8Array>,\n  callback: (error?: Error, bytes?: Uint8Array, limitExceeded?: boolean) => void,\n  options: Options\n) {\n  const reader = stream.getReader()\n  const chunks: Uint8Array[] = []\n  let readBytesCount = 0\n\n  readMore()\n\n  function readMore() {\n    reader.read().then(\n      monitor((result: ReadableStreamReadResult<Uint8Array>) => {\n        if (result.done) {\n          onDone()\n          return\n        }\n\n        if (options.collectStreamBody) {\n          chunks.push(result.value)\n        }\n        readBytesCount += result.value.length\n\n        if (readBytesCount > options.bytesLimit) {\n          onDone()\n        } else {\n          readMore()\n        }\n      }),\n      monitor((error) => callback(error))\n    )\n  }\n\n  function onDone() {\n    reader.cancel().catch(\n      // we don't care if cancel fails, but we still need to catch the error to avoid reporting it\n      // as an unhandled rejection\n      noop\n    )\n\n    let bytes: Uint8Array | undefined\n    let limitExceeded: boolean | undefined\n    if (options.collectStreamBody) {\n      let completeBuffer: Uint8Array\n      if (chunks.length === 1) {\n        // optimization: if the response is small enough to fit in a single buffer (provided by the browser), just\n        // use it directly.\n        completeBuffer = chunks[0]\n      } else {\n        // else, we need to copy buffers into a larger buffer to concatenate them.\n        completeBuffer = new Uint8Array(readBytesCount)\n        let offset = 0\n        chunks.forEach((chunk) => {\n          completeBuffer.set(chunk, offset)\n          offset += chunk.length\n        })\n      }\n      bytes = completeBuffer.slice(0, options.bytesLimit)\n      limitExceeded = completeBuffer.length > options.bytesLimit\n    }\n\n    callback(undefined, bytes, limitExceeded)\n  }\n}\n","import { noop } from '@datadog/browser-core'\nimport { RumEventType } from '../rawRumEvent.types'\nimport type { RumActionEvent, RumErrorEvent, RumLongTaskEvent, RumResourceEvent } from '../rumEvent.types'\nimport type { LifeCycle } from './lifeCycle'\nimport { LifeCycleEventType } from './lifeCycle'\n\nexport interface EventCounts {\n  errorCount: number\n  actionCount: number\n  longTaskCount: number\n  resourceCount: number\n  frustrationCount: number\n}\n\nexport function trackEventCounts({\n  lifeCycle,\n  isChildEvent,\n  onChange: callback = noop,\n}: {\n  lifeCycle: LifeCycle\n  isChildEvent: (event: RumActionEvent | RumErrorEvent | RumLongTaskEvent | RumResourceEvent) => boolean\n  onChange?: () => void\n}) {\n  const eventCounts: EventCounts = {\n    errorCount: 0,\n    longTaskCount: 0,\n    resourceCount: 0,\n    actionCount: 0,\n    frustrationCount: 0,\n  }\n\n  const subscription = lifeCycle.subscribe(LifeCycleEventType.RUM_EVENT_COLLECTED, (event): void => {\n    if (event.type === 'view' || !isChildEvent(event)) {\n      return\n    }\n    switch (event.type) {\n      case RumEventType.ERROR:\n        eventCounts.errorCount += 1\n        callback()\n        break\n      case RumEventType.ACTION:\n        eventCounts.actionCount += 1\n        if (event.action.frustration) {\n          eventCounts.frustrationCount += event.action.frustration.type.length\n        }\n        callback()\n        break\n      case RumEventType.LONG_TASK:\n        eventCounts.longTaskCount += 1\n        callback()\n        break\n      case RumEventType.RESOURCE:\n        eventCounts.resourceCount += 1\n        callback()\n        break\n    }\n  })\n\n  return {\n    stop: () => {\n      subscription.unsubscribe()\n    },\n    eventCounts,\n  }\n}\n","import type { Subscription, TimeoutId, TimeStamp } from '@datadog/browser-core'\nimport {\n  instrumentMethodAndCallOriginal,\n  matchList,\n  monitor,\n  Observable,\n  timeStampNow,\n  setTimeout,\n  clearTimeout,\n} from '@datadog/browser-core'\nimport type { RumConfiguration } from './configuration'\nimport type { LifeCycle } from './lifeCycle'\nimport { LifeCycleEventType } from './lifeCycle'\n\n// Delay to wait for a page activity to validate the tracking process\nexport const PAGE_ACTIVITY_VALIDATION_DELAY = 100\n// Delay to wait after a page activity to end the tracking process\nexport const PAGE_ACTIVITY_END_DELAY = 100\n\nexport interface PageActivityEvent {\n  isBusy: boolean\n}\n\nexport type PageActivityEndEvent = { hadActivity: true; end: TimeStamp } | { hadActivity: false }\n\n/**\n * Wait for the page activity end\n *\n * Detection lifecycle:\n * ```\n *                        Wait page activity end\n *              .-------------------'--------------------.\n *              v                                        v\n *     [Wait for a page activity ]          [Wait for a maximum duration]\n *     [timeout: VALIDATION_DELAY]          [  timeout: maxDuration     ]\n *          /                  \\                           |\n *         v                    v                          |\n *  [No page activity]   [Page activity]                   |\n *         |                   |,----------------------.   |\n *         v                   v                       |   |\n *     (Discard)     [Wait for a page activity]        |   |\n *                   [   timeout: END_DELAY   ]        |   |\n *                       /                \\            |   |\n *                      v                  v           |   |\n *             [No page activity]    [Page activity]   |   |\n *                      |                 |            |   |\n *                      |                 '------------'   |\n *                      '-----------. ,--------------------'\n *                                   v\n *                                 (End)\n * ```\n *\n * Note: by assuming that maxDuration is greater than VALIDATION_DELAY, we are sure that if the\n * process is still alive after maxDuration, it has been validated.\n */\nexport function waitPageActivityEnd(\n  lifeCycle: LifeCycle,\n  domMutationObservable: Observable<void>,\n  configuration: RumConfiguration,\n  pageActivityEndCallback: (event: PageActivityEndEvent) => void,\n  maxDuration?: number\n) {\n  const pageActivityObservable = createPageActivityObservable(lifeCycle, domMutationObservable, configuration)\n  return doWaitPageActivityEnd(pageActivityObservable, pageActivityEndCallback, maxDuration)\n}\n\nexport function doWaitPageActivityEnd(\n  pageActivityObservable: Observable<PageActivityEvent>,\n  pageActivityEndCallback: (event: PageActivityEndEvent) => void,\n  maxDuration?: number\n) {\n  let pageActivityEndTimeoutId: TimeoutId\n  let hasCompleted = false\n\n  const validationTimeoutId = setTimeout(\n    monitor(() => complete({ hadActivity: false })),\n    PAGE_ACTIVITY_VALIDATION_DELAY\n  )\n  const maxDurationTimeoutId =\n    maxDuration !== undefined\n      ? setTimeout(\n          monitor(() => complete({ hadActivity: true, end: timeStampNow() })),\n          maxDuration\n        )\n      : undefined\n\n  const pageActivitySubscription = pageActivityObservable.subscribe(({ isBusy }) => {\n    clearTimeout(validationTimeoutId)\n    clearTimeout(pageActivityEndTimeoutId)\n    const lastChangeTime = timeStampNow()\n    if (!isBusy) {\n      pageActivityEndTimeoutId = setTimeout(\n        monitor(() => complete({ hadActivity: true, end: lastChangeTime })),\n        PAGE_ACTIVITY_END_DELAY\n      )\n    }\n  })\n\n  const stop = () => {\n    hasCompleted = true\n    clearTimeout(validationTimeoutId)\n    clearTimeout(pageActivityEndTimeoutId)\n    clearTimeout(maxDurationTimeoutId)\n    pageActivitySubscription.unsubscribe()\n  }\n\n  function complete(event: PageActivityEndEvent) {\n    if (hasCompleted) {\n      return\n    }\n    stop()\n    pageActivityEndCallback(event)\n  }\n  return { stop }\n}\n\nexport function createPageActivityObservable(\n  lifeCycle: LifeCycle,\n  domMutationObservable: Observable<void>,\n  configuration: RumConfiguration\n): Observable<PageActivityEvent> {\n  const observable = new Observable<PageActivityEvent>(() => {\n    const subscriptions: Subscription[] = []\n    let firstRequestIndex: undefined | number\n    let pendingRequestsCount = 0\n\n    subscriptions.push(\n      domMutationObservable.subscribe(notifyPageActivity),\n      lifeCycle.subscribe(LifeCycleEventType.PERFORMANCE_ENTRIES_COLLECTED, (entries) => {\n        if (entries.some((entry) => entry.entryType === 'resource' && !isExcludedUrl(configuration, entry.name))) {\n          notifyPageActivity()\n        }\n      }),\n      lifeCycle.subscribe(LifeCycleEventType.REQUEST_STARTED, (startEvent) => {\n        if (isExcludedUrl(configuration, startEvent.url)) {\n          return\n        }\n        if (firstRequestIndex === undefined) {\n          firstRequestIndex = startEvent.requestIndex\n        }\n        pendingRequestsCount += 1\n        notifyPageActivity()\n      }),\n      lifeCycle.subscribe(LifeCycleEventType.REQUEST_COMPLETED, (request) => {\n        if (\n          isExcludedUrl(configuration, request.url) ||\n          firstRequestIndex === undefined ||\n          // If the request started before the tracking start, ignore it\n          request.requestIndex < firstRequestIndex\n        ) {\n          return\n        }\n        pendingRequestsCount -= 1\n        notifyPageActivity()\n      })\n    )\n\n    const { stop: stopTrackingWindowOpen } = trackWindowOpen(notifyPageActivity)\n\n    return () => {\n      stopTrackingWindowOpen()\n      subscriptions.forEach((s) => s.unsubscribe())\n    }\n\n    function notifyPageActivity() {\n      observable.notify({ isBusy: pendingRequestsCount > 0 })\n    }\n  })\n\n  return observable\n}\n\nfunction isExcludedUrl(configuration: RumConfiguration, requestUrl: string): boolean {\n  return matchList(configuration.excludedActivityUrls, requestUrl)\n}\n\nfunction trackWindowOpen(callback: () => void) {\n  return instrumentMethodAndCallOriginal(window, 'open', { before: callback })\n}\n","import type { TimeoutId } from '@datadog/browser-core'\nimport { ONE_SECOND, clearTimeout, setTimeout } from '@datadog/browser-core'\nimport type { Click } from './trackClickActions'\n\nexport interface ClickChain {\n  tryAppend: (click: Click) => boolean\n  stop: () => void\n}\n\nexport const MAX_DURATION_BETWEEN_CLICKS = ONE_SECOND\nexport const MAX_DISTANCE_BETWEEN_CLICKS = 100\n\nconst enum ClickChainStatus {\n  WaitingForMoreClicks,\n  WaitingForClicksToStop,\n  Finalized,\n}\n\nexport function createClickChain(firstClick: Click, onFinalize: (clicks: Click[]) => void): ClickChain {\n  const bufferedClicks: Click[] = []\n  let status = ClickChainStatus.WaitingForMoreClicks\n  let maxDurationBetweenClicksTimeoutId: TimeoutId | undefined\n  appendClick(firstClick)\n\n  function appendClick(click: Click) {\n    click.stopObservable.subscribe(tryFinalize)\n    bufferedClicks.push(click)\n    clearTimeout(maxDurationBetweenClicksTimeoutId)\n    maxDurationBetweenClicksTimeoutId = setTimeout(dontAcceptMoreClick, MAX_DURATION_BETWEEN_CLICKS)\n  }\n\n  function tryFinalize() {\n    if (status === ClickChainStatus.WaitingForClicksToStop && bufferedClicks.every((click) => click.isStopped())) {\n      status = ClickChainStatus.Finalized\n      onFinalize(bufferedClicks)\n    }\n  }\n\n  function dontAcceptMoreClick() {\n    clearTimeout(maxDurationBetweenClicksTimeoutId)\n    if (status === ClickChainStatus.WaitingForMoreClicks) {\n      status = ClickChainStatus.WaitingForClicksToStop\n      tryFinalize()\n    }\n  }\n\n  return {\n    tryAppend: (click) => {\n      if (status !== ClickChainStatus.WaitingForMoreClicks) {\n        return false\n      }\n\n      if (\n        bufferedClicks.length > 0 &&\n        !areEventsSimilar(bufferedClicks[bufferedClicks.length - 1].event, click.event)\n      ) {\n        dontAcceptMoreClick()\n        return false\n      }\n\n      appendClick(click)\n      return true\n    },\n    stop: () => {\n      dontAcceptMoreClick()\n    },\n  }\n}\n\n/**\n * Checks whether two events are similar by comparing their target, position and timestamp\n */\nfunction areEventsSimilar(first: MouseEvent, second: MouseEvent) {\n  return (\n    first.target === second.target &&\n    mouseEventDistance(first, second) <= MAX_DISTANCE_BETWEEN_CLICKS &&\n    first.timeStamp - second.timeStamp <= MAX_DURATION_BETWEEN_CLICKS\n  )\n}\n\nfunction mouseEventDistance(origin: MouseEvent, other: MouseEvent) {\n  return Math.sqrt(Math.pow(origin.clientX - other.clientX, 2) + Math.pow(origin.clientY - other.clientY, 2))\n}\n","import { safeTruncate, isIE, find } from '@datadog/browser-core'\n\n/**\n * Get the action name from the attribute 'data-dd-action-name' on the element or any of its parent.\n * It can also be retrieved from a user defined attribute.\n */\nexport const DEFAULT_PROGRAMMATIC_ACTION_NAME_ATTRIBUTE = 'data-dd-action-name'\n\nexport function getActionNameFromElement(element: Element, userProgrammaticAttribute?: string): string {\n  // Proceed to get the action name in two steps:\n  // * first, get the name programmatically, explicitly defined by the user.\n  // * then, use strategies that are known to return good results. Those strategies will be used on\n  //   the element and a few parents, but it's likely that they won't succeed at all.\n  // * if no name is found this way, use strategies returning less accurate names as a fallback.\n  //   Those are much likely to succeed.\n  return (\n    getActionNameFromElementProgrammatically(element, DEFAULT_PROGRAMMATIC_ACTION_NAME_ATTRIBUTE) ||\n    (userProgrammaticAttribute && getActionNameFromElementProgrammatically(element, userProgrammaticAttribute)) ||\n    getActionNameFromElementForStrategies(element, userProgrammaticAttribute, priorityStrategies) ||\n    getActionNameFromElementForStrategies(element, userProgrammaticAttribute, fallbackStrategies) ||\n    ''\n  )\n}\n\nfunction getActionNameFromElementProgrammatically(targetElement: Element, programmaticAttribute: string) {\n  let elementWithAttribute\n  // We don't use getActionNameFromElementForStrategies here, because we want to consider all parents,\n  // without limit. It is up to the user to declare a relevant naming strategy.\n  // If available, use element.closest() to match get the attribute from the element or any of its\n  // parent.  Else fallback to a more traditional implementation.\n  if (supportsElementClosest()) {\n    elementWithAttribute = targetElement.closest(`[${programmaticAttribute}]`)\n  } else {\n    let element: Element | null = targetElement\n    while (element) {\n      if (element.hasAttribute(programmaticAttribute)) {\n        elementWithAttribute = element\n        break\n      }\n      element = element.parentElement\n    }\n  }\n\n  if (!elementWithAttribute) {\n    return\n  }\n  const name = elementWithAttribute.getAttribute(programmaticAttribute)!\n  return truncate(normalizeWhitespace(name.trim()))\n}\n\ntype NameStrategy = (\n  element: Element | HTMLElement | HTMLInputElement | HTMLSelectElement,\n  userProgrammaticAttribute: string | undefined\n) => string | undefined | null\n\nconst priorityStrategies: NameStrategy[] = [\n  // associated LABEL text\n  (element, userProgrammaticAttribute) => {\n    // IE does not support element.labels, so we fallback to a CSS selector based on the element id\n    // instead\n    if (supportsLabelProperty()) {\n      if ('labels' in element && element.labels && element.labels.length > 0) {\n        return getTextualContent(element.labels[0], userProgrammaticAttribute)\n      }\n    } else if (element.id) {\n      const label =\n        element.ownerDocument &&\n        find(element.ownerDocument.querySelectorAll('label'), (label) => label.htmlFor === element.id)\n      return label && getTextualContent(label, userProgrammaticAttribute)\n    }\n  },\n  // INPUT button (and associated) value\n  (element) => {\n    if (element.nodeName === 'INPUT') {\n      const input = element as HTMLInputElement\n      const type = input.getAttribute('type')\n      if (type === 'button' || type === 'submit' || type === 'reset') {\n        return input.value\n      }\n    }\n  },\n  // BUTTON, LABEL or button-like element text\n  (element, userProgrammaticAttribute) => {\n    if (element.nodeName === 'BUTTON' || element.nodeName === 'LABEL' || element.getAttribute('role') === 'button') {\n      return getTextualContent(element, userProgrammaticAttribute)\n    }\n  },\n  (element) => element.getAttribute('aria-label'),\n  // associated element text designated by the aria-labelledby attribute\n  (element, userProgrammaticAttribute) => {\n    const labelledByAttribute = element.getAttribute('aria-labelledby')\n    if (labelledByAttribute) {\n      return labelledByAttribute\n        .split(/\\s+/)\n        .map((id) => getElementById(element, id))\n        .filter((label): label is HTMLElement => Boolean(label))\n        .map((element) => getTextualContent(element, userProgrammaticAttribute))\n        .join(' ')\n    }\n  },\n  (element) => element.getAttribute('alt'),\n  (element) => element.getAttribute('name'),\n  (element) => element.getAttribute('title'),\n  (element) => element.getAttribute('placeholder'),\n  // SELECT first OPTION text\n  (element, userProgrammaticAttribute) => {\n    if ('options' in element && element.options.length > 0) {\n      return getTextualContent(element.options[0], userProgrammaticAttribute)\n    }\n  },\n]\n\nconst fallbackStrategies: NameStrategy[] = [\n  (element, userProgrammaticAttribute) => getTextualContent(element, userProgrammaticAttribute),\n]\n\n/**\n * Iterates over the target element and its parent, using the strategies list to get an action name.\n * Each strategies are applied on each element, stopping as soon as a non-empty value is returned.\n */\nconst MAX_PARENTS_TO_CONSIDER = 10\nfunction getActionNameFromElementForStrategies(\n  targetElement: Element,\n  userProgrammaticAttribute: string | undefined,\n  strategies: NameStrategy[]\n) {\n  let element: Element | null = targetElement\n  let recursionCounter = 0\n  while (\n    recursionCounter <= MAX_PARENTS_TO_CONSIDER &&\n    element &&\n    element.nodeName !== 'BODY' &&\n    element.nodeName !== 'HTML' &&\n    element.nodeName !== 'HEAD'\n  ) {\n    for (const strategy of strategies) {\n      const name = strategy(element, userProgrammaticAttribute)\n      if (typeof name === 'string') {\n        const trimmedName = name.trim()\n        if (trimmedName) {\n          return truncate(normalizeWhitespace(trimmedName))\n        }\n      }\n    }\n    // Consider a FORM as a contextual limit to get the action name.  This is experimental and may\n    // be reconsidered in the future.\n    if (element.nodeName === 'FORM') {\n      break\n    }\n    element = element.parentElement\n    recursionCounter += 1\n  }\n}\n\nfunction normalizeWhitespace(s: string) {\n  return s.replace(/\\s+/g, ' ')\n}\n\nfunction truncate(s: string) {\n  return s.length > 100 ? `${safeTruncate(s, 100)} [...]` : s\n}\n\nfunction getElementById(refElement: Element, id: string) {\n  // Use the element ownerDocument here, because tests are executed in an iframe, so\n  // document.getElementById won't work.\n  return refElement.ownerDocument ? refElement.ownerDocument.getElementById(id) : null\n}\n\nfunction getTextualContent(element: Element | HTMLElement, userProgrammaticAttribute: string | undefined) {\n  if ((element as HTMLElement).isContentEditable) {\n    return\n  }\n\n  if ('innerText' in element) {\n    let text = element.innerText\n\n    const removeTextFromElements = (query: string) => {\n      const list = element.querySelectorAll<Element | HTMLElement>(query)\n      for (let index = 0; index < list.length; index += 1) {\n        const element = list[index]\n        if ('innerText' in element) {\n          const textToReplace = element.innerText\n          if (textToReplace && textToReplace.trim().length > 0) {\n            text = text.replace(textToReplace, '')\n          }\n        }\n      }\n    }\n\n    if (!supportsInnerTextScriptAndStyleRemoval()) {\n      // remove the inner text of SCRIPT and STYLES from the result. This is a bit dirty, but should\n      // be relatively fast and work in most cases.\n      removeTextFromElements('script, style')\n    }\n\n    // remove the text of elements with programmatic attribute value\n    removeTextFromElements(`[${DEFAULT_PROGRAMMATIC_ACTION_NAME_ATTRIBUTE}]`)\n\n    if (userProgrammaticAttribute) {\n      removeTextFromElements(`[${userProgrammaticAttribute}]`)\n    }\n\n    return text\n  }\n\n  return element.textContent\n}\n\n/**\n * Returns true if element.innerText excludes the text from inline SCRIPT and STYLE element. This\n * should be the case everywhere except on Internet Explorer 10 and 11 (see [1])\n *\n * The innerText property relies on what is actually rendered to compute its output, so to check if\n * it actually excludes SCRIPT and STYLE content, a solution would be to create a style element, set\n * its content to '*', inject it in the document body, and check if the style element innerText\n * property returns '*'. Using a new `document` instance won't work as it is not rendered.\n *\n * This solution requires specific CSP rules (see [2]) to be set by the customer. We want to avoid\n * this, so instead we rely on browser detection. In case of false negative, the impact should be\n * low, since we rely on this result to remove the SCRIPT and STYLE innerText (which will be empty)\n * from a parent element innerText.\n *\n * [1]: https://web.archive.org/web/20210602165716/http://perfectionkills.com/the-poor-misunderstood-innerText/#diff-with-textContent\n * [2]: https://github.com/DataDog/browser-sdk/issues/1084\n */\nfunction supportsInnerTextScriptAndStyleRemoval() {\n  return !isIE()\n}\n\n/**\n * Returns true if the browser supports the element.labels property.  This should be the case\n * everywhere except on Internet Explorer.\n * Note: The result is computed lazily, because we don't want any DOM access when the SDK is\n * evaluated.\n */\nlet supportsLabelPropertyResult: boolean | undefined\nfunction supportsLabelProperty() {\n  if (supportsLabelPropertyResult === undefined) {\n    supportsLabelPropertyResult = 'labels' in HTMLInputElement.prototype\n  }\n  return supportsLabelPropertyResult\n}\n\n/**\n * Returns true if the browser supports the element.closest method.  This should be the case\n * everywhere except on Internet Explorer.\n * Note: The result is computed lazily, because we don't want any DOM access when the SDK is\n * evaluated.\n */\nlet supportsElementClosestResult: boolean | undefined\nfunction supportsElementClosest() {\n  if (supportsElementClosestResult === undefined) {\n    supportsElementClosestResult = 'closest' in HTMLElement.prototype\n  }\n  return supportsElementClosestResult\n}\n","import { cssEscape } from '@datadog/browser-core'\nimport { DEFAULT_PROGRAMMATIC_ACTION_NAME_ATTRIBUTE } from './getActionNameFromElement'\n\n/**\n * Stable attributes are attributes that are commonly used to identify parts of a UI (ex:\n * component). Those attribute values should not be generated randomly (hardcoded most of the time)\n * and stay the same across deploys. They are not necessarily unique across the document.\n */\nexport const STABLE_ATTRIBUTES = [\n  DEFAULT_PROGRAMMATIC_ACTION_NAME_ATTRIBUTE,\n  // Common test attributes (list provided by google recorder)\n  'data-testid',\n  'data-test',\n  'data-qa',\n  'data-cy',\n  'data-test-id',\n  'data-qa-id',\n  'data-testing',\n  // FullStory decorator attributes:\n  'data-component',\n  'data-element',\n  'data-source-file',\n]\n\ntype SelectorGetter = (element: Element, actionNameAttribute: string | undefined) => string | undefined\n\n// Selectors to use if they target a single element on the whole document. Those selectors are\n// considered as \"stable\" and uniquely identify an element regardless of the page state. If we find\n// one, we should consider the selector \"complete\" and stop iterating over ancestors.\nconst GLOBALLY_UNIQUE_SELECTOR_GETTERS: SelectorGetter[] = [getStableAttributeSelector, getIDSelector]\n\n// Selectors to use if they target a single element among an element descendants. Those selectors\n// are more brittle than \"globally unique\" selectors and should be combined with ancestor selectors\n// to improve specificity.\nconst UNIQUE_AMONG_CHILDREN_SELECTOR_GETTERS: SelectorGetter[] = [\n  getStableAttributeSelector,\n  getClassSelector,\n  getTagNameSelector,\n]\n\nexport function getSelectorFromElement(targetElement: Element, actionNameAttribute: string | undefined) {\n  let targetElementSelector = ''\n  let element: Element | null = targetElement\n\n  while (element && element.nodeName !== 'HTML') {\n    const globallyUniqueSelector = findSelector(\n      element,\n      GLOBALLY_UNIQUE_SELECTOR_GETTERS,\n      isSelectorUniqueGlobally,\n      actionNameAttribute,\n      targetElementSelector\n    )\n    if (globallyUniqueSelector) {\n      return globallyUniqueSelector\n    }\n\n    const uniqueSelectorAmongChildren = findSelector(\n      element,\n      UNIQUE_AMONG_CHILDREN_SELECTOR_GETTERS,\n      isSelectorUniqueAmongSiblings,\n      actionNameAttribute,\n      targetElementSelector\n    )\n    targetElementSelector =\n      uniqueSelectorAmongChildren || combineSelector(getPositionSelector(element), targetElementSelector)\n\n    element = element.parentElement\n  }\n\n  return targetElementSelector\n}\n\nfunction isGeneratedValue(value: string) {\n  // To compute the \"URL path group\", the backend replaces every URL path parts as a question mark\n  // if it thinks the part is an identifier. The condition it uses is to checks whether a digit is\n  // present.\n  //\n  // Here, we use the same strategy: if a the value contains a digit, we consider it generated. This\n  // strategy might be a bit naive and fail in some cases, but there are many fallbacks to generate\n  // CSS selectors so it should be fine most of the time. We might want to allow customers to\n  // provide their own `isGeneratedValue` at some point.\n  return /[0-9]/.test(value)\n}\n\nfunction getIDSelector(element: Element): string | undefined {\n  if (element.id && !isGeneratedValue(element.id)) {\n    return `#${cssEscape(element.id)}`\n  }\n}\n\nfunction getClassSelector(element: Element): string | undefined {\n  if (element.tagName === 'BODY') {\n    return\n  }\n  if (element.classList.length > 0) {\n    for (let i = 0; i < element.classList.length; i += 1) {\n      const className = element.classList[i]\n      if (isGeneratedValue(className)) {\n        continue\n      }\n\n      return `${element.tagName}.${cssEscape(className)}`\n    }\n  }\n}\n\nfunction getTagNameSelector(element: Element): string {\n  return element.tagName\n}\n\nfunction getStableAttributeSelector(element: Element, actionNameAttribute: string | undefined): string | undefined {\n  if (actionNameAttribute) {\n    const selector = getAttributeSelector(actionNameAttribute)\n    if (selector) {\n      return selector\n    }\n  }\n\n  for (const attributeName of STABLE_ATTRIBUTES) {\n    const selector = getAttributeSelector(attributeName)\n    if (selector) {\n      return selector\n    }\n  }\n\n  function getAttributeSelector(attributeName: string) {\n    if (element.hasAttribute(attributeName)) {\n      return `${element.tagName}[${attributeName}=\"${cssEscape(element.getAttribute(attributeName)!)}\"]`\n    }\n  }\n}\n\nfunction getPositionSelector(element: Element): string {\n  let sibling = element.parentElement!.firstElementChild\n  let elementIndex = 1\n\n  while (sibling && sibling !== element) {\n    if (sibling.tagName === element.tagName) {\n      elementIndex += 1\n    }\n    sibling = sibling.nextElementSibling\n  }\n\n  return `${element.tagName}:nth-of-type(${elementIndex})`\n}\n\nfunction findSelector(\n  element: Element,\n  selectorGetters: SelectorGetter[],\n  predicate: (element: Element, selector: string) => boolean,\n  actionNameAttribute: string | undefined,\n  childSelector?: string\n) {\n  for (const selectorGetter of selectorGetters) {\n    const elementSelector = selectorGetter(element, actionNameAttribute)\n    if (!elementSelector) {\n      continue\n    }\n    const fullSelector = combineSelector(elementSelector, childSelector)\n    if (predicate(element, fullSelector)) {\n      return fullSelector\n    }\n  }\n}\n\n/**\n * Check whether the selector is unique among the whole document.\n */\nfunction isSelectorUniqueGlobally(element: Element, selector: string): boolean {\n  return element.ownerDocument.querySelectorAll(selector).length === 1\n}\n\n/**\n * Check whether the selector is unique among the element siblings. In other words, it returns true\n * if \"ELEMENT_PARENT > SELECTOR\" returns a single element.\n *\n * The result will be less accurate on browsers that don't support :scope (i. e. IE): it will check\n * for any element matching the selector contained in the parent (in other words,\n * \"ELEMENT_PARENT SELECTOR\" returns a single element), regardless of whether the selector is a\n * direct descendent of the element parent. This should not impact results too much: if it\n * inaccurately returns false, we'll just fall back to another strategy.\n */\nfunction isSelectorUniqueAmongSiblings(element: Element, selector: string): boolean {\n  return (\n    element.parentElement!.querySelectorAll(supportScopeSelector() ? combineSelector(':scope', selector) : selector)\n      .length === 1\n  )\n}\n\nfunction combineSelector(parent: string, child: string | undefined): string {\n  return child ? `${parent}>${child}` : parent\n}\n\nlet supportScopeSelectorCache: boolean | undefined\nexport function supportScopeSelector() {\n  if (supportScopeSelectorCache === undefined) {\n    try {\n      document.querySelector(':scope')\n      supportScopeSelectorCache = true\n    } catch {\n      supportScopeSelectorCache = false\n    }\n  }\n  return supportScopeSelectorCache\n}\n","import { addEventListener, DOM_EVENT } from '@datadog/browser-core'\n\nexport type MouseEventOnElement = PointerEvent & { target: Element }\n\nexport interface UserActivity {\n  selection: boolean\n  input: boolean\n}\nexport interface ActionEventsHooks<ClickContext> {\n  onPointerDown: (event: MouseEventOnElement) => ClickContext | undefined\n  onPointerUp: (context: ClickContext, event: MouseEventOnElement, getUserActivity: () => UserActivity) => void\n}\n\nexport function listenActionEvents<ClickContext>({ onPointerDown, onPointerUp }: ActionEventsHooks<ClickContext>) {\n  let selectionEmptyAtPointerDown: boolean\n  let userActivity: UserActivity = {\n    selection: false,\n    input: false,\n  }\n  let clickContext: ClickContext | undefined\n\n  const listeners = [\n    addEventListener(\n      window,\n      DOM_EVENT.POINTER_DOWN,\n      (event: PointerEvent) => {\n        if (isValidPointerEvent(event)) {\n          selectionEmptyAtPointerDown = isSelectionEmpty()\n          userActivity = {\n            selection: false,\n            input: false,\n          }\n          clickContext = onPointerDown(event)\n        }\n      },\n      { capture: true }\n    ),\n\n    addEventListener(\n      window,\n      DOM_EVENT.SELECTION_CHANGE,\n      () => {\n        if (!selectionEmptyAtPointerDown || !isSelectionEmpty()) {\n          userActivity.selection = true\n        }\n      },\n      { capture: true }\n    ),\n\n    addEventListener(\n      window,\n      DOM_EVENT.POINTER_UP,\n      (event: PointerEvent) => {\n        if (isValidPointerEvent(event) && clickContext) {\n          // Use a scoped variable to make sure the value is not changed by other clicks\n          const localUserActivity = userActivity\n          onPointerUp(clickContext, event, () => localUserActivity)\n          clickContext = undefined\n        }\n      },\n      { capture: true }\n    ),\n\n    addEventListener(\n      window,\n      DOM_EVENT.INPUT,\n      () => {\n        userActivity.input = true\n      },\n      { capture: true }\n    ),\n  ]\n\n  return {\n    stop: () => {\n      listeners.forEach((listener) => listener.stop())\n    },\n  }\n}\n\nfunction isSelectionEmpty(): boolean {\n  const selection = window.getSelection()\n  return !selection || selection.isCollapsed\n}\n\nfunction isValidPointerEvent(event: PointerEvent): event is MouseEventOnElement {\n  return (\n    event.target instanceof Element &&\n    // Only consider 'primary' pointer events for now. Multi-touch support could be implemented in\n    // the future.\n    event.isPrimary !== false\n  )\n}\n","import { elementMatches, ONE_SECOND } from '@datadog/browser-core'\nimport { FrustrationType } from '../../../rawRumEvent.types'\nimport type { Click } from './trackClickActions'\n\nconst MIN_CLICKS_PER_SECOND_TO_CONSIDER_RAGE = 3\n\nexport function computeFrustration(clicks: Click[], rageClick: Click) {\n  if (isRage(clicks)) {\n    rageClick.addFrustration(FrustrationType.RAGE_CLICK)\n    if (clicks.some(isDead)) {\n      rageClick.addFrustration(FrustrationType.DEAD_CLICK)\n    }\n    if (rageClick.hasError) {\n      rageClick.addFrustration(FrustrationType.ERROR_CLICK)\n    }\n    return { isRage: true }\n  }\n\n  const hasSelectionChanged = clicks.some((click) => click.getUserActivity().selection)\n  clicks.forEach((click) => {\n    if (click.hasError) {\n      click.addFrustration(FrustrationType.ERROR_CLICK)\n    }\n    if (\n      isDead(click) &&\n      // Avoid considering clicks part of a double-click or triple-click selections as dead clicks\n      !hasSelectionChanged\n    ) {\n      click.addFrustration(FrustrationType.DEAD_CLICK)\n    }\n  })\n  return { isRage: false }\n}\n\nexport function isRage(clicks: Click[]) {\n  if (clicks.some((click) => click.getUserActivity().selection)) {\n    return false\n  }\n  for (let i = 0; i < clicks.length - (MIN_CLICKS_PER_SECOND_TO_CONSIDER_RAGE - 1); i += 1) {\n    if (\n      clicks[i + MIN_CLICKS_PER_SECOND_TO_CONSIDER_RAGE - 1].event.timeStamp - clicks[i].event.timeStamp <=\n      ONE_SECOND\n    ) {\n      return true\n    }\n  }\n  return false\n}\n\nconst DEAD_CLICK_EXCLUDE_SELECTOR =\n  // inputs that don't trigger a meaningful event like \"input\" when clicked, including textual\n  // inputs (using a negative selector is shorter here)\n  'input:not([type=\"checkbox\"]):not([type=\"radio\"]):not([type=\"button\"]):not([type=\"submit\"]):not([type=\"reset\"]):not([type=\"range\"]),' +\n  'textarea,' +\n  'select,' +\n  // contenteditable and their descendants don't always trigger meaningful changes when manipulated\n  '[contenteditable],' +\n  '[contenteditable] *,' +\n  // canvas, as there is no good way to detect activity occurring on them\n  'canvas,' +\n  // links that are interactive (have an href attribute) or any of their descendants, as they can\n  // open a new tab or navigate to a hash without triggering a meaningful event\n  'a[href],' +\n  'a[href] *'\n\nexport function isDead(click: Click) {\n  if (click.hasPageActivity || click.getUserActivity().input) {\n    return false\n  }\n  return !elementMatches(click.event.target, DEAD_CLICK_EXCLUDE_SELECTOR)\n}\n","import type { Duration, ClocksState, RelativeTime, TimeStamp } from '@datadog/browser-core'\nimport {\n  includes,\n  timeStampNow,\n  Observable,\n  assign,\n  getRelativeTime,\n  ONE_MINUTE,\n  ValueHistory,\n  generateUUID,\n  clocksNow,\n  ONE_SECOND,\n  elapsed,\n} from '@datadog/browser-core'\nimport type { FrustrationType } from '../../../rawRumEvent.types'\nimport { ActionType } from '../../../rawRumEvent.types'\nimport type { RumConfiguration } from '../../configuration'\nimport type { LifeCycle } from '../../lifeCycle'\nimport { LifeCycleEventType } from '../../lifeCycle'\nimport { trackEventCounts } from '../../trackEventCounts'\nimport { PAGE_ACTIVITY_VALIDATION_DELAY, waitPageActivityEnd } from '../../waitPageActivityEnd'\nimport type { ClickChain } from './clickChain'\nimport { createClickChain } from './clickChain'\nimport { getActionNameFromElement } from './getActionNameFromElement'\nimport { getSelectorFromElement } from './getSelectorFromElement'\nimport type { MouseEventOnElement, UserActivity } from './listenActionEvents'\nimport { listenActionEvents } from './listenActionEvents'\nimport { computeFrustration } from './computeFrustration'\n\ninterface ActionCounts {\n  errorCount: number\n  longTaskCount: number\n  resourceCount: number\n}\n\nexport interface ClickAction {\n  type: ActionType.CLICK\n  id: string\n  name: string\n  target?: {\n    selector: string\n    selector_with_stable_attributes?: string\n    width: number\n    height: number\n  }\n  position?: { x: number; y: number }\n  startClocks: ClocksState\n  duration?: Duration\n  counts: ActionCounts\n  event: MouseEventOnElement\n  frustrationTypes: FrustrationType[]\n  events: Event[]\n}\n\nexport interface ActionContexts {\n  findActionId: (startTime?: RelativeTime) => string | string[] | undefined\n}\n\ntype ClickActionIdHistory = ValueHistory<ClickAction['id']>\n\n// Maximum duration for click actions\nexport const CLICK_ACTION_MAX_DURATION = 10 * ONE_SECOND\nexport const ACTION_CONTEXT_TIME_OUT_DELAY = 5 * ONE_MINUTE // arbitrary\n\nexport function trackClickActions(\n  lifeCycle: LifeCycle,\n  domMutationObservable: Observable<void>,\n  configuration: RumConfiguration\n) {\n  const history: ClickActionIdHistory = new ValueHistory(ACTION_CONTEXT_TIME_OUT_DELAY)\n  const stopObservable = new Observable<void>()\n  let currentClickChain: ClickChain | undefined\n\n  lifeCycle.subscribe(LifeCycleEventType.SESSION_RENEWED, () => {\n    history.reset()\n  })\n\n  lifeCycle.subscribe(LifeCycleEventType.VIEW_ENDED, stopClickChain)\n\n  const { stop: stopActionEventsListener } = listenActionEvents<{\n    clickActionBase: ClickActionBase\n    hadActivityOnPointerDown: () => boolean\n  }>({\n    onPointerDown: (pointerDownEvent) =>\n      processPointerDown(configuration, lifeCycle, domMutationObservable, history, pointerDownEvent),\n    onPointerUp: ({ clickActionBase, hadActivityOnPointerDown }, startEvent, getUserActivity) =>\n      startClickAction(\n        configuration,\n        lifeCycle,\n        domMutationObservable,\n        history,\n        stopObservable,\n        appendClickToClickChain,\n        clickActionBase,\n        startEvent,\n        getUserActivity,\n        hadActivityOnPointerDown\n      ),\n  })\n\n  const actionContexts: ActionContexts = {\n    findActionId: (startTime?: RelativeTime) =>\n      configuration.trackFrustrations ? history.findAll(startTime) : history.find(startTime),\n  }\n\n  return {\n    stop: () => {\n      stopClickChain()\n      stopObservable.notify()\n      stopActionEventsListener()\n    },\n    actionContexts,\n  }\n\n  function appendClickToClickChain(click: Click) {\n    if (!currentClickChain || !currentClickChain.tryAppend(click)) {\n      const rageClick = click.clone()\n      currentClickChain = createClickChain(click, (clicks) => {\n        finalizeClicks(clicks, rageClick)\n      })\n    }\n  }\n\n  function stopClickChain() {\n    if (currentClickChain) {\n      currentClickChain.stop()\n    }\n  }\n}\n\nfunction processPointerDown(\n  configuration: RumConfiguration,\n  lifeCycle: LifeCycle,\n  domMutationObservable: Observable<void>,\n  history: ClickActionIdHistory,\n  pointerDownEvent: MouseEventOnElement\n) {\n  if (!configuration.trackFrustrations && history.find()) {\n    // TODO: remove this in a future major version. To keep retrocompatibility, ignore any new\n    // action if another one is already occurring.\n    return\n  }\n\n  const clickActionBase = computeClickActionBase(pointerDownEvent, configuration.actionNameAttribute)\n  if (!configuration.trackFrustrations && !clickActionBase.name) {\n    // TODO: remove this in a future major version. To keep retrocompatibility, ignore any action\n    // with a blank name\n    return\n  }\n\n  let hadActivityOnPointerDown = false\n\n  waitPageActivityEnd(\n    lifeCycle,\n    domMutationObservable,\n    configuration,\n    (pageActivityEndEvent) => {\n      hadActivityOnPointerDown = pageActivityEndEvent.hadActivity\n    },\n    // We don't care about the activity duration, we just want to know whether an activity did happen\n    // within the \"validation delay\" or not. Limit the duration so the callback is called sooner.\n    PAGE_ACTIVITY_VALIDATION_DELAY\n  )\n\n  return { clickActionBase, hadActivityOnPointerDown: () => hadActivityOnPointerDown }\n}\n\nfunction startClickAction(\n  configuration: RumConfiguration,\n  lifeCycle: LifeCycle,\n  domMutationObservable: Observable<void>,\n  history: ClickActionIdHistory,\n  stopObservable: Observable<void>,\n  appendClickToClickChain: (click: Click) => void,\n  clickActionBase: ClickActionBase,\n  startEvent: MouseEventOnElement,\n  getUserActivity: () => UserActivity,\n  hadActivityOnPointerDown: () => boolean\n) {\n  const click = newClick(lifeCycle, history, getUserActivity, clickActionBase, startEvent)\n\n  if (configuration.trackFrustrations) {\n    appendClickToClickChain(click)\n  }\n\n  const { stop: stopWaitPageActivityEnd } = waitPageActivityEnd(\n    lifeCycle,\n    domMutationObservable,\n    configuration,\n    (pageActivityEndEvent) => {\n      if (pageActivityEndEvent.hadActivity && pageActivityEndEvent.end < click.startClocks.timeStamp) {\n        // If the clock is looking weird, just discard the click\n        click.discard()\n      } else {\n        if (pageActivityEndEvent.hadActivity) {\n          click.stop(pageActivityEndEvent.end)\n        } else if (hadActivityOnPointerDown()) {\n          click.stop(\n            // using the click start as activity end, so the click will have some activity but its\n            // duration will be 0 (as the activity started before the click start)\n            click.startClocks.timeStamp\n          )\n        } else {\n          click.stop()\n        }\n\n        // Validate or discard the click only if we don't track frustrations. It'll be done when\n        // the click chain is finalized.\n        if (!configuration.trackFrustrations) {\n          if (!pageActivityEndEvent.hadActivity) {\n            // If we are not tracking frustrations, we should discard the click to keep backward\n            // compatibility.\n            click.discard()\n          } else {\n            click.validate()\n          }\n        }\n      }\n    },\n    CLICK_ACTION_MAX_DURATION\n  )\n\n  const viewEndedSubscription = lifeCycle.subscribe(LifeCycleEventType.VIEW_ENDED, ({ endClocks }) => {\n    click.stop(endClocks.timeStamp)\n  })\n\n  const stopSubscription = stopObservable.subscribe(() => {\n    click.stop()\n  })\n\n  click.stopObservable.subscribe(() => {\n    viewEndedSubscription.unsubscribe()\n    stopWaitPageActivityEnd()\n    stopSubscription.unsubscribe()\n  })\n}\n\ntype ClickActionBase = Pick<ClickAction, 'type' | 'name' | 'target' | 'position'>\n\nfunction computeClickActionBase(event: MouseEventOnElement, actionNameAttribute?: string): ClickActionBase {\n  const rect = event.target.getBoundingClientRect()\n  return {\n    type: ActionType.CLICK,\n    target: {\n      width: Math.round(rect.width),\n      height: Math.round(rect.height),\n      selector: getSelectorFromElement(event.target, actionNameAttribute),\n    },\n    position: {\n      // Use clientX and Y because for SVG element offsetX and Y are relatives to the <svg> element\n      x: Math.round(event.clientX - rect.left),\n      y: Math.round(event.clientY - rect.top),\n    },\n    name: getActionNameFromElement(event.target, actionNameAttribute),\n  }\n}\n\nconst enum ClickStatus {\n  // Initial state, the click is still ongoing.\n  ONGOING,\n  // The click is no more ongoing but still needs to be validated or discarded.\n  STOPPED,\n  // Final state, the click has been stopped and validated or discarded.\n  FINALIZED,\n}\n\nexport type Click = ReturnType<typeof newClick>\n\nfunction newClick(\n  lifeCycle: LifeCycle,\n  history: ClickActionIdHistory,\n  getUserActivity: () => UserActivity,\n  clickActionBase: ClickActionBase,\n  startEvent: MouseEventOnElement\n) {\n  const id = generateUUID()\n  const startClocks = clocksNow()\n  const historyEntry = history.add(id, startClocks.relative)\n  const eventCountsSubscription = trackEventCounts({\n    lifeCycle,\n    isChildEvent: (event) =>\n      event.action !== undefined &&\n      (Array.isArray(event.action.id) ? includes(event.action.id, id) : event.action.id === id),\n  })\n  let status = ClickStatus.ONGOING\n  let activityEndTime: undefined | TimeStamp\n  const frustrationTypes: FrustrationType[] = []\n  const stopObservable = new Observable<void>()\n\n  function stop(newActivityEndTime?: TimeStamp) {\n    if (status !== ClickStatus.ONGOING) {\n      return\n    }\n    activityEndTime = newActivityEndTime\n    status = ClickStatus.STOPPED\n    if (activityEndTime) {\n      historyEntry.close(getRelativeTime(activityEndTime))\n    } else {\n      historyEntry.remove()\n    }\n    eventCountsSubscription.stop()\n    stopObservable.notify()\n  }\n\n  return {\n    event: startEvent,\n    stop,\n    stopObservable,\n\n    get hasError() {\n      return eventCountsSubscription.eventCounts.errorCount > 0\n    },\n    get hasPageActivity() {\n      return activityEndTime !== undefined\n    },\n    getUserActivity,\n    addFrustration: (frustrationType: FrustrationType) => {\n      frustrationTypes.push(frustrationType)\n    },\n    startClocks,\n\n    isStopped: () => status === ClickStatus.STOPPED || status === ClickStatus.FINALIZED,\n\n    clone: () => newClick(lifeCycle, history, getUserActivity, clickActionBase, startEvent),\n\n    validate: (domEvents?: Event[]) => {\n      stop()\n      if (status !== ClickStatus.STOPPED) {\n        return\n      }\n\n      const { resourceCount, errorCount, longTaskCount } = eventCountsSubscription.eventCounts\n      const clickAction: ClickAction = assign(\n        {\n          type: ActionType.CLICK as const,\n          duration: activityEndTime && elapsed(startClocks.timeStamp, activityEndTime),\n          startClocks,\n          id,\n          frustrationTypes,\n          counts: {\n            resourceCount,\n            errorCount,\n            longTaskCount,\n          },\n          events: domEvents ?? [startEvent],\n          event: startEvent,\n        },\n        clickActionBase\n      )\n      lifeCycle.notify(LifeCycleEventType.AUTO_ACTION_COMPLETED, clickAction)\n      status = ClickStatus.FINALIZED\n    },\n\n    discard: () => {\n      stop()\n      status = ClickStatus.FINALIZED\n    },\n  }\n}\n\nexport function finalizeClicks(clicks: Click[], rageClick: Click) {\n  const { isRage } = computeFrustration(clicks, rageClick)\n  if (isRage) {\n    clicks.forEach((click) => click.discard())\n    rageClick.stop(timeStampNow())\n    rageClick.validate(clicks.map((click) => click.event))\n  } else {\n    rageClick.discard()\n    clicks.forEach((click) => click.validate())\n  }\n}\n","import type { ClocksState, Context, Observable } from '@datadog/browser-core'\nimport { noop, assign, combine, toServerDuration, generateUUID } from '@datadog/browser-core'\n\nimport type { RawRumActionEvent } from '../../../rawRumEvent.types'\nimport { ActionType, RumEventType } from '../../../rawRumEvent.types'\nimport type { LifeCycle, RawRumEventCollectedData } from '../../lifeCycle'\nimport { LifeCycleEventType } from '../../lifeCycle'\nimport type { RumConfiguration } from '../../configuration'\nimport type { CommonContext } from '../../contexts/commonContext'\nimport type { PageStateHistory } from '../../contexts/pageStateHistory'\nimport type { ActionContexts, ClickAction } from './trackClickActions'\nimport { trackClickActions } from './trackClickActions'\n\nexport type { ActionContexts }\n\nexport interface CustomAction {\n  type: ActionType.CUSTOM\n  name: string\n  startClocks: ClocksState\n  context?: Context\n}\n\nexport type AutoAction = ClickAction\n\nexport function startActionCollection(\n  lifeCycle: LifeCycle,\n  domMutationObservable: Observable<void>,\n  configuration: RumConfiguration,\n  pageStateHistory: PageStateHistory\n) {\n  lifeCycle.subscribe(LifeCycleEventType.AUTO_ACTION_COMPLETED, (action) =>\n    lifeCycle.notify(LifeCycleEventType.RAW_RUM_EVENT_COLLECTED, processAction(action, pageStateHistory))\n  )\n\n  let actionContexts: ActionContexts = { findActionId: noop as () => undefined }\n  if (configuration.trackUserInteractions) {\n    actionContexts = trackClickActions(lifeCycle, domMutationObservable, configuration).actionContexts\n  }\n\n  return {\n    addAction: (action: CustomAction, savedCommonContext?: CommonContext) => {\n      lifeCycle.notify(\n        LifeCycleEventType.RAW_RUM_EVENT_COLLECTED,\n        assign(\n          {\n            savedCommonContext,\n          },\n          processAction(action, pageStateHistory)\n        )\n      )\n    },\n    actionContexts,\n  }\n}\n\nfunction processAction(\n  action: AutoAction | CustomAction,\n  pageStateHistory: PageStateHistory\n): RawRumEventCollectedData<RawRumActionEvent> {\n  const autoActionProperties = isAutoAction(action)\n    ? {\n        action: {\n          id: action.id,\n          loading_time: toServerDuration(action.duration),\n          frustration: {\n            type: action.frustrationTypes,\n          },\n          error: {\n            count: action.counts.errorCount,\n          },\n          long_task: {\n            count: action.counts.longTaskCount,\n          },\n          resource: {\n            count: action.counts.resourceCount,\n          },\n        },\n        _dd: {\n          action: {\n            target: action.target,\n            position: action.position,\n          },\n        },\n      }\n    : undefined\n  const customerContext = !isAutoAction(action) ? action.context : undefined\n  const actionEvent: RawRumActionEvent = combine(\n    {\n      action: {\n        id: generateUUID(),\n        target: {\n          name: action.name,\n        },\n        type: action.type,\n      },\n      date: action.startClocks.timeStamp,\n      type: RumEventType.ACTION as const,\n      view: { in_foreground: pageStateHistory.isInActivePageStateAt(action.startClocks.relative) },\n    },\n    autoActionProperties\n  )\n\n  return {\n    customerContext,\n    rawRumEvent: actionEvent,\n    startTime: action.startClocks.relative,\n    domainContext: isAutoAction(action) ? { event: action.event, events: action.events } : {},\n  }\n}\n\nfunction isAutoAction(action: AutoAction | CustomAction): action is AutoAction {\n  return action.type !== ActionType.CUSTOM\n}\n","import { instrumentMethodAndCallOriginal } from '../../tools/instrumentMethod'\nimport { computeStackTrace } from './computeStackTrace'\nimport type { UnhandledErrorCallback, StackTrace } from './types'\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Error_types\nconst ERROR_TYPES_RE =\n  /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?([\\s\\S]*)$/\n\n/**\n * Cross-browser collection of unhandled errors\n *\n * Supports:\n * - Firefox: full stack trace with line numbers, plus column number\n * on top frame; column number is not guaranteed\n * - Opera: full stack trace with line and column numbers\n * - Chrome: full stack trace with line and column numbers\n * - Safari: line and column number for the top frame only; some frames\n * may be missing, and column number is not guaranteed\n * - IE: line and column number for the top frame only; some frames\n * may be missing, and column number is not guaranteed\n *\n * In theory, TraceKit should work on all of the following versions:\n * - IE5.5+ (only 8.0 tested)\n * - Firefox 0.9+ (only 3.5+ tested)\n * - Opera 7+ (only 10.50 tested; versions 9 and earlier may require\n * Exceptions Have Stacktrace to be enabled in opera:config)\n * - Safari 3+ (only 4+ tested)\n * - Chrome 1+ (only 5+ tested)\n * - Konqueror 3.5+ (untested)\n *\n * Tries to catch all unhandled errors and report them to the\n * callback.\n *\n * Callbacks receive a StackTrace object as described in the\n * computeStackTrace docs.\n *\n * @memberof TraceKit\n * @namespace\n */\n\nexport function startUnhandledErrorCollection(callback: UnhandledErrorCallback) {\n  const { stop: stopInstrumentingOnError } = instrumentOnError(callback)\n  const { stop: stopInstrumentingOnUnhandledRejection } = instrumentUnhandledRejection(callback)\n\n  return {\n    stop: () => {\n      stopInstrumentingOnError()\n      stopInstrumentingOnUnhandledRejection()\n    },\n  }\n}\n\n/**\n * Install a global onerror handler\n */\nfunction instrumentOnError(callback: UnhandledErrorCallback) {\n  return instrumentMethodAndCallOriginal(window, 'onerror', {\n    before(this: any, messageObj: unknown, url?: string, line?: number, column?: number, errorObj?: unknown) {\n      let stackTrace: StackTrace\n      if (errorObj instanceof Error) {\n        stackTrace = computeStackTrace(errorObj)\n      } else {\n        const stack = [{ url, column, line }]\n        const { name, message } = tryToParseMessage(messageObj)\n        stackTrace = {\n          name,\n          message,\n          stack,\n        }\n      }\n      callback(stackTrace, errorObj ?? messageObj)\n    },\n  })\n}\n\nfunction tryToParseMessage(messageObj: unknown) {\n  let name\n  let message\n  if ({}.toString.call(messageObj) === '[object String]') {\n    ;[, name, message] = ERROR_TYPES_RE.exec(messageObj as string)!\n  }\n  return { name, message }\n}\n\n/**\n * Install a global onunhandledrejection handler\n */\nfunction instrumentUnhandledRejection(callback: UnhandledErrorCallback) {\n  return instrumentMethodAndCallOriginal(window, 'onunhandledrejection', {\n    before(e: PromiseRejectionEvent) {\n      const reason = e.reason || 'Empty reason'\n      const stack = computeStackTrace(reason)\n      callback(stack, reason)\n    },\n  })\n}\n","import { computeStackTrace } from '../tracekit'\nimport { createHandlingStack, formatErrorMessage, toStackTraceString, tryToGetFingerprint } from '../error/error'\nimport { mergeObservables, Observable } from '../../tools/observable'\nimport { ConsoleApiName, globalConsole } from '../../tools/display'\nimport { callMonitored } from '../../tools/monitor'\nimport { sanitize } from '../../tools/serialisation/sanitize'\nimport { find } from '../../tools/utils/polyfills'\nimport { jsonStringify } from '../../tools/serialisation/jsonStringify'\n\nexport interface ConsoleLog {\n  message: string\n  api: ConsoleApiName\n  stack?: string\n  handlingStack?: string\n  fingerprint?: string\n}\n\nlet consoleObservablesByApi: { [k in ConsoleApiName]?: Observable<ConsoleLog> } = {}\n\nexport function initConsoleObservable(apis: ConsoleApiName[]) {\n  const consoleObservables = apis.map((api) => {\n    if (!consoleObservablesByApi[api]) {\n      consoleObservablesByApi[api] = createConsoleObservable(api)\n    }\n    return consoleObservablesByApi[api]!\n  })\n\n  return mergeObservables<ConsoleLog>(...consoleObservables)\n}\n\nexport function resetConsoleObservable() {\n  consoleObservablesByApi = {}\n}\n\nfunction createConsoleObservable(api: ConsoleApiName) {\n  const observable = new Observable<ConsoleLog>(() => {\n    const originalConsoleApi = globalConsole[api]\n\n    globalConsole[api] = (...params: unknown[]) => {\n      originalConsoleApi.apply(console, params)\n      const handlingStack = createHandlingStack()\n\n      callMonitored(() => {\n        observable.notify(buildConsoleLog(params, api, handlingStack))\n      })\n    }\n\n    return () => {\n      globalConsole[api] = originalConsoleApi\n    }\n  })\n\n  return observable\n}\n\nfunction buildConsoleLog(params: unknown[], api: ConsoleApiName, handlingStack: string): ConsoleLog {\n  // Todo: remove console error prefix in the next major version\n  let message = params.map((param) => formatConsoleParameters(param)).join(' ')\n  let stack\n  let fingerprint\n\n  if (api === ConsoleApiName.error) {\n    const firstErrorParam = find(params, (param: unknown): param is Error => param instanceof Error)\n    stack = firstErrorParam ? toStackTraceString(computeStackTrace(firstErrorParam)) : undefined\n    fingerprint = tryToGetFingerprint(firstErrorParam)\n    message = `console error: ${message}`\n  }\n\n  return {\n    api,\n    message,\n    stack,\n    handlingStack,\n    fingerprint,\n  }\n}\n\nfunction formatConsoleParameters(param: unknown) {\n  if (typeof param === 'string') {\n    return sanitize(param)\n  }\n  if (param instanceof Error) {\n    return formatErrorMessage(computeStackTrace(param))\n  }\n  return jsonStringify(sanitize(param), undefined, 2)\n}\n","import { toStackTraceString } from '../error/error'\nimport { monitor } from '../../tools/monitor'\nimport { mergeObservables, Observable } from '../../tools/observable'\nimport { addEventListener, DOM_EVENT } from '../../browser/addEventListener'\nimport { includes } from '../../tools/utils/polyfills'\nimport { safeTruncate } from '../../tools/utils/stringUtils'\nimport type { ReportType, InterventionReport, DeprecationReport } from './browser.types'\n\nexport const RawReportType = {\n  intervention: 'intervention',\n  deprecation: 'deprecation',\n  cspViolation: 'csp_violation',\n} as const\n\nexport type RawReportType = (typeof RawReportType)[keyof typeof RawReportType]\n\nexport interface RawReport {\n  type: RawReportType\n  subtype: string\n  message: string\n  stack?: string\n}\n\nexport function initReportObservable(apis: RawReportType[]) {\n  const observables: Array<Observable<RawReport>> = []\n\n  if (includes(apis, RawReportType.cspViolation)) {\n    observables.push(createCspViolationReportObservable())\n  }\n\n  const reportTypes = apis.filter((api: RawReportType): api is ReportType => api !== RawReportType.cspViolation)\n  if (reportTypes.length) {\n    observables.push(createReportObservable(reportTypes))\n  }\n\n  return mergeObservables<RawReport>(...observables)\n}\n\nfunction createReportObservable(reportTypes: ReportType[]) {\n  const observable = new Observable<RawReport>(() => {\n    if (!window.ReportingObserver) {\n      return\n    }\n\n    const handleReports = monitor((reports: Array<DeprecationReport | InterventionReport>, _: ReportingObserver) =>\n      reports.forEach((report) => {\n        observable.notify(buildRawReportFromReport(report))\n      })\n    ) as ReportingObserverCallback\n\n    const observer = new window.ReportingObserver(handleReports, {\n      types: reportTypes,\n      buffered: true,\n    })\n\n    observer.observe()\n    return () => {\n      observer.disconnect()\n    }\n  })\n\n  return observable\n}\n\nfunction createCspViolationReportObservable() {\n  const observable = new Observable<RawReport>(() => {\n    const { stop } = addEventListener(document, DOM_EVENT.SECURITY_POLICY_VIOLATION, (event) => {\n      observable.notify(buildRawReportFromCspViolation(event))\n    })\n\n    return stop\n  })\n  return observable\n}\n\nfunction buildRawReportFromReport({ type, body }: DeprecationReport | InterventionReport): RawReport {\n  return {\n    type,\n    subtype: body.id,\n    message: `${type}: ${body.message}`,\n    stack: buildStack(body.id, body.message, body.sourceFile, body.lineNumber, body.columnNumber),\n  }\n}\n\nfunction buildRawReportFromCspViolation(event: SecurityPolicyViolationEvent): RawReport {\n  const type = RawReportType.cspViolation\n  const message = `'${event.blockedURI}' blocked by '${event.effectiveDirective}' directive`\n  return {\n    type: RawReportType.cspViolation,\n    subtype: event.effectiveDirective,\n    message: `${type}: ${message}`,\n    stack: buildStack(\n      event.effectiveDirective,\n      event.originalPolicy\n        ? `${message} of the policy \"${safeTruncate(event.originalPolicy, 100, '...')}\"`\n        : 'no policy',\n      event.sourceFile,\n      event.lineNumber,\n      event.columnNumber\n    ),\n  }\n}\n\nfunction buildStack(\n  name: string,\n  message: string,\n  sourceFile: string | null,\n  lineNumber: number | null,\n  columnNumber: number | null\n): string | undefined {\n  return sourceFile\n    ? toStackTraceString({\n        name,\n        message,\n        stack: [\n          {\n            func: '?',\n            url: sourceFile,\n            line: lineNumber ?? undefined,\n            column: columnNumber ?? undefined,\n          },\n        ],\n      })\n    : undefined\n}\n","import type { RelativeTime } from '@datadog/browser-core'\nimport { addEventListeners, DOM_EVENT } from '@datadog/browser-core'\n\nlet trackFirstHiddenSingleton: { timeStamp: RelativeTime } | undefined\nlet stopListeners: (() => void) | undefined\n\nexport function trackFirstHidden(eventTarget: Window = window) {\n  if (!trackFirstHiddenSingleton) {\n    if (document.visibilityState === 'hidden') {\n      trackFirstHiddenSingleton = {\n        timeStamp: 0 as RelativeTime,\n      }\n    } else {\n      trackFirstHiddenSingleton = {\n        timeStamp: Infinity as RelativeTime,\n      }\n      ;({ stop: stopListeners } = addEventListeners(\n        eventTarget,\n        [DOM_EVENT.PAGE_HIDE, DOM_EVENT.VISIBILITY_CHANGE],\n        (event) => {\n          if (event.type === 'pagehide' || document.visibilityState === 'hidden') {\n            trackFirstHiddenSingleton!.timeStamp = event.timeStamp as RelativeTime\n            stopListeners!()\n          }\n        },\n        { capture: true }\n      ))\n    }\n  }\n\n  return trackFirstHiddenSingleton\n}\n\nexport function resetFirstHidden() {\n  if (stopListeners) {\n    stopListeners()\n  }\n  trackFirstHiddenSingleton = undefined\n}\n","import type { Context, RawError, ClocksState } from '@datadog/browser-core'\nimport {\n  isEmptyObject,\n  assign,\n  ErrorSource,\n  generateUUID,\n  computeRawError,\n  ErrorHandling,\n  computeStackTrace,\n  Observable,\n  trackRuntimeError,\n  NonErrorPrefix,\n} from '@datadog/browser-core'\nimport type { RawRumErrorEvent } from '../../../rawRumEvent.types'\nimport { RumEventType } from '../../../rawRumEvent.types'\nimport type { LifeCycle, RawRumEventCollectedData } from '../../lifeCycle'\nimport { LifeCycleEventType } from '../../lifeCycle'\nimport type { FeatureFlagContexts } from '../../contexts/featureFlagContext'\nimport type { CommonContext } from '../../contexts/commonContext'\nimport type { PageStateHistory } from '../../contexts/pageStateHistory'\nimport { trackConsoleError } from './trackConsoleError'\nimport { trackReportError } from './trackReportError'\n\nexport interface ProvidedError {\n  startClocks: ClocksState\n  error: unknown\n  context?: Context\n  handlingStack: string\n}\n\nexport function startErrorCollection(\n  lifeCycle: LifeCycle,\n  pageStateHistory: PageStateHistory,\n  featureFlagContexts: FeatureFlagContexts\n) {\n  const errorObservable = new Observable<RawError>()\n\n  trackConsoleError(errorObservable)\n  trackRuntimeError(errorObservable)\n  trackReportError(errorObservable)\n\n  errorObservable.subscribe((error) => lifeCycle.notify(LifeCycleEventType.RAW_ERROR_COLLECTED, { error }))\n\n  return doStartErrorCollection(lifeCycle, pageStateHistory, featureFlagContexts)\n}\n\nexport function doStartErrorCollection(\n  lifeCycle: LifeCycle,\n  pageStateHistory: PageStateHistory,\n  featureFlagContexts: FeatureFlagContexts\n) {\n  lifeCycle.subscribe(LifeCycleEventType.RAW_ERROR_COLLECTED, ({ error, customerContext, savedCommonContext }) => {\n    lifeCycle.notify(\n      LifeCycleEventType.RAW_RUM_EVENT_COLLECTED,\n      assign(\n        {\n          customerContext,\n          savedCommonContext,\n        },\n        processError(error, pageStateHistory, featureFlagContexts)\n      )\n    )\n  })\n\n  return {\n    addError: (\n      { error, handlingStack, startClocks, context: customerContext }: ProvidedError,\n      savedCommonContext?: CommonContext\n    ) => {\n      const stackTrace = error instanceof Error ? computeStackTrace(error) : undefined\n      const rawError = computeRawError({\n        stackTrace,\n        originalError: error,\n        handlingStack,\n        startClocks,\n        nonErrorPrefix: NonErrorPrefix.PROVIDED,\n        source: ErrorSource.CUSTOM,\n        handling: ErrorHandling.HANDLED,\n      })\n\n      lifeCycle.notify(LifeCycleEventType.RAW_ERROR_COLLECTED, {\n        customerContext,\n        savedCommonContext,\n        error: rawError,\n      })\n    },\n  }\n}\n\nfunction processError(\n  error: RawError,\n  pageStateHistory: PageStateHistory,\n  featureFlagContexts: FeatureFlagContexts\n): RawRumEventCollectedData<RawRumErrorEvent> {\n  const rawRumEvent: RawRumErrorEvent = {\n    date: error.startClocks.timeStamp,\n    error: {\n      id: generateUUID(),\n      message: error.message,\n      source: error.source,\n      stack: error.stack,\n      handling_stack: error.handlingStack,\n      type: error.type,\n      handling: error.handling,\n      causes: error.causes,\n      source_type: 'browser',\n      fingerprint: error.fingerprint,\n    },\n    type: RumEventType.ERROR as const,\n    view: { in_foreground: pageStateHistory.isInActivePageStateAt(error.startClocks.relative) },\n  }\n\n  const featureFlagContext = featureFlagContexts.findFeatureFlagEvaluations(error.startClocks.relative)\n  if (featureFlagContext && !isEmptyObject(featureFlagContext)) {\n    rawRumEvent.feature_flags = featureFlagContext\n  }\n\n  return {\n    rawRumEvent,\n    startTime: error.startClocks.relative,\n    domainContext: {\n      error: error.originalError,\n    },\n  }\n}\n","import type { Observable, RawError } from '@datadog/browser-core'\nimport { clocksNow, ErrorHandling, initConsoleObservable, ErrorSource, ConsoleApiName } from '@datadog/browser-core'\n\nexport function trackConsoleError(errorObservable: Observable<RawError>) {\n  const subscription = initConsoleObservable([ConsoleApiName.error]).subscribe((consoleError) =>\n    errorObservable.notify({\n      startClocks: clocksNow(),\n      message: consoleError.message,\n      stack: consoleError.stack,\n      fingerprint: consoleError.fingerprint,\n      source: ErrorSource.CONSOLE,\n      handling: ErrorHandling.HANDLED,\n      handlingStack: consoleError.handlingStack,\n    })\n  )\n\n  return {\n    stop: () => {\n      subscription.unsubscribe()\n    },\n  }\n}\n","import type { Observable } from '../../tools/observable'\nimport { clocksNow } from '../../tools/utils/timeUtils'\nimport { startUnhandledErrorCollection } from '../tracekit'\nimport { computeRawError } from './error'\nimport type { RawError } from './error.types'\nimport { ErrorHandling, ErrorSource, NonErrorPrefix } from './error.types'\n\nexport function trackRuntimeError(errorObservable: Observable<RawError>) {\n  return startUnhandledErrorCollection((stackTrace, originalError) => {\n    errorObservable.notify(\n      computeRawError({\n        stackTrace,\n        originalError,\n        startClocks: clocksNow(),\n        nonErrorPrefix: NonErrorPrefix.UNCAUGHT,\n        source: ErrorSource.SOURCE,\n        handling: ErrorHandling.UNHANDLED,\n      })\n    )\n  })\n}\n","import type { Observable, RawError } from '@datadog/browser-core'\nimport { clocksNow, ErrorHandling, ErrorSource, initReportObservable, RawReportType } from '@datadog/browser-core'\n\nexport function trackReportError(errorObservable: Observable<RawError>) {\n  const subscription = initReportObservable([RawReportType.cspViolation, RawReportType.intervention]).subscribe(\n    (reportError) =>\n      errorObservable.notify({\n        startClocks: clocksNow(),\n        message: reportError.message,\n        stack: reportError.stack,\n        type: reportError.subtype,\n        source: ErrorSource.REPORT,\n        handling: ErrorHandling.UNHANDLED,\n      })\n  )\n\n  return {\n    stop: () => {\n      subscription.unsubscribe()\n    },\n  }\n}\n","import type { Duration, RelativeTime } from '@datadog/browser-core'\nimport { addDuration } from '@datadog/browser-core'\nimport type { RumPerformanceResourceTiming } from '../../../browser/performanceCollection'\nimport type { RequestCompleteEvent } from '../../requestCollection'\nimport { toValidEntry } from './resourceUtils'\n\ninterface Timing {\n  startTime: RelativeTime\n  duration: Duration\n}\n\n/**\n * Look for corresponding timing in resource timing buffer\n *\n * Observations:\n * - Timing (start, end) are nested inside the request (start, end)\n * - Some timing can be not exactly nested, being off by < 1 ms\n *\n * Strategy:\n * - from valid nested entries (with 1 ms error margin)\n * - if a single timing match, return the timing\n * - otherwise we can't decide, return undefined\n */\nexport function matchRequestTiming(request: RequestCompleteEvent) {\n  if (!performance || !('getEntriesByName' in performance)) {\n    return\n  }\n  const sameNameEntries = performance.getEntriesByName(request.url, 'resource')\n\n  if (!sameNameEntries.length || !('toJSON' in sameNameEntries[0])) {\n    return\n  }\n\n  const candidates = sameNameEntries\n    .map((entry) => entry.toJSON() as RumPerformanceResourceTiming)\n    .filter(toValidEntry)\n    .filter((entry) =>\n      isBetween(\n        entry,\n        request.startClocks.relative,\n        endTime({ startTime: request.startClocks.relative, duration: request.duration })\n      )\n    )\n\n  if (candidates.length === 1) {\n    return candidates[0]\n  }\n\n  return\n}\n\nfunction endTime(timing: Timing) {\n  return addDuration(timing.startTime, timing.duration)\n}\n\nfunction isBetween(timing: Timing, start: RelativeTime, end: RelativeTime) {\n  const errorMargin = 1 as Duration\n  return timing.startTime >= start - errorMargin && endTime(timing) <= addDuration(end, errorMargin)\n}\n","import {\n  combine,\n  generateUUID,\n  RequestType,\n  ResourceType,\n  toServerDuration,\n  relativeToClocks,\n  assign,\n  isNumber,\n  isExperimentalFeatureEnabled,\n  ExperimentalFeature,\n} from '@datadog/browser-core'\nimport type { ClocksState, Duration } from '@datadog/browser-core'\nimport type { RumConfiguration } from '../../configuration'\nimport type { RumPerformanceEntry, RumPerformanceResourceTiming } from '../../../browser/performanceCollection'\nimport type {\n  PerformanceEntryRepresentation,\n  RumXhrResourceEventDomainContext,\n  RumFetchResourceEventDomainContext,\n} from '../../../domainContext.types'\nimport type { RawRumResourceEvent } from '../../../rawRumEvent.types'\nimport { RumEventType } from '../../../rawRumEvent.types'\nimport type { LifeCycle, RawRumEventCollectedData } from '../../lifeCycle'\nimport { LifeCycleEventType } from '../../lifeCycle'\nimport type { RequestCompleteEvent } from '../../requestCollection'\nimport type { RumSessionManager } from '../../rumSessionManager'\nimport type { PageStateHistory } from '../../contexts/pageStateHistory'\nimport { PageState } from '../../contexts/pageStateHistory'\nimport { matchRequestTiming } from './matchRequestTiming'\nimport {\n  computePerformanceResourceDetails,\n  computePerformanceResourceDuration,\n  computeResourceKind,\n  computeSize,\n  isRequestKind,\n} from './resourceUtils'\n\nexport function startResourceCollection(\n  lifeCycle: LifeCycle,\n  configuration: RumConfiguration,\n  sessionManager: RumSessionManager,\n  pageStateHistory: PageStateHistory\n) {\n  lifeCycle.subscribe(LifeCycleEventType.REQUEST_COMPLETED, (request: RequestCompleteEvent) => {\n    lifeCycle.notify(\n      LifeCycleEventType.RAW_RUM_EVENT_COLLECTED,\n      processRequest(request, configuration, sessionManager, pageStateHistory)\n    )\n  })\n\n  lifeCycle.subscribe(LifeCycleEventType.PERFORMANCE_ENTRIES_COLLECTED, (entries) => {\n    for (const entry of entries) {\n      if (entry.entryType === 'resource' && !isRequestKind(entry)) {\n        lifeCycle.notify(\n          LifeCycleEventType.RAW_RUM_EVENT_COLLECTED,\n          processResourceEntry(entry, configuration, sessionManager, pageStateHistory)\n        )\n      }\n    }\n  })\n}\n\nfunction processRequest(\n  request: RequestCompleteEvent,\n  configuration: RumConfiguration,\n  sessionManager: RumSessionManager,\n  pageStateHistory: PageStateHistory\n): RawRumEventCollectedData<RawRumResourceEvent> {\n  const type = request.type === RequestType.XHR ? ResourceType.XHR : ResourceType.FETCH\n\n  const matchingTiming = matchRequestTiming(request)\n  const startClocks = matchingTiming ? relativeToClocks(matchingTiming.startTime) : request.startClocks\n  const correspondingTimingOverrides = matchingTiming ? computePerformanceEntryMetrics(matchingTiming) : undefined\n\n  const tracingInfo = computeRequestTracingInfo(request, configuration)\n  const indexingInfo = computeIndexingInfo(sessionManager, startClocks)\n\n  const duration = computeRequestDuration(pageStateHistory, startClocks, request.duration)\n  const pageStateInfo = computePageStateInfo(\n    pageStateHistory,\n    startClocks,\n    matchingTiming?.duration ?? request.duration\n  )\n\n  const resourceEvent = combine(\n    {\n      date: startClocks.timeStamp,\n      resource: {\n        id: generateUUID(),\n        type,\n        duration,\n        method: request.method,\n        status_code: request.status,\n        url: request.url,\n      },\n      type: RumEventType.RESOURCE as const,\n    },\n    tracingInfo,\n    correspondingTimingOverrides,\n    indexingInfo,\n    pageStateInfo\n  )\n\n  return {\n    startTime: startClocks.relative,\n    rawRumEvent: resourceEvent,\n    domainContext: {\n      performanceEntry: matchingTiming && toPerformanceEntryRepresentation(matchingTiming),\n      xhr: request.xhr,\n      response: request.response,\n      requestInput: request.input,\n      requestInit: request.init,\n      error: request.error,\n    } as RumFetchResourceEventDomainContext | RumXhrResourceEventDomainContext,\n  }\n}\n\nfunction processResourceEntry(\n  entry: RumPerformanceResourceTiming,\n  configuration: RumConfiguration,\n  sessionManager: RumSessionManager,\n  pageStateHistory: PageStateHistory\n): RawRumEventCollectedData<RawRumResourceEvent> {\n  const type = computeResourceKind(entry)\n  const entryMetrics = computePerformanceEntryMetrics(entry)\n  const startClocks = relativeToClocks(entry.startTime)\n\n  const tracingInfo = computeEntryTracingInfo(entry, configuration)\n  const indexingInfo = computeIndexingInfo(sessionManager, startClocks)\n  const pageStateInfo = computePageStateInfo(pageStateHistory, startClocks, entry.duration)\n\n  const resourceEvent = combine(\n    {\n      date: startClocks.timeStamp,\n      resource: {\n        id: generateUUID(),\n        type,\n        url: entry.name,\n      },\n      type: RumEventType.RESOURCE as const,\n    },\n    tracingInfo,\n    entryMetrics,\n    indexingInfo,\n    pageStateInfo\n  )\n  return {\n    startTime: startClocks.relative,\n    rawRumEvent: resourceEvent,\n    domainContext: {\n      performanceEntry: toPerformanceEntryRepresentation(entry),\n    },\n  }\n}\n\nfunction computePerformanceEntryMetrics(timing: RumPerformanceResourceTiming) {\n  return {\n    resource: assign(\n      {\n        duration: computePerformanceResourceDuration(timing),\n        size: computeSize(timing),\n      },\n      computePerformanceResourceDetails(timing)\n    ),\n  }\n}\n\nfunction computeRequestTracingInfo(request: RequestCompleteEvent, configuration: RumConfiguration) {\n  const hasBeenTraced = request.traceSampled && request.traceId && request.spanId\n  if (!hasBeenTraced) {\n    return undefined\n  }\n  return {\n    _dd: {\n      span_id: request.spanId!.toDecimalString(),\n      trace_id: request.traceId!.toDecimalString(),\n      rule_psr: getRulePsr(configuration),\n    },\n  }\n}\n\nfunction computeEntryTracingInfo(entry: RumPerformanceResourceTiming, configuration: RumConfiguration) {\n  const hasBeenTraced = entry.traceId\n  if (!hasBeenTraced) {\n    return undefined\n  }\n  return {\n    _dd: {\n      trace_id: entry.traceId,\n      rule_psr: getRulePsr(configuration),\n    },\n  }\n}\n\n// TODO next major: use directly PerformanceEntry type in domain context\nfunction toPerformanceEntryRepresentation(entry: RumPerformanceEntry): PerformanceEntryRepresentation {\n  return entry as PerformanceEntryRepresentation\n}\n\n/**\n * @returns number between 0 and 1 which represents trace sample rate\n */\nfunction getRulePsr(configuration: RumConfiguration) {\n  return isNumber(configuration.traceSampleRate) ? configuration.traceSampleRate / 100 : undefined\n}\n\nfunction computeIndexingInfo(sessionManager: RumSessionManager, resourceStart: ClocksState) {\n  const session = sessionManager.findTrackedSession(resourceStart.relative)\n  return {\n    _dd: {\n      discarded: !session || !session.resourceAllowed,\n    },\n  }\n}\n\nfunction computePageStateInfo(pageStateHistory: PageStateHistory, startClocks: ClocksState, duration: Duration) {\n  if (!isExperimentalFeatureEnabled(ExperimentalFeature.RESOURCE_PAGE_STATES)) {\n    return\n  }\n\n  return {\n    _dd: {\n      page_states: pageStateHistory.findAll(startClocks.relative, duration),\n      page_was_discarded: String((document as any).wasDiscarded),\n    },\n  }\n}\n\nfunction computeRequestDuration(pageStateHistory: PageStateHistory, startClocks: ClocksState, duration: Duration) {\n  // TODO remove FF in next major\n  if (!isExperimentalFeatureEnabled(ExperimentalFeature.NO_RESOURCE_DURATION_FROZEN_STATE)) {\n    return toServerDuration(duration)\n  }\n\n  const requestCrossedFrozenState = pageStateHistory\n    .findAll(startClocks.relative, duration)\n    ?.some((pageState) => pageState.state === PageState.FROZEN)\n\n  return !requestCrossedFrozenState ? toServerDuration(duration) : undefined\n}\n","import type { RelativeTime, Duration, ServerDuration } from '@datadog/browser-core'\nimport { toServerDuration } from '@datadog/browser-core'\nimport type { InForegroundPeriod, PageStateServerEntry } from '../../rawRumEvent.types'\nimport { PageState } from './pageStateHistory'\n\nexport interface ForegroundPeriod {\n  start: RelativeTime\n  end?: RelativeTime\n}\n\n// Todo: Remove in the next major release\nexport function mapToForegroundPeriods(\n  pageStateServerEntries: PageStateServerEntry[],\n  duration: Duration\n): InForegroundPeriod[] {\n  const foregroundPeriods: InForegroundPeriod[] = []\n  for (let i = 0; i < pageStateServerEntries.length; i++) {\n    const current = pageStateServerEntries[i]\n    const next = pageStateServerEntries[i + 1]\n\n    if (current.state === PageState.ACTIVE) {\n      const start = current.start >= 0 ? current.start : (0 as ServerDuration)\n      const end = next ? next.start : toServerDuration(duration)\n      foregroundPeriods.push({\n        start,\n        duration: (end - start) as ServerDuration,\n      })\n    }\n  }\n\n  return foregroundPeriods\n}\n","import type { Duration, RelativeTime } from '@datadog/browser-core'\nimport {\n  setTimeout,\n  assign,\n  addEventListeners,\n  DOM_EVENT,\n  elapsed,\n  ONE_MINUTE,\n  find,\n  findLast,\n  relativeNow,\n} from '@datadog/browser-core'\n\nimport type { LifeCycle } from '../../lifeCycle'\nimport { LifeCycleEventType } from '../../lifeCycle'\nimport type {\n  RumFirstInputTiming,\n  RumLargestContentfulPaintTiming,\n  RumPerformancePaintTiming,\n} from '../../../browser/performanceCollection'\nimport { trackFirstHidden } from './trackFirstHidden'\nimport type { WebVitalTelemetryDebug } from './startWebVitalTelemetryDebug'\n\n// Discard LCP and FCP timings above a certain delay to avoid incorrect data\n// It happens in some cases like sleep mode or some browser implementations\nexport const TIMING_MAXIMUM_DELAY = 10 * ONE_MINUTE\n\n/**\n * The initial view can finish quickly, before some metrics can be produced (ex: before the page load\n * event, or the first input). Also, we don't want to trigger a view update indefinitely, to avoid\n * updates on views that ended a long time ago. Keep watching for metrics after the view ends for a\n * limited amount of time.\n */\nexport const KEEP_TRACKING_TIMINGS_AFTER_VIEW_DELAY = 5 * ONE_MINUTE\n\nexport interface Timings {\n  firstContentfulPaint?: Duration\n  firstByte?: Duration\n  domInteractive?: Duration\n  domContentLoaded?: Duration\n  domComplete?: Duration\n  loadEvent?: Duration\n  largestContentfulPaint?: Duration\n  firstInputDelay?: Duration\n  firstInputTime?: Duration\n}\n\nexport function trackInitialViewTimings(\n  lifeCycle: LifeCycle,\n  webVitalTelemetryDebug: WebVitalTelemetryDebug,\n  setLoadEvent: (loadEnd: Duration) => void,\n  scheduleViewUpdate: () => void\n) {\n  const timings: Timings = {}\n\n  function setTimings(newTimings: Partial<Timings>) {\n    assign(timings, newTimings)\n    scheduleViewUpdate()\n  }\n\n  const { stop: stopNavigationTracking } = trackNavigationTimings(lifeCycle, (newTimings) => {\n    setLoadEvent(newTimings.loadEvent)\n    setTimings(newTimings)\n  })\n  const { stop: stopFCPTracking } = trackFirstContentfulPaintTiming(lifeCycle, (firstContentfulPaint) =>\n    setTimings({ firstContentfulPaint })\n  )\n  const { stop: stopLCPTracking } = trackLargestContentfulPaintTiming(\n    lifeCycle,\n    window,\n    (largestContentfulPaint, lcpElement) => {\n      webVitalTelemetryDebug.addWebVitalTelemetryDebug('LCP', lcpElement, largestContentfulPaint)\n\n      setTimings({\n        largestContentfulPaint,\n      })\n    }\n  )\n\n  const { stop: stopFIDTracking } = trackFirstInputTimings(\n    lifeCycle,\n    ({ firstInputDelay, firstInputTime, firstInputTarget }) => {\n      webVitalTelemetryDebug.addWebVitalTelemetryDebug('FID', firstInputTarget, firstInputTime)\n\n      setTimings({\n        firstInputDelay,\n        firstInputTime,\n      })\n    }\n  )\n\n  function stop() {\n    stopNavigationTracking()\n    stopFCPTracking()\n    stopLCPTracking()\n    stopFIDTracking()\n  }\n\n  return {\n    stop,\n    timings,\n    scheduleStop: () => {\n      setTimeout(stop, KEEP_TRACKING_TIMINGS_AFTER_VIEW_DELAY)\n    },\n  }\n}\n\ninterface NavigationTimings {\n  domComplete: Duration\n  domContentLoaded: Duration\n  domInteractive: Duration\n  loadEvent: Duration\n  firstByte: Duration | undefined\n}\n\nexport function trackNavigationTimings(lifeCycle: LifeCycle, callback: (timings: NavigationTimings) => void) {\n  const { unsubscribe: stop } = lifeCycle.subscribe(LifeCycleEventType.PERFORMANCE_ENTRIES_COLLECTED, (entries) => {\n    for (const entry of entries) {\n      if (entry.entryType === 'navigation') {\n        callback({\n          domComplete: entry.domComplete,\n          domContentLoaded: entry.domContentLoadedEventEnd,\n          domInteractive: entry.domInteractive,\n          loadEvent: entry.loadEventEnd,\n          // In some cases the value reported is negative or is larger\n          // than the current page time. Ignore these cases:\n          // https://github.com/GoogleChrome/web-vitals/issues/137\n          // https://github.com/GoogleChrome/web-vitals/issues/162\n          firstByte: entry.responseStart >= 0 && entry.responseStart <= relativeNow() ? entry.responseStart : undefined,\n        })\n      }\n    }\n  })\n\n  return { stop }\n}\n\nexport function trackFirstContentfulPaintTiming(lifeCycle: LifeCycle, callback: (fcpTiming: RelativeTime) => void) {\n  const firstHidden = trackFirstHidden()\n  const { unsubscribe: stop } = lifeCycle.subscribe(LifeCycleEventType.PERFORMANCE_ENTRIES_COLLECTED, (entries) => {\n    const fcpEntry = find(\n      entries,\n      (entry): entry is RumPerformancePaintTiming =>\n        entry.entryType === 'paint' &&\n        entry.name === 'first-contentful-paint' &&\n        entry.startTime < firstHidden.timeStamp &&\n        entry.startTime < TIMING_MAXIMUM_DELAY\n    )\n    if (fcpEntry) {\n      callback(fcpEntry.startTime)\n    }\n  })\n  return { stop }\n}\n\n/**\n * Track the largest contentful paint (LCP) occurring during the initial View.  This can yield\n * multiple values, only the most recent one should be used.\n * Documentation: https://web.dev/lcp/\n * Reference implementation: https://github.com/GoogleChrome/web-vitals/blob/master/src/getLCP.ts\n */\nexport function trackLargestContentfulPaintTiming(\n  lifeCycle: LifeCycle,\n  eventTarget: Window,\n  callback: (lcpTiming: RelativeTime, lcpElement?: Element) => void\n) {\n  const firstHidden = trackFirstHidden()\n\n  // Ignore entries that come after the first user interaction.  According to the documentation, the\n  // browser should not send largest-contentful-paint entries after a user interact with the page,\n  // but the web-vitals reference implementation uses this as a safeguard.\n  let firstInteractionTimestamp = Infinity\n  const { stop: stopEventListener } = addEventListeners(\n    eventTarget,\n    [DOM_EVENT.POINTER_DOWN, DOM_EVENT.KEY_DOWN],\n    (event) => {\n      firstInteractionTimestamp = event.timeStamp\n    },\n    { capture: true, once: true }\n  )\n\n  const { unsubscribe: unsubscribeLifeCycle } = lifeCycle.subscribe(\n    LifeCycleEventType.PERFORMANCE_ENTRIES_COLLECTED,\n    (entries) => {\n      const lcpEntry = findLast(\n        entries,\n        (entry): entry is RumLargestContentfulPaintTiming =>\n          entry.entryType === 'largest-contentful-paint' &&\n          entry.startTime < firstInteractionTimestamp &&\n          entry.startTime < firstHidden.timeStamp &&\n          entry.startTime < TIMING_MAXIMUM_DELAY\n      )\n      if (lcpEntry) {\n        callback(lcpEntry.startTime, lcpEntry.element)\n      }\n    }\n  )\n\n  return {\n    stop: () => {\n      stopEventListener()\n      unsubscribeLifeCycle()\n    },\n  }\n}\n\n/**\n * Track the first input occurring during the initial View to return:\n * - First Input Delay\n * - First Input Time\n * Callback is called at most one time.\n * Documentation: https://web.dev/fid/\n * Reference implementation: https://github.com/GoogleChrome/web-vitals/blob/master/src/getFID.ts\n */\nexport function trackFirstInputTimings(\n  lifeCycle: LifeCycle,\n  callback: ({\n    firstInputDelay,\n    firstInputTime,\n    firstInputTarget,\n  }: {\n    firstInputDelay: Duration\n    firstInputTime: RelativeTime\n    firstInputTarget: Node | undefined\n  }) => void\n) {\n  const firstHidden = trackFirstHidden()\n\n  const { unsubscribe: stop } = lifeCycle.subscribe(LifeCycleEventType.PERFORMANCE_ENTRIES_COLLECTED, (entries) => {\n    const firstInputEntry = find(\n      entries,\n      (entry): entry is RumFirstInputTiming =>\n        entry.entryType === 'first-input' && entry.startTime < firstHidden.timeStamp\n    )\n    if (firstInputEntry) {\n      const firstInputDelay = elapsed(firstInputEntry.startTime, firstInputEntry.processingStart)\n      callback({\n        // Ensure firstInputDelay to be positive, see\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=1185815\n        firstInputDelay: firstInputDelay >= 0 ? firstInputDelay : (0 as Duration),\n        firstInputTime: firstInputEntry.startTime,\n        firstInputTarget: firstInputEntry.target,\n      })\n    }\n  })\n\n  return {\n    stop,\n  }\n}\n","import type { ClocksState, Duration, Observable, RelativeTime } from '@datadog/browser-core'\nimport {\n  ExperimentalFeature,\n  isExperimentalFeatureEnabled,\n  DOM_EVENT,\n  ONE_SECOND,\n  addEventListener,\n  elapsed,\n  noop,\n  relativeNow,\n  round,\n  throttle,\n  find,\n} from '@datadog/browser-core'\nimport type { RumLayoutShiftTiming } from '../../../browser/performanceCollection'\nimport { supportPerformanceTimingEvent } from '../../../browser/performanceCollection'\nimport { ViewLoadingType } from '../../../rawRumEvent.types'\nimport type { RumConfiguration } from '../../configuration'\nimport type { LifeCycle } from '../../lifeCycle'\nimport { LifeCycleEventType } from '../../lifeCycle'\nimport { waitPageActivityEnd } from '../../waitPageActivityEnd'\n\nimport { getScrollY } from '../../../browser/scroll'\nimport { getViewportDimension } from '../../../browser/viewportObservable'\nimport type { WebVitalTelemetryDebug } from './startWebVitalTelemetryDebug'\n\nexport interface ScrollMetrics {\n  maxDepth: number\n  maxDepthScrollHeight: number\n  maxDepthScrollTop: number\n  maxDepthTime: Duration\n}\n\n/** Arbitrary scroll throttle duration */\nexport const THROTTLE_SCROLL_DURATION = ONE_SECOND\n\nexport interface ViewMetrics {\n  loadingTime?: Duration\n  cumulativeLayoutShift?: number\n}\n\nexport function trackViewMetrics(\n  lifeCycle: LifeCycle,\n  domMutationObservable: Observable<void>,\n  configuration: RumConfiguration,\n  scheduleViewUpdate: () => void,\n  loadingType: ViewLoadingType,\n  viewStart: ClocksState,\n  webVitalTelemetryDebug: WebVitalTelemetryDebug\n) {\n  const viewMetrics: ViewMetrics = {}\n\n  let scrollMetrics: ScrollMetrics | undefined\n\n  const { stop: stopLoadingTimeTracking, setLoadEvent } = trackLoadingTime(\n    lifeCycle,\n    domMutationObservable,\n    configuration,\n    loadingType,\n    viewStart,\n    (newLoadingTime) => {\n      viewMetrics.loadingTime = newLoadingTime\n\n      // We compute scroll metrics at loading time to ensure we have scroll data when loading the view initially\n      // This is to ensure that we have the depth data even if the user didn't scroll or if the view is not scrollable.\n      if (isExperimentalFeatureEnabled(ExperimentalFeature.SCROLLMAP)) {\n        const { scrollHeight, scrollDepth, scrollTop } = computeScrollValues()\n\n        scrollMetrics = {\n          maxDepth: scrollDepth,\n          maxDepthScrollHeight: scrollHeight,\n          maxDepthTime: newLoadingTime,\n          maxDepthScrollTop: scrollTop,\n        }\n      }\n      scheduleViewUpdate()\n    }\n  )\n\n  const { stop: stopScrollMetricsTracking } = trackScrollMetrics(\n    viewStart,\n    (newScrollMetrics) => {\n      scrollMetrics = newScrollMetrics\n    },\n    computeScrollValues\n  )\n\n  let stopCLSTracking: () => void\n  let clsAttributionCollected = false\n  if (isLayoutShiftSupported()) {\n    viewMetrics.cumulativeLayoutShift = 0\n    ;({ stop: stopCLSTracking } = trackCumulativeLayoutShift(\n      lifeCycle,\n      (cumulativeLayoutShift, largestLayoutShiftNode, largestLayoutShiftTime) => {\n        viewMetrics.cumulativeLayoutShift = cumulativeLayoutShift\n\n        if (!clsAttributionCollected) {\n          clsAttributionCollected = true\n          webVitalTelemetryDebug.addWebVitalTelemetryDebug('CLS', largestLayoutShiftNode, largestLayoutShiftTime)\n        }\n        scheduleViewUpdate()\n      }\n    ))\n  } else {\n    stopCLSTracking = noop\n  }\n\n  return {\n    stop: () => {\n      stopLoadingTimeTracking()\n      stopCLSTracking()\n      stopScrollMetricsTracking()\n    },\n    setLoadEvent,\n    viewMetrics,\n    getScrollMetrics: () => scrollMetrics,\n  }\n}\n\nexport function trackScrollMetrics(\n  viewStart: ClocksState,\n  callback: (scrollMetrics: ScrollMetrics) => void,\n  getScrollValues = computeScrollValues\n) {\n  if (!isExperimentalFeatureEnabled(ExperimentalFeature.SCROLLMAP)) {\n    return { stop: noop }\n  }\n  let maxDepth = 0\n  const handleScrollEvent = throttle(\n    () => {\n      const { scrollHeight, scrollDepth, scrollTop } = getScrollValues()\n\n      if (scrollDepth > maxDepth) {\n        const now = relativeNow()\n        const maxDepthTime = elapsed(viewStart.relative, now)\n        maxDepth = scrollDepth\n        callback({\n          maxDepth,\n          maxDepthScrollHeight: scrollHeight,\n          maxDepthTime,\n          maxDepthScrollTop: scrollTop,\n        })\n      }\n    },\n    THROTTLE_SCROLL_DURATION,\n    { leading: false, trailing: true }\n  )\n\n  const { stop } = addEventListener(window, DOM_EVENT.SCROLL, handleScrollEvent.throttled, { passive: true })\n\n  return {\n    stop: () => {\n      handleScrollEvent.cancel()\n      stop()\n    },\n  }\n}\n\nfunction computeScrollValues() {\n  const scrollTop = getScrollY()\n\n  const { height } = getViewportDimension()\n\n  const scrollHeight = Math.round((document.scrollingElement || document.documentElement).scrollHeight)\n  const scrollDepth = Math.round(height + scrollTop)\n\n  return {\n    scrollHeight,\n    scrollDepth,\n    scrollTop,\n  }\n}\n\nfunction trackLoadingTime(\n  lifeCycle: LifeCycle,\n  domMutationObservable: Observable<void>,\n  configuration: RumConfiguration,\n  loadType: ViewLoadingType,\n  viewStart: ClocksState,\n  callback: (loadingTime: Duration) => void\n) {\n  let isWaitingForLoadEvent = loadType === ViewLoadingType.INITIAL_LOAD\n  let isWaitingForActivityLoadingTime = true\n  const loadingTimeCandidates: Duration[] = []\n\n  function invokeCallbackIfAllCandidatesAreReceived() {\n    if (!isWaitingForActivityLoadingTime && !isWaitingForLoadEvent && loadingTimeCandidates.length > 0) {\n      callback(Math.max(...loadingTimeCandidates) as Duration)\n    }\n  }\n\n  const { stop } = waitPageActivityEnd(lifeCycle, domMutationObservable, configuration, (event) => {\n    if (isWaitingForActivityLoadingTime) {\n      isWaitingForActivityLoadingTime = false\n      if (event.hadActivity) {\n        loadingTimeCandidates.push(elapsed(viewStart.timeStamp, event.end))\n      }\n      invokeCallbackIfAllCandidatesAreReceived()\n    }\n  })\n\n  return {\n    stop,\n    setLoadEvent: (loadEvent: Duration) => {\n      if (isWaitingForLoadEvent) {\n        isWaitingForLoadEvent = false\n        loadingTimeCandidates.push(loadEvent)\n        invokeCallbackIfAllCandidatesAreReceived()\n      }\n    },\n  }\n}\n\n/**\n * Track the cumulative layout shifts (CLS).\n * Layout shifts are grouped into session windows.\n * The minimum gap between session windows is 1 second.\n * The maximum duration of a session window is 5 second.\n * The session window layout shift value is the sum of layout shifts inside it.\n * The CLS value is the max of session windows values.\n *\n * This yields a new value whenever the CLS value is updated (a higher session window value is computed).\n *\n * See isLayoutShiftSupported to check for browser support.\n *\n * Documentation:\n * https://web.dev/cls/\n * https://web.dev/evolving-cls/\n * Reference implementation: https://github.com/GoogleChrome/web-vitals/blob/master/src/getCLS.ts\n */\nfunction trackCumulativeLayoutShift(\n  lifeCycle: LifeCycle,\n  callback: (layoutShift: number, largestShiftNode: Node | undefined, largestShiftTime: RelativeTime) => void\n) {\n  let maxClsValue = 0\n\n  const window = slidingSessionWindow()\n  const { unsubscribe: stop } = lifeCycle.subscribe(LifeCycleEventType.PERFORMANCE_ENTRIES_COLLECTED, (entries) => {\n    for (const entry of entries) {\n      if (entry.entryType === 'layout-shift' && !entry.hadRecentInput) {\n        window.update(entry)\n\n        if (window.value() > maxClsValue) {\n          maxClsValue = window.value()\n          callback(round(maxClsValue, 4), window.largestLayoutShiftNode(), window.largestLayoutShiftTime())\n        }\n      }\n    }\n  })\n\n  return {\n    stop,\n  }\n}\n\nfunction slidingSessionWindow() {\n  let value = 0\n  let startTime: RelativeTime\n  let endTime: RelativeTime\n\n  let largestLayoutShift = 0\n  let largestLayoutShiftNode: Node | undefined\n  let largestLayoutShiftTime: RelativeTime\n\n  return {\n    update: (entry: RumLayoutShiftTiming) => {\n      const shouldCreateNewWindow =\n        startTime === undefined ||\n        entry.startTime - endTime >= ONE_SECOND ||\n        entry.startTime - startTime >= 5 * ONE_SECOND\n      if (shouldCreateNewWindow) {\n        startTime = endTime = entry.startTime\n        value = entry.value\n        largestLayoutShift = 0\n        largestLayoutShiftNode = undefined\n      } else {\n        value += entry.value\n        endTime = entry.startTime\n      }\n\n      if (entry.value > largestLayoutShift) {\n        largestLayoutShift = entry.value\n        largestLayoutShiftTime = entry.startTime\n\n        if (entry.sources?.length) {\n          const largestLayoutShiftSource = find(entry.sources, (s) => s.node?.nodeType === 1) || entry.sources[0]\n          largestLayoutShiftNode = largestLayoutShiftSource.node\n        } else {\n          largestLayoutShiftNode = undefined\n        }\n      }\n    },\n    value: () => value,\n    largestLayoutShiftNode: () => largestLayoutShiftNode,\n    largestLayoutShiftTime: () => largestLayoutShiftTime,\n  }\n}\n\n/**\n * Check whether `layout-shift` is supported by the browser.\n */\nfunction isLayoutShiftSupported() {\n  return supportPerformanceTimingEvent('layout-shift')\n}\n","export function getScrollX() {\n  let scrollX\n  const visual = window.visualViewport\n  if (visual) {\n    scrollX = visual.pageLeft - visual.offsetLeft\n  } else if (window.scrollX !== undefined) {\n    scrollX = window.scrollX\n  } else {\n    scrollX = window.pageXOffset || 0\n  }\n  return Math.round(scrollX)\n}\n\nexport function getScrollY() {\n  let scrollY\n  const visual = window.visualViewport\n  if (visual) {\n    scrollY = visual.pageTop - visual.offsetTop\n  } else if (window.scrollY !== undefined) {\n    scrollY = window.scrollY\n  } else {\n    scrollY = window.pageYOffset || 0\n  }\n  return Math.round(scrollY)\n}\n","import { ONE_MINUTE, setTimeout } from '@datadog/browser-core'\nimport type { LifeCycle } from '../../lifeCycle'\nimport { trackEventCounts } from '../../trackEventCounts'\n\n// Some events are not being counted as they transcend views. To reduce the occurrence;\n// an arbitrary delay is added for stopping event counting after the view ends.\n//\n// Ideally, we would not stop and keep counting events until the end of the session.\n// But this might have a small performance impact if there are many many views:\n// we would need to go through each event to see if the related view matches.\n// So let's have a fairly short delay to avoid impacting performances too much.\n//\n// In the future, we could have views stored in a data structure similar to ContextHistory. Whenever\n// a child event is collected, we could look into this history to find the matching view and\n// increase the associated and increase its counter. Having a centralized data structure for it\n// would allow us to look for views more efficiently.\n//\n// For now, having a small cleanup delay will already improve the situation in most cases.\n\nexport const KEEP_TRACKING_EVENT_COUNTS_AFTER_VIEW_DELAY = 5 * ONE_MINUTE\n\nexport function trackViewEventCounts(lifeCycle: LifeCycle, viewId: string, onChange: () => void) {\n  const { stop, eventCounts } = trackEventCounts({\n    lifeCycle,\n    isChildEvent: (event) => event.view.id === viewId,\n    onChange,\n  })\n\n  return {\n    scheduleStop: () => {\n      setTimeout(stop, KEEP_TRACKING_EVENT_COUNTS_AFTER_VIEW_DELAY)\n    },\n    eventCounts,\n  }\n}\n","import type { Duration, ClocksState, TimeStamp, Observable, Subscription, RelativeTime } from '@datadog/browser-core'\nimport {\n  noop,\n  PageExitReason,\n  shallowClone,\n  assign,\n  elapsed,\n  generateUUID,\n  ONE_MINUTE,\n  throttle,\n  clocksNow,\n  clocksOrigin,\n  timeStampNow,\n  display,\n  looksLikeRelativeTime,\n  setInterval,\n  clearInterval,\n} from '@datadog/browser-core'\n\nimport type { ViewCustomTimings } from '../../../rawRumEvent.types'\nimport { ViewLoadingType } from '../../../rawRumEvent.types'\n\nimport type { LifeCycle } from '../../lifeCycle'\nimport { LifeCycleEventType } from '../../lifeCycle'\nimport type { EventCounts } from '../../trackEventCounts'\nimport type { LocationChange } from '../../../browser/locationChangeObservable'\nimport type { RumConfiguration } from '../../configuration'\nimport type { Timings } from './trackInitialViewTimings'\nimport { trackInitialViewTimings } from './trackInitialViewTimings'\nimport type { ScrollMetrics } from './trackViewMetrics'\nimport { trackViewMetrics } from './trackViewMetrics'\nimport { trackViewEventCounts } from './trackViewEventCounts'\nimport type { WebVitalTelemetryDebug } from './startWebVitalTelemetryDebug'\n\nexport interface ViewEvent {\n  id: string\n  name?: string\n  service?: string\n  version?: string\n  location: Readonly<Location>\n  timings: Timings\n  customTimings: ViewCustomTimings\n  eventCounts: EventCounts\n  documentVersion: number\n  startClocks: ClocksState\n  duration: Duration\n  isActive: boolean\n  sessionIsActive: boolean\n  loadingTime?: Duration\n  loadingType: ViewLoadingType\n  cumulativeLayoutShift?: number\n  scrollMetrics?: ScrollMetrics\n}\n\nexport interface ViewCreatedEvent {\n  id: string\n  name?: string\n  service?: string\n  version?: string\n  startClocks: ClocksState\n}\n\nexport interface ViewEndedEvent {\n  endClocks: ClocksState\n}\n\nexport const THROTTLE_VIEW_UPDATE_PERIOD = 3000\nexport const SESSION_KEEP_ALIVE_INTERVAL = 5 * ONE_MINUTE\n\nexport interface ViewOptions {\n  name?: string\n  service?: string\n  version?: string\n}\n\nexport function trackViews(\n  location: Location,\n  lifeCycle: LifeCycle,\n  domMutationObservable: Observable<void>,\n  configuration: RumConfiguration,\n  locationChangeObservable: Observable<LocationChange>,\n  areViewsTrackedAutomatically: boolean,\n  webVitalTelemetryDebug: WebVitalTelemetryDebug,\n  initialViewOptions?: ViewOptions\n) {\n  let currentView = startNewView(ViewLoadingType.INITIAL_LOAD, clocksOrigin(), initialViewOptions)\n\n  startViewLifeCycle()\n\n  let locationChangeSubscription: Subscription\n  if (areViewsTrackedAutomatically) {\n    locationChangeSubscription = renewViewOnLocationChange(locationChangeObservable)\n  }\n\n  function startNewView(loadingType: ViewLoadingType, startClocks?: ClocksState, viewOptions?: ViewOptions) {\n    return newView(\n      lifeCycle,\n      domMutationObservable,\n      configuration,\n      location,\n      loadingType,\n      webVitalTelemetryDebug,\n      startClocks,\n      viewOptions\n    )\n  }\n\n  function startViewLifeCycle() {\n    lifeCycle.subscribe(LifeCycleEventType.SESSION_RENEWED, () => {\n      // Renew view on session renewal\n      currentView = startNewView(ViewLoadingType.ROUTE_CHANGE, undefined, {\n        name: currentView.name,\n        service: currentView.service,\n        version: currentView.version,\n      })\n    })\n\n    lifeCycle.subscribe(LifeCycleEventType.SESSION_EXPIRED, () => {\n      currentView.end({ sessionIsActive: false })\n    })\n\n    // End the current view on page unload\n    lifeCycle.subscribe(LifeCycleEventType.PAGE_EXITED, (pageExitEvent) => {\n      if (pageExitEvent.reason === PageExitReason.UNLOADING || pageExitEvent.reason === PageExitReason.PAGEHIDE) {\n        currentView.end()\n      }\n    })\n  }\n\n  function renewViewOnLocationChange(locationChangeObservable: Observable<LocationChange>) {\n    return locationChangeObservable.subscribe(({ oldLocation, newLocation }) => {\n      if (areDifferentLocation(oldLocation, newLocation)) {\n        currentView.end()\n        currentView = startNewView(ViewLoadingType.ROUTE_CHANGE)\n      }\n    })\n  }\n\n  return {\n    addTiming: (name: string, time: RelativeTime | TimeStamp = timeStampNow()) => {\n      currentView.addTiming(name, time)\n    },\n    startView: (options?: ViewOptions, startClocks?: ClocksState) => {\n      currentView.end({ endClocks: startClocks })\n      currentView = startNewView(ViewLoadingType.ROUTE_CHANGE, startClocks, options)\n    },\n    stop: () => {\n      locationChangeSubscription?.unsubscribe()\n      currentView.end()\n    },\n  }\n}\n\nfunction newView(\n  lifeCycle: LifeCycle,\n  domMutationObservable: Observable<void>,\n  configuration: RumConfiguration,\n  initialLocation: Location,\n  loadingType: ViewLoadingType,\n  webVitalTelemetryDebug: WebVitalTelemetryDebug,\n  startClocks: ClocksState = clocksNow(),\n  viewOptions?: ViewOptions\n) {\n  // Setup initial values\n  const id = generateUUID()\n  const customTimings: ViewCustomTimings = {}\n  let documentVersion = 0\n  let endClocks: ClocksState | undefined\n  const location = shallowClone(initialLocation)\n\n  let sessionIsActive = true\n  let name: string | undefined\n  let service: string | undefined\n  let version: string | undefined\n  if (viewOptions) {\n    name = viewOptions.name\n    service = viewOptions.service\n    version = viewOptions.version\n  }\n\n  lifeCycle.notify(LifeCycleEventType.VIEW_CREATED, {\n    id,\n    name,\n    startClocks,\n    service,\n    version,\n  })\n\n  // Update the view every time the measures are changing\n  const { throttled: scheduleViewUpdate, cancel: cancelScheduleViewUpdate } = throttle(\n    triggerViewUpdate,\n    THROTTLE_VIEW_UPDATE_PERIOD,\n    {\n      leading: false,\n    }\n  )\n\n  const {\n    setLoadEvent,\n    stop: stopViewMetricsTracking,\n    viewMetrics,\n    getScrollMetrics,\n  } = trackViewMetrics(\n    lifeCycle,\n    domMutationObservable,\n    configuration,\n    scheduleViewUpdate,\n    loadingType,\n    startClocks,\n    webVitalTelemetryDebug\n  )\n\n  const { scheduleStop: scheduleStopInitialViewTimingsTracking, timings } =\n    loadingType === ViewLoadingType.INITIAL_LOAD\n      ? trackInitialViewTimings(lifeCycle, webVitalTelemetryDebug, setLoadEvent, scheduleViewUpdate)\n      : { scheduleStop: noop, timings: {} as Timings }\n\n  const { scheduleStop: scheduleStopEventCountsTracking, eventCounts } = trackViewEventCounts(\n    lifeCycle,\n    id,\n    scheduleViewUpdate\n  )\n\n  // Session keep alive\n  const keepAliveIntervalId = setInterval(triggerViewUpdate, SESSION_KEEP_ALIVE_INTERVAL)\n\n  // Initial view update\n  triggerViewUpdate()\n\n  function triggerViewUpdate() {\n    cancelScheduleViewUpdate()\n    documentVersion += 1\n    const currentEnd = endClocks === undefined ? timeStampNow() : endClocks.timeStamp\n\n    lifeCycle.notify(\n      LifeCycleEventType.VIEW_UPDATED,\n      assign(\n        {\n          customTimings,\n          documentVersion,\n          id,\n          name,\n          service,\n          version,\n          loadingType,\n          location,\n          startClocks,\n          timings,\n          duration: elapsed(startClocks.timeStamp, currentEnd),\n          isActive: endClocks === undefined,\n          sessionIsActive,\n          eventCounts,\n          scrollMetrics: getScrollMetrics(),\n        },\n        viewMetrics\n      )\n    )\n  }\n\n  return {\n    name,\n    service,\n    version,\n    end(options: { endClocks?: ClocksState; sessionIsActive?: boolean } = {}) {\n      if (endClocks) {\n        // view already ended\n        return\n      }\n      endClocks = options.endClocks ?? clocksNow()\n      sessionIsActive = options.sessionIsActive ?? true\n\n      lifeCycle.notify(LifeCycleEventType.VIEW_ENDED, { endClocks })\n      clearInterval(keepAliveIntervalId)\n      stopViewMetricsTracking()\n      scheduleStopInitialViewTimingsTracking()\n      scheduleStopEventCountsTracking()\n      triggerViewUpdate()\n    },\n    addTiming(name: string, time: RelativeTime | TimeStamp) {\n      if (endClocks) {\n        return\n      }\n      const relativeTime = looksLikeRelativeTime(time) ? time : elapsed(startClocks.timeStamp, time)\n      customTimings[sanitizeTiming(name)] = relativeTime\n      scheduleViewUpdate()\n    },\n  }\n}\n\n/**\n * Timing name is used as facet path that must contain only letters, digits, or the characters - _ . @ $\n */\nfunction sanitizeTiming(name: string) {\n  const sanitized = name.replace(/[^a-zA-Z0-9-_.@$]/g, '_')\n  if (sanitized !== name) {\n    display.warn(`Invalid timing name: ${name}, sanitized to: ${sanitized}`)\n  }\n  return sanitized\n}\n\nfunction areDifferentLocation(currentLocation: Location, otherLocation: Location) {\n  return (\n    currentLocation.pathname !== otherLocation.pathname ||\n    (!isHashAnAnchor(otherLocation.hash) &&\n      getPathFromHash(otherLocation.hash) !== getPathFromHash(currentLocation.hash))\n  )\n}\n\nfunction isHashAnAnchor(hash: string) {\n  const correspondingId = hash.substr(1)\n  return !!document.getElementById(correspondingId)\n}\n\nfunction getPathFromHash(hash: string) {\n  const index = hash.indexOf('?')\n  return index < 0 ? hash : hash.slice(0, index)\n}\n","import type { Duration, ServerDuration, Observable } from '@datadog/browser-core'\nimport {\n  isExperimentalFeatureEnabled,\n  ExperimentalFeature,\n  isEmptyObject,\n  mapValues,\n  toServerDuration,\n  isNumber,\n} from '@datadog/browser-core'\nimport type { RecorderApi } from '../../../boot/rumPublicApi'\nimport type { RawRumViewEvent } from '../../../rawRumEvent.types'\nimport { RumEventType } from '../../../rawRumEvent.types'\nimport type { LifeCycle, RawRumEventCollectedData } from '../../lifeCycle'\nimport { LifeCycleEventType } from '../../lifeCycle'\nimport { mapToForegroundPeriods } from '../../contexts/foregroundContexts'\nimport type { LocationChange } from '../../../browser/locationChangeObservable'\nimport type { RumConfiguration } from '../../configuration'\nimport type { FeatureFlagContexts } from '../../contexts/featureFlagContext'\nimport type { PageStateHistory } from '../../contexts/pageStateHistory'\nimport type { ViewEvent, ViewOptions } from './trackViews'\nimport { trackViews } from './trackViews'\nimport type { WebVitalTelemetryDebug } from './startWebVitalTelemetryDebug'\n\nexport function startViewCollection(\n  lifeCycle: LifeCycle,\n  configuration: RumConfiguration,\n  location: Location,\n  domMutationObservable: Observable<void>,\n  locationChangeObservable: Observable<LocationChange>,\n  featureFlagContexts: FeatureFlagContexts,\n  pageStateHistory: PageStateHistory,\n  recorderApi: RecorderApi,\n  webVitalTelemetryDebug: WebVitalTelemetryDebug,\n  initialViewOptions?: ViewOptions\n) {\n  lifeCycle.subscribe(LifeCycleEventType.VIEW_UPDATED, (view) =>\n    lifeCycle.notify(\n      LifeCycleEventType.RAW_RUM_EVENT_COLLECTED,\n      processViewUpdate(view, configuration, featureFlagContexts, recorderApi, pageStateHistory)\n    )\n  )\n  const trackViewResult = trackViews(\n    location,\n    lifeCycle,\n    domMutationObservable,\n    configuration,\n    locationChangeObservable,\n    !configuration.trackViewsManually,\n    webVitalTelemetryDebug,\n    initialViewOptions\n  )\n\n  return trackViewResult\n}\n\nfunction processViewUpdate(\n  view: ViewEvent,\n  configuration: RumConfiguration,\n  featureFlagContexts: FeatureFlagContexts,\n  recorderApi: RecorderApi,\n  pageStateHistory: PageStateHistory\n): RawRumEventCollectedData<RawRumViewEvent> {\n  const replayStats = recorderApi.getReplayStats(view.id)\n  const featureFlagContext = featureFlagContexts.findFeatureFlagEvaluations(view.startClocks.relative)\n  const pageStatesEnabled = isExperimentalFeatureEnabled(ExperimentalFeature.PAGE_STATES)\n  const pageStates = pageStateHistory.findAll(view.startClocks.relative, view.duration)\n  const viewEvent: RawRumViewEvent = {\n    _dd: {\n      document_version: view.documentVersion,\n      replay_stats: replayStats,\n      page_states: pageStatesEnabled ? pageStates : undefined,\n    },\n    date: view.startClocks.timeStamp,\n    type: RumEventType.VIEW,\n    view: {\n      action: {\n        count: view.eventCounts.actionCount,\n      },\n      frustration: {\n        count: view.eventCounts.frustrationCount,\n      },\n      cumulative_layout_shift: view.cumulativeLayoutShift,\n      first_byte: toServerDuration(view.timings.firstByte),\n      dom_complete: toServerDuration(view.timings.domComplete),\n      dom_content_loaded: toServerDuration(view.timings.domContentLoaded),\n      dom_interactive: toServerDuration(view.timings.domInteractive),\n      error: {\n        count: view.eventCounts.errorCount,\n      },\n      first_contentful_paint: toServerDuration(view.timings.firstContentfulPaint),\n      first_input_delay: toServerDuration(view.timings.firstInputDelay),\n      first_input_time: toServerDuration(view.timings.firstInputTime),\n      is_active: view.isActive,\n      name: view.name,\n      largest_contentful_paint: toServerDuration(view.timings.largestContentfulPaint),\n      load_event: toServerDuration(view.timings.loadEvent),\n      loading_time: discardNegativeDuration(toServerDuration(view.loadingTime)),\n      loading_type: view.loadingType,\n      long_task: {\n        count: view.eventCounts.longTaskCount,\n      },\n      resource: {\n        count: view.eventCounts.resourceCount,\n      },\n      time_spent: toServerDuration(view.duration),\n      in_foreground_periods:\n        !pageStatesEnabled && pageStates ? mapToForegroundPeriods(pageStates, view.duration) : undefined, // Todo: Remove in the next major release\n    },\n    feature_flags: featureFlagContext && !isEmptyObject(featureFlagContext) ? featureFlagContext : undefined,\n    display: view.scrollMetrics\n      ? {\n          scroll: {\n            max_depth: view.scrollMetrics.maxDepth,\n            max_depth_scroll_height: view.scrollMetrics.maxDepthScrollHeight,\n            max_depth_scroll_top: view.scrollMetrics.maxDepthScrollTop,\n            max_depth_time: toServerDuration(view.scrollMetrics.maxDepthTime),\n          },\n        }\n      : undefined,\n    session: {\n      has_replay: replayStats ? true : undefined,\n      is_active: view.sessionIsActive ? undefined : false,\n    },\n    privacy: {\n      replay_level: configuration.defaultPrivacyLevel,\n    },\n  }\n  if (!isEmptyObject(view.customTimings)) {\n    viewEvent.view.custom_timings = mapValues(\n      view.customTimings,\n      toServerDuration as (duration: Duration) => ServerDuration\n    )\n  }\n  return {\n    rawRumEvent: viewEvent,\n    startTime: view.startClocks.relative,\n    domainContext: {\n      location: view.location,\n    },\n  }\n}\n\nfunction discardNegativeDuration(duration: ServerDuration | undefined): ServerDuration | undefined {\n  return isNumber(duration) && duration < 0 ? undefined : duration\n}\n","import type { Observable } from '../../tools/observable'\nimport type { Context } from '../../tools/serialisation/context'\nimport { ValueHistory } from '../../tools/valueHistory'\nimport type { RelativeTime } from '../../tools/utils/timeUtils'\nimport { relativeNow, clocksOrigin, ONE_MINUTE } from '../../tools/utils/timeUtils'\nimport { DOM_EVENT, addEventListener, addEventListeners } from '../../browser/addEventListener'\nimport { clearInterval, setInterval } from '../../tools/timer'\nimport { SESSION_TIME_OUT_DELAY } from './sessionConstants'\nimport { startSessionStore } from './sessionStore'\nimport type { SessionStoreStrategyType } from './storeStrategies/sessionStoreStrategy'\n\nexport interface SessionManager<TrackingType extends string> {\n  findActiveSession: (startTime?: RelativeTime) => SessionContext<TrackingType> | undefined\n  renewObservable: Observable<void>\n  expireObservable: Observable<void>\n  expire: () => void\n}\n\nexport interface SessionContext<TrackingType extends string> extends Context {\n  id: string\n  trackingType: TrackingType\n}\n\nexport const VISIBILITY_CHECK_DELAY = ONE_MINUTE\nconst SESSION_CONTEXT_TIMEOUT_DELAY = SESSION_TIME_OUT_DELAY\nlet stopCallbacks: Array<() => void> = []\n\nexport function startSessionManager<TrackingType extends string>(\n  sessionStoreStrategyType: SessionStoreStrategyType,\n  productKey: string,\n  computeSessionState: (rawTrackingType?: string) => { trackingType: TrackingType; isTracked: boolean }\n): SessionManager<TrackingType> {\n  const sessionStore = startSessionStore(sessionStoreStrategyType, productKey, computeSessionState)\n  stopCallbacks.push(() => sessionStore.stop())\n\n  const sessionContextHistory = new ValueHistory<SessionContext<TrackingType>>(SESSION_CONTEXT_TIMEOUT_DELAY)\n  stopCallbacks.push(() => sessionContextHistory.stop())\n\n  sessionStore.renewObservable.subscribe(() => {\n    sessionContextHistory.add(buildSessionContext(), relativeNow())\n  })\n  sessionStore.expireObservable.subscribe(() => {\n    sessionContextHistory.closeActive(relativeNow())\n  })\n\n  sessionStore.expandOrRenewSession()\n  sessionContextHistory.add(buildSessionContext(), clocksOrigin().relative)\n\n  trackActivity(() => sessionStore.expandOrRenewSession())\n  trackVisibility(() => sessionStore.expandSession())\n\n  function buildSessionContext() {\n    return {\n      id: sessionStore.getSession().id!,\n      trackingType: sessionStore.getSession()[productKey] as TrackingType,\n    }\n  }\n\n  return {\n    findActiveSession: (startTime) => sessionContextHistory.find(startTime),\n    renewObservable: sessionStore.renewObservable,\n    expireObservable: sessionStore.expireObservable,\n    expire: sessionStore.expire,\n  }\n}\n\nexport function stopSessionManager() {\n  stopCallbacks.forEach((e) => e())\n  stopCallbacks = []\n}\n\nfunction trackActivity(expandOrRenewSession: () => void) {\n  const { stop } = addEventListeners(\n    window,\n    [DOM_EVENT.CLICK, DOM_EVENT.TOUCH_START, DOM_EVENT.KEY_DOWN, DOM_EVENT.SCROLL],\n    expandOrRenewSession,\n    { capture: true, passive: true }\n  )\n  stopCallbacks.push(stop)\n}\n\nfunction trackVisibility(expandSession: () => void) {\n  const expandSessionWhenVisible = () => {\n    if (document.visibilityState === 'visible') {\n      expandSession()\n    }\n  }\n\n  const { stop } = addEventListener(document, DOM_EVENT.VISIBILITY_CHANGE, expandSessionWhenVisible)\n  stopCallbacks.push(stop)\n\n  const visibilityCheckInterval = setInterval(expandSessionWhenVisible, VISIBILITY_CHECK_DELAY)\n  stopCallbacks.push(() => {\n    clearInterval(visibilityCheckInterval)\n  })\n}\n","import type { RelativeTime } from '@datadog/browser-core'\nimport { Observable, noop, performDraw, startSessionManager } from '@datadog/browser-core'\nimport type { RumConfiguration } from './configuration'\nimport type { LifeCycle } from './lifeCycle'\nimport { LifeCycleEventType } from './lifeCycle'\n\nexport const RUM_SESSION_KEY = 'rum'\n\nexport interface RumSessionManager {\n  findTrackedSession: (startTime?: RelativeTime) => RumSession | undefined\n  expire: () => void\n  expireObservable: Observable<void>\n}\n\nexport type RumSession = {\n  id: string\n  plan: RumSessionPlan\n  sessionReplayAllowed: boolean\n  longTaskAllowed: boolean\n  resourceAllowed: boolean\n}\n\nexport const enum RumSessionPlan {\n  WITHOUT_SESSION_REPLAY = 1,\n  WITH_SESSION_REPLAY = 2,\n}\n\nexport const enum RumTrackingType {\n  NOT_TRACKED = '0',\n  // Note: the \"tracking type\" value (stored in the session cookie) does not match the \"session\n  // plan\" value (sent in RUM events). This is expected, and was done to keep retrocompatibility\n  // with active sessions when upgrading the SDK.\n  TRACKED_WITH_SESSION_REPLAY = '1',\n  TRACKED_WITHOUT_SESSION_REPLAY = '2',\n}\n\nexport function startRumSessionManager(configuration: RumConfiguration, lifeCycle: LifeCycle): RumSessionManager {\n  const sessionManager = startSessionManager(\n    // TODO - Improve configuration type and remove assertion\n    configuration.sessionStoreStrategyType!,\n    RUM_SESSION_KEY,\n    (rawTrackingType) => computeSessionState(configuration, rawTrackingType)\n  )\n\n  sessionManager.expireObservable.subscribe(() => {\n    lifeCycle.notify(LifeCycleEventType.SESSION_EXPIRED)\n  })\n\n  sessionManager.renewObservable.subscribe(() => {\n    lifeCycle.notify(LifeCycleEventType.SESSION_RENEWED)\n  })\n\n  return {\n    findTrackedSession: (startTime) => {\n      const session = sessionManager.findActiveSession(startTime)\n      if (!session || !isTypeTracked(session.trackingType)) {\n        return\n      }\n      const plan =\n        session.trackingType === RumTrackingType.TRACKED_WITH_SESSION_REPLAY\n          ? RumSessionPlan.WITH_SESSION_REPLAY\n          : RumSessionPlan.WITHOUT_SESSION_REPLAY\n      return {\n        id: session.id,\n        plan,\n        sessionReplayAllowed: plan === RumSessionPlan.WITH_SESSION_REPLAY,\n        longTaskAllowed:\n          configuration.trackLongTasks !== undefined\n            ? configuration.trackLongTasks\n            : configuration.oldPlansBehavior && plan === RumSessionPlan.WITH_SESSION_REPLAY,\n        resourceAllowed:\n          configuration.trackResources !== undefined\n            ? configuration.trackResources\n            : configuration.oldPlansBehavior && plan === RumSessionPlan.WITH_SESSION_REPLAY,\n      }\n    },\n    expire: sessionManager.expire,\n    expireObservable: sessionManager.expireObservable,\n  }\n}\n\n/**\n * Start a tracked replay session stub\n */\nexport function startRumSessionManagerStub(): RumSessionManager {\n  const session: RumSession = {\n    id: '00000000-aaaa-0000-aaaa-000000000000',\n    plan: RumSessionPlan.WITHOUT_SESSION_REPLAY, // plan value should not be taken into account for mobile\n    sessionReplayAllowed: false,\n    longTaskAllowed: true,\n    resourceAllowed: true,\n  }\n  return {\n    findTrackedSession: () => session,\n    expire: noop,\n    expireObservable: new Observable(),\n  }\n}\n\nfunction computeSessionState(configuration: RumConfiguration, rawTrackingType?: string) {\n  let trackingType: RumTrackingType\n  if (hasValidRumSession(rawTrackingType)) {\n    trackingType = rawTrackingType\n  } else if (!performDraw(configuration.sessionSampleRate)) {\n    trackingType = RumTrackingType.NOT_TRACKED\n  } else if (!performDraw(configuration.sessionReplaySampleRate)) {\n    trackingType = RumTrackingType.TRACKED_WITHOUT_SESSION_REPLAY\n  } else {\n    trackingType = RumTrackingType.TRACKED_WITH_SESSION_REPLAY\n  }\n  return {\n    trackingType,\n    isTracked: isTypeTracked(trackingType),\n  }\n}\n\nfunction hasValidRumSession(trackingType?: string): trackingType is RumTrackingType {\n  return (\n    trackingType === RumTrackingType.NOT_TRACKED ||\n    trackingType === RumTrackingType.TRACKED_WITH_SESSION_REPLAY ||\n    trackingType === RumTrackingType.TRACKED_WITHOUT_SESSION_REPLAY\n  )\n}\n\nfunction isTypeTracked(rumSessionType: RumTrackingType | undefined) {\n  return (\n    rumSessionType === RumTrackingType.TRACKED_WITHOUT_SESSION_REPLAY ||\n    rumSessionType === RumTrackingType.TRACKED_WITH_SESSION_REPLAY\n  )\n}\n","import type { PageExitEvent, PageExitReason } from '../browser/pageExitObservable'\nimport { Observable } from '../tools/observable'\nimport type { TimeoutId } from '../tools/timer'\nimport { clearTimeout, setTimeout } from '../tools/timer'\nimport type { Duration } from '../tools/utils/timeUtils'\n\nexport type FlushReason = PageExitReason | 'duration_limit' | 'bytes_limit' | 'messages_limit' | 'session_expire'\n\nexport type FlushController = ReturnType<typeof createFlushController>\nexport interface FlushEvent {\n  reason: FlushReason\n  bytesCount: number\n  messagesCount: number\n}\n\ninterface FlushControllerOptions {\n  messagesLimit: number\n  bytesLimit: number\n  durationLimit: Duration\n  pageExitObservable: Observable<PageExitEvent>\n  sessionExpireObservable: Observable<void>\n}\n\n/**\n * Returns a \"flush controller\", responsible of notifying when flushing a pool of pending data needs\n * to happen. The implementation is designed to support both synchronous and asynchronous usages,\n * but relies on invariants described in each method documentation to keep a coherent state.\n */\nexport function createFlushController({\n  messagesLimit,\n  bytesLimit,\n  durationLimit,\n  pageExitObservable,\n  sessionExpireObservable,\n}: FlushControllerOptions) {\n  const flushObservable = new Observable<FlushEvent>()\n\n  pageExitObservable.subscribe((event) => flush(event.reason))\n  sessionExpireObservable.subscribe(() => flush('session_expire'))\n\n  let currentBytesCount = 0\n  let currentMessagesCount = 0\n\n  function flush(flushReason: FlushReason) {\n    if (currentMessagesCount === 0) {\n      return\n    }\n\n    const messagesCount = currentMessagesCount\n    const bytesCount = currentBytesCount\n\n    currentMessagesCount = 0\n    currentBytesCount = 0\n    cancelDurationLimitTimeout()\n\n    flushObservable.notify({\n      reason: flushReason,\n      messagesCount,\n      bytesCount,\n    })\n  }\n\n  let durationLimitTimeoutId: TimeoutId | undefined\n  function scheduleDurationLimitTimeout() {\n    if (durationLimitTimeoutId === undefined) {\n      durationLimitTimeoutId = setTimeout(() => {\n        flush('duration_limit')\n      }, durationLimit)\n    }\n  }\n\n  function cancelDurationLimitTimeout() {\n    clearTimeout(durationLimitTimeoutId)\n    durationLimitTimeoutId = undefined\n  }\n\n  return {\n    flushObservable,\n    get messagesCount() {\n      return currentMessagesCount\n    },\n\n    /**\n     * Notifies that a message will be added to a pool of pending messages waiting to be flushed.\n     *\n     * This function needs to be called synchronously, right before adding the message, so no flush\n     * event can happen after `notifyBeforeAddMessage` and before adding the message.\n     */\n    notifyBeforeAddMessage(messageBytesCount: number) {\n      if (currentBytesCount + messageBytesCount >= bytesLimit) {\n        flush('bytes_limit')\n      }\n      // Consider the message to be added now rather than in `notifyAfterAddMessage`, because if no\n      // message was added yet and `notifyAfterAddMessage` is called asynchronously, we still want\n      // to notify when a flush is needed (for example on page exit).\n      currentMessagesCount += 1\n      currentBytesCount += messageBytesCount\n      scheduleDurationLimitTimeout()\n    },\n\n    /**\n     * Notifies that a message *was* added to a pool of pending messages waiting to be flushed.\n     *\n     * This function can be called asynchronously after the message was added, but in this case it\n     * should not be called if a flush event occurred in between.\n     */\n    notifyAfterAddMessage() {\n      if (currentMessagesCount >= messagesLimit) {\n        flush('messages_limit')\n      } else if (currentBytesCount >= bytesLimit) {\n        flush('bytes_limit')\n      }\n    },\n\n    /**\n     * Notifies that a message was removed from a pool of pending messages waiting to be flushed.\n     *\n     * This function needs to be called synchronously, right after removing the message, so no flush\n     * event can happen after removing the message and before `notifyAfterRemoveMessage`.\n     */\n    notifyAfterRemoveMessage(messageBytesCount: number) {\n      currentBytesCount -= messageBytesCount\n      currentMessagesCount -= 1\n      if (currentMessagesCount === 0) {\n        cancelDurationLimitTimeout()\n      }\n    },\n  }\n}\n","import { display } from '../tools/display'\nimport type { Context } from '../tools/serialisation/context'\nimport { objectValues } from '../tools/utils/polyfills'\nimport { isPageExitReason } from '../browser/pageExitObservable'\nimport { computeBytesCount } from '../tools/utils/byteUtils'\nimport { jsonStringify } from '../tools/serialisation/jsonStringify'\nimport type { HttpRequest } from './httpRequest'\nimport type { FlushController, FlushEvent } from './flushController'\n\nexport class Batch {\n  private pushOnlyBuffer: string[] = []\n  private upsertBuffer: { [key: string]: string } = {}\n\n  constructor(\n    private request: HttpRequest,\n    private flushController: FlushController,\n    private messageBytesLimit: number\n  ) {\n    this.flushController.flushObservable.subscribe((event) => this.flush(event))\n  }\n\n  add(message: Context) {\n    this.addOrUpdate(message)\n  }\n\n  upsert(message: Context, key: string) {\n    this.addOrUpdate(message, key)\n  }\n\n  private flush(event: FlushEvent) {\n    const messages = this.pushOnlyBuffer.concat(objectValues(this.upsertBuffer))\n\n    this.pushOnlyBuffer = []\n    this.upsertBuffer = {}\n\n    const payload = { data: messages.join('\\n'), bytesCount: event.bytesCount, flushReason: event.reason }\n    if (isPageExitReason(event.reason)) {\n      this.request.sendOnExit(payload)\n    } else {\n      this.request.send(payload)\n    }\n  }\n\n  private addOrUpdate(message: Context, key?: string) {\n    const { processedMessage, messageBytesCount } = this.process(message)\n\n    if (messageBytesCount >= this.messageBytesLimit) {\n      display.warn(\n        `Discarded a message whose size was bigger than the maximum allowed size ${this.messageBytesLimit}KB.`\n      )\n      return\n    }\n\n    if (this.hasMessageFor(key)) {\n      this.remove(key)\n    }\n\n    this.push(processedMessage, messageBytesCount, key)\n  }\n\n  private process(message: Context) {\n    const processedMessage = jsonStringify(message)!\n    const messageBytesCount = computeBytesCount(processedMessage)\n    return { processedMessage, messageBytesCount }\n  }\n\n  private push(processedMessage: string, messageBytesCount: number, key?: string) {\n    // If there are other messages, a '\\n' will be added at serialization\n    const separatorBytesCount = this.flushController.messagesCount > 0 ? 1 : 0\n\n    this.flushController.notifyBeforeAddMessage(messageBytesCount + separatorBytesCount)\n    if (key !== undefined) {\n      this.upsertBuffer[key] = processedMessage\n    } else {\n      this.pushOnlyBuffer.push(processedMessage)\n    }\n    this.flushController.notifyAfterAddMessage()\n  }\n\n  private remove(key: string) {\n    const removedMessage = this.upsertBuffer[key]\n    delete this.upsertBuffer[key]\n    const messageBytesCount = computeBytesCount(removedMessage)\n    // If there are other messages, a '\\n' will be added at serialization\n    const separatorBytesCount = this.flushController.messagesCount > 1 ? 1 : 0\n    this.flushController.notifyAfterRemoveMessage(messageBytesCount + separatorBytesCount)\n  }\n\n  private hasMessageFor(key?: string): key is string {\n    return key !== undefined && this.upsertBuffer[key] !== undefined\n  }\n}\n","import type { EndpointType } from '../domain/configuration'\nimport { setTimeout } from '../tools/timer'\nimport { clocksNow, ONE_MINUTE, ONE_SECOND } from '../tools/utils/timeUtils'\nimport { ONE_MEBI_BYTE, ONE_KIBI_BYTE } from '../tools/utils/byteUtils'\nimport { isServerError } from '../tools/utils/responseUtils'\nimport type { RawError } from '../domain/error/error.types'\nimport { ErrorSource } from '../domain/error/error.types'\nimport type { Payload, HttpResponse } from './httpRequest'\n\nexport const MAX_ONGOING_BYTES_COUNT = 80 * ONE_KIBI_BYTE\nexport const MAX_ONGOING_REQUESTS = 32\nexport const MAX_QUEUE_BYTES_COUNT = 3 * ONE_MEBI_BYTE\nexport const MAX_BACKOFF_TIME = ONE_MINUTE\nexport const INITIAL_BACKOFF_TIME = ONE_SECOND\n\nconst enum TransportStatus {\n  UP,\n  FAILURE_DETECTED,\n  DOWN,\n}\n\nconst enum RetryReason {\n  AFTER_SUCCESS,\n  AFTER_RESUME,\n}\n\nexport interface RetryState {\n  transportStatus: TransportStatus\n  currentBackoffTime: number\n  bandwidthMonitor: ReturnType<typeof newBandwidthMonitor>\n  queuedPayloads: ReturnType<typeof newPayloadQueue>\n  queueFullReported: boolean\n}\n\ntype SendStrategy = (payload: Payload, onResponse: (r: HttpResponse) => void) => void\n\nexport function sendWithRetryStrategy(\n  payload: Payload,\n  state: RetryState,\n  sendStrategy: SendStrategy,\n  endpointType: EndpointType,\n  reportError: (error: RawError) => void\n) {\n  if (\n    state.transportStatus === TransportStatus.UP &&\n    state.queuedPayloads.size() === 0 &&\n    state.bandwidthMonitor.canHandle(payload)\n  ) {\n    send(payload, state, sendStrategy, {\n      onSuccess: () => retryQueuedPayloads(RetryReason.AFTER_SUCCESS, state, sendStrategy, endpointType, reportError),\n      onFailure: () => {\n        state.queuedPayloads.enqueue(payload)\n        scheduleRetry(state, sendStrategy, endpointType, reportError)\n      },\n    })\n  } else {\n    state.queuedPayloads.enqueue(payload)\n  }\n}\n\nfunction scheduleRetry(\n  state: RetryState,\n  sendStrategy: SendStrategy,\n  endpointType: EndpointType,\n  reportError: (error: RawError) => void\n) {\n  if (state.transportStatus !== TransportStatus.DOWN) {\n    return\n  }\n  setTimeout(() => {\n    const payload = state.queuedPayloads.first()\n    send(payload, state, sendStrategy, {\n      onSuccess: () => {\n        state.queuedPayloads.dequeue()\n        state.currentBackoffTime = INITIAL_BACKOFF_TIME\n        retryQueuedPayloads(RetryReason.AFTER_RESUME, state, sendStrategy, endpointType, reportError)\n      },\n      onFailure: () => {\n        state.currentBackoffTime = Math.min(MAX_BACKOFF_TIME, state.currentBackoffTime * 2)\n        scheduleRetry(state, sendStrategy, endpointType, reportError)\n      },\n    })\n  }, state.currentBackoffTime)\n}\n\nfunction send(\n  payload: Payload,\n  state: RetryState,\n  sendStrategy: SendStrategy,\n  { onSuccess, onFailure }: { onSuccess: () => void; onFailure: () => void }\n) {\n  state.bandwidthMonitor.add(payload)\n  sendStrategy(payload, (response) => {\n    state.bandwidthMonitor.remove(payload)\n    if (!shouldRetryRequest(response)) {\n      state.transportStatus = TransportStatus.UP\n      onSuccess()\n    } else {\n      // do not consider transport down if another ongoing request could succeed\n      state.transportStatus =\n        state.bandwidthMonitor.ongoingRequestCount > 0 ? TransportStatus.FAILURE_DETECTED : TransportStatus.DOWN\n      payload.retry = {\n        count: payload.retry ? payload.retry.count + 1 : 1,\n        lastFailureStatus: response.status,\n      }\n      onFailure()\n    }\n  })\n}\n\nfunction retryQueuedPayloads(\n  reason: RetryReason,\n  state: RetryState,\n  sendStrategy: SendStrategy,\n  endpointType: EndpointType,\n  reportError: (error: RawError) => void\n) {\n  if (reason === RetryReason.AFTER_SUCCESS && state.queuedPayloads.isFull() && !state.queueFullReported) {\n    reportError({\n      message: `Reached max ${endpointType} events size queued for upload: ${MAX_QUEUE_BYTES_COUNT / ONE_MEBI_BYTE}MiB`,\n      source: ErrorSource.AGENT,\n      startClocks: clocksNow(),\n    })\n    state.queueFullReported = true\n  }\n  const previousQueue = state.queuedPayloads\n  state.queuedPayloads = newPayloadQueue()\n  while (previousQueue.size() > 0) {\n    sendWithRetryStrategy(previousQueue.dequeue()!, state, sendStrategy, endpointType, reportError)\n  }\n}\n\nfunction shouldRetryRequest(response: HttpResponse) {\n  return (\n    response.type !== 'opaque' &&\n    ((response.status === 0 && !navigator.onLine) ||\n      response.status === 408 ||\n      response.status === 429 ||\n      isServerError(response.status))\n  )\n}\n\nexport function newRetryState(): RetryState {\n  return {\n    transportStatus: TransportStatus.UP,\n    currentBackoffTime: INITIAL_BACKOFF_TIME,\n    bandwidthMonitor: newBandwidthMonitor(),\n    queuedPayloads: newPayloadQueue(),\n    queueFullReported: false,\n  }\n}\n\nfunction newPayloadQueue() {\n  const queue: Payload[] = []\n  return {\n    bytesCount: 0,\n    enqueue(payload: Payload) {\n      if (this.isFull()) {\n        return\n      }\n      queue.push(payload)\n      this.bytesCount += payload.bytesCount\n    },\n    first() {\n      return queue[0]\n    },\n    dequeue() {\n      const payload = queue.shift()\n      if (payload) {\n        this.bytesCount -= payload.bytesCount\n      }\n      return payload\n    },\n    size() {\n      return queue.length\n    },\n    isFull() {\n      return this.bytesCount >= MAX_QUEUE_BYTES_COUNT\n    },\n  }\n}\n\nfunction newBandwidthMonitor() {\n  return {\n    ongoingRequestCount: 0,\n    ongoingByteCount: 0,\n    canHandle(payload: Payload) {\n      return (\n        this.ongoingRequestCount === 0 ||\n        (this.ongoingByteCount + payload.bytesCount <= MAX_ONGOING_BYTES_COUNT &&\n          this.ongoingRequestCount < MAX_ONGOING_REQUESTS)\n      )\n    },\n    add(payload: Payload) {\n      this.ongoingRequestCount += 1\n      this.ongoingByteCount += payload.bytesCount\n    },\n    remove(payload: Payload) {\n      this.ongoingRequestCount -= 1\n      this.ongoingByteCount -= payload.bytesCount\n    },\n  }\n}\n","import type { EndpointBuilder } from '../domain/configuration'\nimport { addTelemetryError } from '../domain/telemetry'\nimport type { Context } from '../tools/serialisation/context'\nimport { monitor } from '../tools/monitor'\nimport { addEventListener } from '../browser/addEventListener'\nimport type { RawError } from '../domain/error/error.types'\nimport { newRetryState, sendWithRetryStrategy } from './sendWithRetryStrategy'\nimport type { FlushReason } from './flushController'\n\n/**\n * Use POST request without content type to:\n * - avoid CORS preflight requests\n * - allow usage of sendBeacon\n *\n * multiple elements are sent separated by \\n in order\n * to be parsed correctly without content type header\n */\n\nexport type HttpRequest = ReturnType<typeof createHttpRequest>\n\nexport interface HttpResponse extends Context {\n  status: number\n  type?: ResponseType\n}\n\nexport interface Payload {\n  data: string | FormData\n  bytesCount: number\n  retry?: RetryInfo\n  flushReason?: FlushReason\n}\n\nexport interface RetryInfo {\n  count: number\n  lastFailureStatus: number\n}\n\nexport function createHttpRequest(\n  endpointBuilder: EndpointBuilder,\n  bytesLimit: number,\n  reportError: (error: RawError) => void\n) {\n  const retryState = newRetryState()\n  const sendStrategyForRetry = (payload: Payload, onResponse: (r: HttpResponse) => void) =>\n    fetchKeepAliveStrategy(endpointBuilder, bytesLimit, payload, onResponse)\n\n  return {\n    send: (payload: Payload) => {\n      sendWithRetryStrategy(payload, retryState, sendStrategyForRetry, endpointBuilder.endpointType, reportError)\n    },\n    /**\n     * Since fetch keepalive behaves like regular fetch on Firefox,\n     * keep using sendBeaconStrategy on exit\n     */\n    sendOnExit: (payload: Payload) => {\n      sendBeaconStrategy(endpointBuilder, bytesLimit, payload)\n    },\n  }\n}\n\nfunction sendBeaconStrategy(\n  endpointBuilder: EndpointBuilder,\n  bytesLimit: number,\n  { data, bytesCount, flushReason }: Payload\n) {\n  const canUseBeacon = !!navigator.sendBeacon && bytesCount < bytesLimit\n  if (canUseBeacon) {\n    try {\n      const beaconUrl = endpointBuilder.build('beacon', flushReason)\n      const isQueued = navigator.sendBeacon(beaconUrl, data)\n\n      if (isQueued) {\n        return\n      }\n    } catch (e) {\n      reportBeaconError(e)\n    }\n  }\n\n  const xhrUrl = endpointBuilder.build('xhr', flushReason)\n  sendXHR(xhrUrl, data)\n}\n\nlet hasReportedBeaconError = false\n\nfunction reportBeaconError(e: unknown) {\n  if (!hasReportedBeaconError) {\n    hasReportedBeaconError = true\n    addTelemetryError(e)\n  }\n}\n\nexport function fetchKeepAliveStrategy(\n  endpointBuilder: EndpointBuilder,\n  bytesLimit: number,\n  { data, bytesCount, flushReason, retry }: Payload,\n  onResponse?: (r: HttpResponse) => void\n) {\n  const canUseKeepAlive = isKeepAliveSupported() && bytesCount < bytesLimit\n  if (canUseKeepAlive) {\n    const fetchUrl = endpointBuilder.build('fetch', flushReason, retry)\n    fetch(fetchUrl, { method: 'POST', body: data, keepalive: true, mode: 'cors' }).then(\n      monitor((response: Response) => onResponse?.({ status: response.status, type: response.type })),\n      monitor(() => {\n        const xhrUrl = endpointBuilder.build('xhr', flushReason, retry)\n        // failed to queue the request\n        sendXHR(xhrUrl, data, onResponse)\n      })\n    )\n  } else {\n    const xhrUrl = endpointBuilder.build('xhr', flushReason, retry)\n    sendXHR(xhrUrl, data, onResponse)\n  }\n}\n\nfunction isKeepAliveSupported() {\n  // Request can throw, cf https://developer.mozilla.org/en-US/docs/Web/API/Request/Request#errors\n  try {\n    return window.Request && 'keepalive' in new Request('http://a')\n  } catch {\n    return false\n  }\n}\n\nexport function sendXHR(url: string, data: Payload['data'], onResponse?: (r: HttpResponse) => void) {\n  const request = new XMLHttpRequest()\n  request.open('POST', url, true)\n  addEventListener(\n    request,\n    'loadend',\n    () => {\n      onResponse?.({ status: request.status })\n    },\n    {\n      // prevent multiple onResponse callbacks\n      // if the xhr instance is reused by a third party\n      once: true,\n    }\n  )\n  request.send(data)\n}\n","import type {\n  Context,\n  EndpointBuilder,\n  TelemetryEvent,\n  Observable,\n  RawError,\n  PageExitEvent,\n  FlushEvent,\n} from '@datadog/browser-core'\nimport {\n  createFlushController,\n  Batch,\n  combine,\n  createHttpRequest,\n  isTelemetryReplicationAllowed,\n} from '@datadog/browser-core'\nimport type { RumConfiguration } from '../domain/configuration'\nimport type { LifeCycle } from '../domain/lifeCycle'\nimport { LifeCycleEventType } from '../domain/lifeCycle'\nimport { RumEventType } from '../rawRumEvent.types'\nimport type { RumEvent } from '../rumEvent.types'\n\nexport function startRumBatch(\n  configuration: RumConfiguration,\n  lifeCycle: LifeCycle,\n  telemetryEventObservable: Observable<TelemetryEvent & Context>,\n  reportError: (error: RawError) => void,\n  pageExitObservable: Observable<PageExitEvent>,\n  sessionExpireObservable: Observable<void>\n) {\n  const batch = makeRumBatch(configuration, reportError, pageExitObservable, sessionExpireObservable)\n\n  lifeCycle.subscribe(LifeCycleEventType.RUM_EVENT_COLLECTED, (serverRumEvent: RumEvent & Context) => {\n    if (serverRumEvent.type === RumEventType.VIEW) {\n      batch.upsert(serverRumEvent, serverRumEvent.view.id)\n    } else {\n      batch.add(serverRumEvent)\n    }\n  })\n\n  telemetryEventObservable.subscribe((event) => batch.add(event, isTelemetryReplicationAllowed(configuration)))\n\n  return batch\n}\n\nexport interface RumBatch {\n  flushObservable: Observable<FlushEvent>\n  add: (message: Context, replicated?: boolean) => void\n  upsert: (message: Context, key: string) => void\n}\n\nfunction makeRumBatch(\n  configuration: RumConfiguration,\n  reportError: (error: RawError) => void,\n  pageExitObservable: Observable<PageExitEvent>,\n  sessionExpireObservable: Observable<void>\n): RumBatch {\n  const { batch: primaryBatch, flushController: primaryFlushController } = createRumBatch(\n    configuration.rumEndpointBuilder\n  )\n  let replicaBatch: Batch | undefined\n  const replica = configuration.replica\n  if (replica !== undefined) {\n    replicaBatch = createRumBatch(replica.rumEndpointBuilder).batch\n  }\n\n  function createRumBatch(endpointBuilder: EndpointBuilder) {\n    const flushController = createFlushController({\n      messagesLimit: configuration.batchMessagesLimit,\n      bytesLimit: configuration.batchBytesLimit,\n      durationLimit: configuration.flushTimeout,\n      pageExitObservable,\n      sessionExpireObservable,\n    })\n\n    const batch = new Batch(\n      createHttpRequest(endpointBuilder, configuration.batchBytesLimit, reportError),\n      flushController,\n      configuration.messageBytesLimit\n    )\n\n    return {\n      batch,\n      flushController,\n    }\n  }\n\n  function withReplicaApplicationId(message: Context) {\n    return combine(message, { application: { id: replica!.applicationId } })\n  }\n\n  return {\n    flushObservable: primaryFlushController.flushObservable,\n    add: (message: Context, replicated = true) => {\n      primaryBatch.add(message)\n      if (replicaBatch && replicated) {\n        replicaBatch.add(withReplicaApplicationId(message))\n      }\n    },\n    upsert: (message: Context, key: string) => {\n      primaryBatch.upsert(message, key)\n      if (replicaBatch) {\n        replicaBatch.upsert(withReplicaApplicationId(message), key)\n      }\n    },\n  }\n}\n","import type { RelativeTime, Observable } from '@datadog/browser-core'\nimport { SESSION_TIME_OUT_DELAY, relativeNow, ValueHistory } from '@datadog/browser-core'\nimport type { LocationChange } from '../../browser/locationChangeObservable'\nimport type { LifeCycle } from '../lifeCycle'\nimport { LifeCycleEventType } from '../lifeCycle'\n\n/**\n * We want to attach to an event:\n * - the url corresponding to its start\n * - the referrer corresponding to the previous view url (or document referrer for initial view)\n */\n\nexport const URL_CONTEXT_TIME_OUT_DELAY = SESSION_TIME_OUT_DELAY\n\nexport interface UrlContext {\n  url: string\n  referrer: string\n}\n\nexport interface UrlContexts {\n  findUrl: (startTime?: RelativeTime) => UrlContext | undefined\n  stop: () => void\n}\n\nexport function startUrlContexts(\n  lifeCycle: LifeCycle,\n  locationChangeObservable: Observable<LocationChange>,\n  location: Location\n) {\n  const urlContextHistory = new ValueHistory<UrlContext>(URL_CONTEXT_TIME_OUT_DELAY)\n\n  let previousViewUrl: string | undefined\n\n  lifeCycle.subscribe(LifeCycleEventType.VIEW_ENDED, ({ endClocks }) => {\n    urlContextHistory.closeActive(endClocks.relative)\n  })\n\n  lifeCycle.subscribe(LifeCycleEventType.VIEW_CREATED, ({ startClocks }) => {\n    const viewUrl = location.href\n    urlContextHistory.add(\n      buildUrlContext({\n        url: viewUrl,\n        referrer: !previousViewUrl ? document.referrer : previousViewUrl,\n      }),\n      startClocks.relative\n    )\n    previousViewUrl = viewUrl\n  })\n\n  const locationChangeSubscription = locationChangeObservable.subscribe(({ newLocation }) => {\n    const current = urlContextHistory.find()\n    if (current) {\n      const changeTime = relativeNow()\n      urlContextHistory.closeActive(changeTime)\n      urlContextHistory.add(\n        buildUrlContext({\n          url: newLocation.href,\n          referrer: current.referrer,\n        }),\n        changeTime\n      )\n    }\n  })\n\n  function buildUrlContext({ url, referrer }: { url: string; referrer: string }) {\n    return {\n      url,\n      referrer,\n    }\n  }\n\n  return {\n    findUrl: (startTime?: RelativeTime) => urlContextHistory.find(startTime),\n    stop: () => {\n      locationChangeSubscription.unsubscribe()\n      urlContextHistory.stop()\n    },\n  }\n}\n","import {\n  addEventListener,\n  DOM_EVENT,\n  instrumentMethodAndCallOriginal,\n  Observable,\n  shallowClone,\n} from '@datadog/browser-core'\n\nexport interface LocationChange {\n  oldLocation: Readonly<Location>\n  newLocation: Readonly<Location>\n}\n\nexport function createLocationChangeObservable(location: Location) {\n  let currentLocation = shallowClone(location)\n  const observable = new Observable<LocationChange>(() => {\n    const { stop: stopHistoryTracking } = trackHistory(onLocationChange)\n    const { stop: stopHashTracking } = trackHash(onLocationChange)\n    return () => {\n      stopHistoryTracking()\n      stopHashTracking()\n    }\n  })\n\n  function onLocationChange() {\n    if (currentLocation.href === location.href) {\n      return\n    }\n    const newLocation = shallowClone(location)\n    observable.notify({\n      newLocation,\n      oldLocation: currentLocation,\n    })\n    currentLocation = newLocation\n  }\n\n  return observable\n}\n\nfunction trackHistory(onHistoryChange: () => void) {\n  const { stop: stopInstrumentingPushState } = instrumentMethodAndCallOriginal(history, 'pushState', {\n    after: onHistoryChange,\n  })\n  const { stop: stopInstrumentingReplaceState } = instrumentMethodAndCallOriginal(history, 'replaceState', {\n    after: onHistoryChange,\n  })\n  const { stop: removeListener } = addEventListener(window, DOM_EVENT.POP_STATE, onHistoryChange)\n\n  return {\n    stop: () => {\n      stopInstrumentingPushState()\n      stopInstrumentingReplaceState()\n      removeListener()\n    },\n  }\n}\n\nfunction trackHash(onHashChange: () => void) {\n  return addEventListener(window, DOM_EVENT.HASH_CHANGE, onHashChange)\n}\n","import type { RelativeTime, ContextValue, Context } from '@datadog/browser-core'\nimport {\n  CustomerDataType,\n  warnIfCustomerDataLimitReached,\n  throttle,\n  jsonStringify,\n  computeBytesCount,\n  noop,\n  isExperimentalFeatureEnabled,\n  SESSION_TIME_OUT_DELAY,\n  ValueHistory,\n  ExperimentalFeature,\n} from '@datadog/browser-core'\nimport type { LifeCycle } from '../lifeCycle'\nimport { LifeCycleEventType } from '../lifeCycle'\n\nexport const FEATURE_FLAG_CONTEXT_TIME_OUT_DELAY = SESSION_TIME_OUT_DELAY\nexport const BYTES_COMPUTATION_THROTTLING_DELAY = 200\n\nexport type FeatureFlagContext = Context\n\nexport interface FeatureFlagContexts {\n  findFeatureFlagEvaluations: (startTime?: RelativeTime) => FeatureFlagContext | undefined\n  getFeatureFlagBytesCount: () => number\n  addFeatureFlagEvaluation: (key: string, value: ContextValue) => void\n  stop: () => void\n}\n\n/**\n * Start feature flag contexts\n *\n * Feature flag contexts follow the life of views.\n * A new context is added when a view is created and ended when the view is ended\n *\n * Note: we choose not to add a new context at each evaluation to save memory\n */\nexport function startFeatureFlagContexts(\n  lifeCycle: LifeCycle,\n  computeBytesCountImpl = computeBytesCount\n): FeatureFlagContexts {\n  if (!isExperimentalFeatureEnabled(ExperimentalFeature.FEATURE_FLAGS)) {\n    return {\n      findFeatureFlagEvaluations: () => undefined,\n      getFeatureFlagBytesCount: () => 0,\n      addFeatureFlagEvaluation: noop,\n      stop: noop,\n    }\n  }\n\n  const featureFlagContexts = new ValueHistory<FeatureFlagContext>(FEATURE_FLAG_CONTEXT_TIME_OUT_DELAY)\n  let bytesCountCache = 0\n  let alreadyWarned = false\n\n  lifeCycle.subscribe(LifeCycleEventType.VIEW_ENDED, ({ endClocks }) => {\n    featureFlagContexts.closeActive(endClocks.relative)\n  })\n\n  lifeCycle.subscribe(LifeCycleEventType.VIEW_CREATED, ({ startClocks }) => {\n    featureFlagContexts.add({}, startClocks.relative)\n    bytesCountCache = 0\n  })\n\n  // Throttle the bytes computation to minimize the impact on performance.\n  // Especially useful if the user call addFeatureFlagEvaluation API synchronously multiple times in a row\n  const { throttled: computeBytesCountThrottled, cancel: cancelPendingComputation } = throttle((context: Context) => {\n    bytesCountCache = computeBytesCountImpl(jsonStringify(context)!)\n    if (!alreadyWarned) {\n      alreadyWarned = warnIfCustomerDataLimitReached(bytesCountCache, CustomerDataType.FeatureFlag)\n    }\n  }, BYTES_COMPUTATION_THROTTLING_DELAY)\n\n  return {\n    findFeatureFlagEvaluations: (startTime?: RelativeTime) => featureFlagContexts.find(startTime),\n    getFeatureFlagBytesCount: () => {\n      const currentContext = featureFlagContexts.find()\n      if (!currentContext) {\n        return 0\n      }\n\n      return bytesCountCache\n    },\n    addFeatureFlagEvaluation: (key: string, value: ContextValue) => {\n      const currentContext = featureFlagContexts.find()\n      if (currentContext) {\n        currentContext[key] = value\n        computeBytesCountThrottled(currentContext)\n      }\n    },\n    stop: cancelPendingComputation,\n  }\n}\n","import type { Context, ContextManager, FlushEvent, Observable, Telemetry } from '@datadog/browser-core'\nimport { isEmptyObject, includes, performDraw, ONE_SECOND, addTelemetryDebug, setInterval } from '@datadog/browser-core'\nimport { RumEventType } from '../rawRumEvent.types'\nimport type { RumEvent } from '../rumEvent.types'\nimport type { RumConfiguration } from './configuration'\nimport type { FeatureFlagContexts } from './contexts/featureFlagContext'\nimport type { LifeCycle } from './lifeCycle'\nimport { LifeCycleEventType } from './lifeCycle'\n\nexport const MEASURES_PERIOD_DURATION = 10 * ONE_SECOND\n\ntype Measure = {\n  min: number\n  max: number\n  sum: number\n}\n\ntype CurrentPeriodMeasures = {\n  batchCount: number\n  batchBytesCount: Measure\n  batchMessagesCount: Measure\n  globalContextBytes: Measure\n  userContextBytes: Measure\n  featureFlagBytes: Measure\n}\n\ntype CurrentBatchMeasures = {\n  globalContextBytes: Measure\n  userContextBytes: Measure\n  featureFlagBytes: Measure\n}\n\nlet currentPeriodMeasures: CurrentPeriodMeasures\nlet currentBatchMeasures: CurrentBatchMeasures\nlet batchHasRumEvent: boolean\n\nexport function startCustomerDataTelemetry(\n  configuration: RumConfiguration,\n  telemetry: Telemetry,\n  lifeCycle: LifeCycle,\n  globalContextManager: ContextManager,\n  userContextManager: ContextManager,\n  featureFlagContexts: FeatureFlagContexts,\n  batchFlushObservable: Observable<FlushEvent>\n) {\n  const customerDataTelemetryEnabled = telemetry.enabled && performDraw(configuration.customerDataTelemetrySampleRate)\n  if (!customerDataTelemetryEnabled) {\n    return\n  }\n\n  initCurrentPeriodMeasures()\n  initCurrentBatchMeasures()\n\n  // We measure the data of every view updates even if there could only be one per batch due to the upsert\n  // It means that contexts bytes count sums can be higher than it really is\n  lifeCycle.subscribe(LifeCycleEventType.RUM_EVENT_COLLECTED, (event: RumEvent & Context) => {\n    batchHasRumEvent = true\n    updateMeasure(\n      currentBatchMeasures.globalContextBytes,\n      !isEmptyObject(globalContextManager.get()) ? globalContextManager.getBytesCount() : 0\n    )\n\n    updateMeasure(\n      currentBatchMeasures.userContextBytes,\n      !isEmptyObject(userContextManager.get()) ? userContextManager.getBytesCount() : 0\n    )\n\n    const featureFlagContext = featureFlagContexts.findFeatureFlagEvaluations()\n    const hasFeatureFlagContext =\n      includes([RumEventType.VIEW, RumEventType.ERROR], event.type) &&\n      featureFlagContext &&\n      !isEmptyObject(featureFlagContext)\n    updateMeasure(\n      currentBatchMeasures.featureFlagBytes,\n      hasFeatureFlagContext ? featureFlagContexts.getFeatureFlagBytesCount() : 0\n    )\n  })\n\n  batchFlushObservable.subscribe(({ bytesCount, messagesCount }) => {\n    // Don't measure batch that only contains telemetry events to avoid batch sending loop\n    // It could happen because after each batch we are adding a customer data measures telemetry event to the next one\n    if (!batchHasRumEvent) {\n      return\n    }\n    currentPeriodMeasures.batchCount += 1\n    updateMeasure(currentPeriodMeasures.batchBytesCount, bytesCount)\n    updateMeasure(currentPeriodMeasures.batchMessagesCount, messagesCount)\n    mergeMeasure(currentPeriodMeasures.globalContextBytes, currentBatchMeasures.globalContextBytes)\n    mergeMeasure(currentPeriodMeasures.userContextBytes, currentBatchMeasures.userContextBytes)\n    mergeMeasure(currentPeriodMeasures.featureFlagBytes, currentBatchMeasures.featureFlagBytes)\n    initCurrentBatchMeasures()\n  })\n\n  setInterval(sendCurrentPeriodMeasures, MEASURES_PERIOD_DURATION)\n}\n\nfunction sendCurrentPeriodMeasures() {\n  if (currentPeriodMeasures.batchCount === 0) {\n    return\n  }\n\n  addTelemetryDebug('Customer data measures', currentPeriodMeasures)\n  initCurrentPeriodMeasures()\n}\n\nfunction createMeasure(): Measure {\n  return { min: Infinity, max: 0, sum: 0 }\n}\n\nfunction updateMeasure(measure: Measure, value: number) {\n  measure.sum += value\n  measure.min = Math.min(measure.min, value)\n  measure.max = Math.max(measure.max, value)\n}\n\nfunction mergeMeasure(target: Measure, source: Measure) {\n  target.sum += source.sum\n  target.min = Math.min(target.min, source.min)\n  target.max = Math.max(target.max, source.max)\n}\n\nfunction initCurrentPeriodMeasures() {\n  currentPeriodMeasures = {\n    batchCount: 0,\n    batchBytesCount: createMeasure(),\n    batchMessagesCount: createMeasure(),\n    globalContextBytes: createMeasure(),\n    userContextBytes: createMeasure(),\n    featureFlagBytes: createMeasure(),\n  }\n}\n\nfunction initCurrentBatchMeasures() {\n  batchHasRumEvent = false\n  currentBatchMeasures = {\n    globalContextBytes: createMeasure(),\n    userContextBytes: createMeasure(),\n    featureFlagBytes: createMeasure(),\n  }\n}\n","import type { Duration, RelativeTime } from '@datadog/browser-core'\nimport {\n  elapsed,\n  ValueHistory,\n  SESSION_TIME_OUT_DELAY,\n  toServerDuration,\n  addEventListeners,\n  relativeNow,\n  DOM_EVENT,\n} from '@datadog/browser-core'\nimport type { PageStateServerEntry } from '../../rawRumEvent.types'\n\n// Arbitrary value to cap number of element for memory consumption in the browser\nexport const MAX_PAGE_STATE_ENTRIES = 4000\n// Arbitrary value to cap number of element for backend & to save bandwidth\nexport const MAX_PAGE_STATE_ENTRIES_SELECTABLE = 500\n\nexport const PAGE_STATE_CONTEXT_TIME_OUT_DELAY = SESSION_TIME_OUT_DELAY\n\nexport const enum PageState {\n  ACTIVE = 'active',\n  PASSIVE = 'passive',\n  HIDDEN = 'hidden',\n  FROZEN = 'frozen',\n  TERMINATED = 'terminated',\n}\n\nexport type PageStateEntry = { state: PageState; startTime: RelativeTime }\n\nexport interface PageStateHistory {\n  findAll: (startTime: RelativeTime, duration: Duration) => PageStateServerEntry[] | undefined\n  isInActivePageStateAt: (startTime: RelativeTime) => boolean\n  addPageState(nextPageState: PageState, startTime?: RelativeTime): void\n  stop: () => void\n}\n\nexport function startPageStateHistory(\n  maxPageStateEntriesSelectable = MAX_PAGE_STATE_ENTRIES_SELECTABLE\n): PageStateHistory {\n  const pageStateHistory = new ValueHistory<PageStateEntry>(PAGE_STATE_CONTEXT_TIME_OUT_DELAY, MAX_PAGE_STATE_ENTRIES)\n\n  let currentPageState: PageState\n  addPageState(getPageState(), relativeNow())\n\n  const { stop: stopEventListeners } = addEventListeners(\n    window,\n    [\n      DOM_EVENT.PAGE_SHOW,\n      DOM_EVENT.FOCUS,\n      DOM_EVENT.BLUR,\n      DOM_EVENT.VISIBILITY_CHANGE,\n      DOM_EVENT.RESUME,\n      DOM_EVENT.FREEZE,\n      DOM_EVENT.PAGE_HIDE,\n    ],\n    (event) => {\n      // Only get events fired by the browser to avoid false currentPageState changes done with custom events\n      // cf: developer extension auto flush: https://github.com/DataDog/browser-sdk/blob/2f72bf05a672794c9e33965351964382a94c72ba/developer-extension/src/panel/flushEvents.ts#L11-L12\n      if (event.isTrusted) {\n        addPageState(computePageState(event), event.timeStamp as RelativeTime)\n      }\n    },\n    { capture: true }\n  )\n\n  function addPageState(nextPageState: PageState, startTime = relativeNow()) {\n    if (nextPageState === currentPageState) {\n      return\n    }\n\n    currentPageState = nextPageState\n    pageStateHistory.closeActive(startTime)\n    pageStateHistory.add({ state: currentPageState, startTime }, startTime)\n  }\n\n  return {\n    findAll: (eventStartTime: RelativeTime, duration: Duration): PageStateServerEntry[] | undefined => {\n      const pageStateEntries = pageStateHistory.findAll(eventStartTime, duration)\n\n      if (pageStateEntries.length === 0) {\n        return\n      }\n\n      const pageStateServerEntries = []\n      // limit the number of entries to return\n      const limit = Math.max(0, pageStateEntries.length - maxPageStateEntriesSelectable)\n\n      // loop page state entries backward to return the selected ones in desc order\n      for (let index = pageStateEntries.length - 1; index >= limit; index--) {\n        const pageState = pageStateEntries[index]\n        // compute the start time relative to the event start time (ex: to be relative to the view start time)\n        const relativeStartTime = elapsed(eventStartTime, pageState.startTime)\n\n        pageStateServerEntries.push({\n          state: pageState.state,\n          start: toServerDuration(relativeStartTime),\n        })\n      }\n\n      return pageStateServerEntries\n    },\n    isInActivePageStateAt: (startTime: RelativeTime) => {\n      const pageStateEntry = pageStateHistory.find(startTime)\n      return pageStateEntry !== undefined && pageStateEntry.state === PageState.ACTIVE\n    },\n    addPageState,\n    stop: () => {\n      stopEventListeners()\n      pageStateHistory.stop()\n    },\n  }\n}\n\nfunction computePageState(event: Event) {\n  if (event.type === DOM_EVENT.FREEZE) {\n    return PageState.FROZEN\n  } else if (event.type === DOM_EVENT.PAGE_HIDE) {\n    return (event as PageTransitionEvent).persisted ? PageState.FROZEN : PageState.TERMINATED\n  }\n  return getPageState()\n}\n\nfunction getPageState() {\n  if (document.visibilityState === 'hidden') {\n    return PageState.HIDDEN\n  }\n\n  if (document.hasFocus()) {\n    return PageState.ACTIVE\n  }\n\n  return PageState.PASSIVE\n}\n","import { INTAKE_SITE_STAGING, INTAKE_SITE_US1, INTAKE_SITE_EU1 } from '@datadog/browser-core'\nimport type { RumConfiguration } from './configuration'\nimport type { ViewContext } from './contexts/viewContexts'\nimport type { RumSession } from './rumSessionManager'\n\nexport function getSessionReplayUrl(\n  configuration: RumConfiguration,\n  {\n    session,\n    viewContext,\n    errorType,\n  }: {\n    session?: RumSession\n    viewContext?: ViewContext\n    errorType?: string\n  }\n): string {\n  const sessionId = session ? session.id : 'no-session-id'\n  const parameters: string[] = []\n  if (errorType !== undefined) {\n    parameters.push(`error-type=${errorType}`)\n  }\n  if (viewContext) {\n    parameters.push(`seed=${viewContext.id}`)\n    parameters.push(`from=${viewContext.startClocks.timeStamp}`)\n  }\n\n  const origin = getDatadogSiteUrl(configuration)\n  const path = `/rum/replay/sessions/${sessionId}`\n  return `${origin}${path}?${parameters.join('&')}`\n}\n\nexport function getDatadogSiteUrl(rumConfiguration: RumConfiguration) {\n  const site = rumConfiguration.site\n  const subdomain = rumConfiguration.subdomain || getSiteDefaultSubdomain(rumConfiguration)\n  return `https://${subdomain ? `${subdomain}.` : ''}${site}`\n}\n\nfunction getSiteDefaultSubdomain(configuration: RumConfiguration): string | undefined {\n  switch (configuration.site) {\n    case INTAKE_SITE_US1:\n    case INTAKE_SITE_EU1:\n      return 'app'\n    case INTAKE_SITE_STAGING:\n      return 'dd'\n    default:\n      return undefined\n  }\n}\n","// Keep the following in sync with packages/rum/src/entries/main.ts\nimport type { RelativeTime } from '@datadog/browser-core'\nimport { Observable, defineGlobal, getGlobalObject, noop } from '@datadog/browser-core'\nimport type { RumPublicApi } from '@datadog/browser-rum-core'\nimport { makeRumPublicApi, startRum } from '@datadog/browser-rum-core'\nimport { getSessionReplayLink } from '../domain/getSessionReplayLink'\n\nexport {\n  CommonProperties,\n  RumPublicApi as RumGlobal,\n  RumInitConfiguration,\n  // Events\n  RumEvent,\n  RumActionEvent,\n  RumErrorEvent,\n  RumLongTaskEvent,\n  RumResourceEvent,\n  RumViewEvent,\n  // Events context\n  RumEventDomainContext,\n  RumViewEventDomainContext,\n  RumErrorEventDomainContext,\n  RumActionEventDomainContext,\n  RumFetchResourceEventDomainContext,\n  RumXhrResourceEventDomainContext,\n  RumOtherResourceEventDomainContext,\n  RumLongTaskEventDomainContext,\n} from '@datadog/browser-rum-core'\nexport { DefaultPrivacyLevel } from '@datadog/browser-core'\n\nexport const datadogRum = makeRumPublicApi(startRum, {\n  start: noop,\n  stop: noop,\n  onRumStart: noop,\n  isRecording: () => false,\n  getReplayStats: () => undefined,\n  getSessionReplayLink,\n  getSerializedNodeId: () => undefined,\n  recorderStartObservable: new Observable<RelativeTime>(),\n})\n\ninterface BrowserWindow extends Window {\n  DD_RUM?: RumPublicApi\n}\ndefineGlobal(getGlobalObject<BrowserWindow>(), 'DD_RUM', datadogRum)\n","import { catchUserErrors } from '../tools/catchUserErrors'\nimport { setDebugMode } from '../tools/monitor'\nimport { assign } from '../tools/utils/polyfills'\n\n// replaced at build time\ndeclare const __BUILD_ENV__SDK_VERSION__: string\n\nexport function makePublicApi<T>(stub: T): T & { onReady(callback: () => void): void; version: string } {\n  const publicApi = assign(\n    {\n      version: __BUILD_ENV__SDK_VERSION__,\n\n      // This API method is intentionally not monitored, since the only thing executed is the\n      // user-provided 'callback'.  All SDK usages executed in the callback should be monitored, and\n      // we don't want to interfere with the user uncaught exceptions.\n      onReady(callback: () => void) {\n        callback()\n      },\n    },\n    stub\n  )\n\n  // Add a \"hidden\" property to set debug mode. We define it that way to hide it\n  // as much as possible but of course it's not a real protection.\n  Object.defineProperty(publicApi, '_setDebug', {\n    get() {\n      return setDebugMode\n    },\n    enumerable: false,\n  })\n\n  return publicApi\n}\n\nexport function defineGlobal<Global, Name extends keyof Global>(global: Global, name: Name, api: Global[Name]) {\n  const existingGlobalVariable = global[name] as { q?: Array<() => void> } | undefined\n  global[name] = api\n  if (existingGlobalVariable && existingGlobalVariable.q) {\n    existingGlobalVariable.q.forEach((fn) => catchUserErrors(fn, 'onReady callback threw an error:')())\n  }\n}\n","import type { Context, InitConfiguration, TimeStamp, RelativeTime, User, Observable } from '@datadog/browser-core'\nimport {\n  noop,\n  CustomerDataType,\n  willSyntheticsInjectRum,\n  assign,\n  BoundedBuffer,\n  createContextManager,\n  deepClone,\n  makePublicApi,\n  monitor,\n  clocksNow,\n  timeStampNow,\n  display,\n  callMonitored,\n  createHandlingStack,\n  canUseEventBridge,\n  checkUser,\n  sanitizeUser,\n  sanitize,\n} from '@datadog/browser-core'\nimport type { LifeCycle } from '../domain/lifeCycle'\nimport type { ViewContexts } from '../domain/contexts/viewContexts'\nimport type { RumSessionManager } from '../domain/rumSessionManager'\nimport type { ReplayStats } from '../rawRumEvent.types'\nimport { ActionType } from '../rawRumEvent.types'\nimport type { RumConfiguration, RumInitConfiguration } from '../domain/configuration'\nimport { validateAndBuildRumConfiguration } from '../domain/configuration'\nimport type { ViewOptions } from '../domain/rumEventsCollection/view/trackViews'\nimport { buildCommonContext } from '../domain/contexts/commonContext'\nimport type { startRum } from './startRum'\n\nexport type RumPublicApi = ReturnType<typeof makeRumPublicApi>\n\nexport type StartRum = typeof startRum\n\ntype StartRumResult = ReturnType<typeof startRum>\n\nexport interface RecorderApi {\n  start: () => void\n  stop: () => void\n  onRumStart: (\n    lifeCycle: LifeCycle,\n    configuration: RumConfiguration,\n    sessionManager: RumSessionManager,\n    viewContexts: ViewContexts\n  ) => void\n  isRecording: () => boolean\n  getReplayStats: (viewId: string) => ReplayStats | undefined\n  getSessionReplayLink: (\n    configuration: RumConfiguration,\n    sessionManager: RumSessionManager,\n    viewContexts: ViewContexts\n  ) => string | undefined\n  getSerializedNodeId: (node: Node) => number | undefined\n  recorderStartObservable: Observable<RelativeTime>\n}\ninterface RumPublicApiOptions {\n  ignoreInitIfSyntheticsWillInjectRum?: boolean\n}\n\nexport function makeRumPublicApi(\n  startRumImpl: StartRum,\n  recorderApi: RecorderApi,\n  { ignoreInitIfSyntheticsWillInjectRum = true }: RumPublicApiOptions = {}\n) {\n  let isAlreadyInitialized = false\n\n  const globalContextManager = createContextManager(CustomerDataType.GlobalContext)\n  const userContextManager = createContextManager(CustomerDataType.User)\n\n  let getInternalContextStrategy: StartRumResult['getInternalContext'] = () => undefined\n  let getInitConfigurationStrategy = (): InitConfiguration | undefined => undefined\n  let stopSessionStrategy: () => void = noop\n  let getSessionReplayLinkStrategy: () => string | undefined = () => undefined\n\n  let bufferApiCalls = new BoundedBuffer()\n  let addTimingStrategy: StartRumResult['addTiming'] = (name, time = timeStampNow()) => {\n    bufferApiCalls.add(() => addTimingStrategy(name, time))\n  }\n  let startViewStrategy: StartRumResult['startView'] = (options, startClocks = clocksNow()) => {\n    bufferApiCalls.add(() => startViewStrategy(options, startClocks))\n  }\n  let addActionStrategy: StartRumResult['addAction'] = (\n    action,\n    commonContext = buildCommonContext(globalContextManager, userContextManager, recorderApi)\n  ) => {\n    bufferApiCalls.add(() => addActionStrategy(action, commonContext))\n  }\n  let addErrorStrategy: StartRumResult['addError'] = (\n    providedError,\n    commonContext = buildCommonContext(globalContextManager, userContextManager, recorderApi)\n  ) => {\n    bufferApiCalls.add(() => addErrorStrategy(providedError, commonContext))\n  }\n\n  let addFeatureFlagEvaluationStrategy: StartRumResult['addFeatureFlagEvaluation'] = (key: string, value: any) => {\n    bufferApiCalls.add(() => addFeatureFlagEvaluationStrategy(key, value))\n  }\n\n  function initRum(initConfiguration: RumInitConfiguration) {\n    // This function should be available, regardless of initialization success.\n    getInitConfigurationStrategy = () => deepClone<InitConfiguration>(initConfiguration)\n\n    // If we are in a Synthetics test configured to automatically inject a RUM instance, we want to\n    // completely discard the customer application RUM instance by ignoring their init() call.  But,\n    // we should not ignore the init() call from the Synthetics-injected RUM instance, so the\n    // internal `ignoreInitIfSyntheticsWillInjectRum` option is here to bypass this condition.\n    if (ignoreInitIfSyntheticsWillInjectRum && willSyntheticsInjectRum()) {\n      return\n    }\n\n    const eventBridgeAvailable = canUseEventBridge()\n    if (eventBridgeAvailable) {\n      initConfiguration = overrideInitConfigurationForBridge(initConfiguration)\n    }\n\n    if (!canInitRum(initConfiguration)) {\n      return\n    }\n\n    const configuration = validateAndBuildRumConfiguration(initConfiguration)\n    if (!configuration) {\n      return\n    }\n\n    if (!eventBridgeAvailable && !configuration.sessionStoreStrategyType) {\n      display.warn('No storage available for session. We will not send any data.')\n      return\n    }\n\n    if (!configuration.trackViewsManually) {\n      doStartRum(initConfiguration, configuration)\n    } else {\n      // drain beforeInitCalls by buffering them until we start RUM\n      // if we get a startView, drain re-buffered calls before continuing to drain beforeInitCalls\n      // in order to ensure that calls are processed in order\n      const beforeInitCalls = bufferApiCalls\n      bufferApiCalls = new BoundedBuffer()\n\n      startViewStrategy = (options) => {\n        doStartRum(initConfiguration, configuration, options)\n      }\n      beforeInitCalls.drain()\n    }\n\n    isAlreadyInitialized = true\n  }\n\n  function doStartRum(\n    initConfiguration: RumInitConfiguration,\n    configuration: RumConfiguration,\n    initialViewOptions?: ViewOptions\n  ) {\n    const startRumResults = startRumImpl(\n      initConfiguration,\n      configuration,\n      recorderApi,\n      globalContextManager,\n      userContextManager,\n      initialViewOptions\n    )\n    getSessionReplayLinkStrategy = () =>\n      recorderApi.getSessionReplayLink(configuration, startRumResults.session, startRumResults.viewContexts)\n    ;({\n      startView: startViewStrategy,\n      addAction: addActionStrategy,\n      addError: addErrorStrategy,\n      addTiming: addTimingStrategy,\n      addFeatureFlagEvaluation: addFeatureFlagEvaluationStrategy,\n      getInternalContext: getInternalContextStrategy,\n      stopSession: stopSessionStrategy,\n    } = startRumResults)\n    bufferApiCalls.drain()\n\n    recorderApi.onRumStart(\n      startRumResults.lifeCycle,\n      configuration,\n      startRumResults.session,\n      startRumResults.viewContexts\n    )\n  }\n\n  const startView: {\n    (name?: string): void\n    (options: ViewOptions): void\n  } = monitor((options?: string | ViewOptions) => {\n    const sanitizedOptions = typeof options === 'object' ? options : { name: options }\n    startViewStrategy(sanitizedOptions)\n  })\n\n  const rumPublicApi = makePublicApi({\n    init: monitor(initRum),\n\n    /** @deprecated: use setGlobalContextProperty instead */\n    addRumGlobalContext: monitor(globalContextManager.add),\n    setGlobalContextProperty: monitor(globalContextManager.setContextProperty),\n\n    /** @deprecated: use removeGlobalContextProperty instead */\n    removeRumGlobalContext: monitor(globalContextManager.remove),\n    removeGlobalContextProperty: monitor(globalContextManager.removeContextProperty),\n\n    /** @deprecated: use getGlobalContext instead */\n    getRumGlobalContext: monitor(globalContextManager.get),\n    getGlobalContext: monitor(globalContextManager.getContext),\n\n    /** @deprecated: use setGlobalContext instead */\n    setRumGlobalContext: monitor(globalContextManager.set),\n    setGlobalContext: monitor(globalContextManager.setContext),\n\n    clearGlobalContext: monitor(globalContextManager.clearContext),\n\n    getInternalContext: monitor((startTime?: number) => getInternalContextStrategy(startTime)),\n    getInitConfiguration: monitor(() => getInitConfigurationStrategy()),\n\n    addAction: monitor((name: string, context?: object) => {\n      addActionStrategy({\n        name: sanitize(name)!,\n        context: sanitize(context) as Context,\n        startClocks: clocksNow(),\n        type: ActionType.CUSTOM,\n      })\n    }),\n\n    addError: (error: unknown, context?: object) => {\n      const handlingStack = createHandlingStack()\n      callMonitored(() => {\n        addErrorStrategy({\n          error, // Do not sanitize error here, it is needed unserialized by computeRawError()\n          handlingStack,\n          context: sanitize(context) as Context,\n          startClocks: clocksNow(),\n        })\n      })\n    },\n\n    addTiming: monitor((name: string, time?: number) => {\n      addTimingStrategy(sanitize(name)!, time as RelativeTime | TimeStamp | undefined)\n    }),\n\n    setUser: monitor((newUser: User) => {\n      if (checkUser(newUser)) {\n        userContextManager.setContext(sanitizeUser(newUser as Context))\n      }\n    }),\n\n    getUser: monitor(userContextManager.getContext),\n\n    setUserProperty: monitor((key, property) => {\n      const sanitizedProperty = sanitizeUser({ [key]: property })[key]\n      userContextManager.setContextProperty(key, sanitizedProperty)\n    }),\n\n    removeUserProperty: monitor(userContextManager.removeContextProperty),\n\n    /** @deprecated: renamed to clearUser */\n    removeUser: monitor(userContextManager.clearContext),\n    clearUser: monitor(userContextManager.clearContext),\n\n    startView,\n\n    stopSession: monitor(() => {\n      stopSessionStrategy()\n    }),\n\n    startSessionReplayRecording: monitor(recorderApi.start),\n    stopSessionReplayRecording: monitor(recorderApi.stop),\n\n    /**\n     * This feature is currently in beta. For more information see the full [feature flag tracking guide](https://docs.datadoghq.com/real_user_monitoring/feature_flag_tracking/).\n     */\n    addFeatureFlagEvaluation: monitor((key: string, value: any) => {\n      addFeatureFlagEvaluationStrategy(sanitize(key)!, sanitize(value))\n    }),\n    getSessionReplayLink: monitor(() => getSessionReplayLinkStrategy()),\n  })\n\n  return rumPublicApi\n\n  function canInitRum(initConfiguration: RumInitConfiguration) {\n    if (isAlreadyInitialized) {\n      if (!initConfiguration.silentMultipleInit) {\n        display.error('DD_RUM is already initialized.')\n      }\n      return false\n    }\n    return true\n  }\n\n  function overrideInitConfigurationForBridge<C extends InitConfiguration>(initConfiguration: C): C {\n    return assign({}, initConfiguration, {\n      applicationId: '00000000-aaaa-0000-aaaa-000000000000',\n      clientToken: 'empty',\n      sessionSampleRate: 100,\n    })\n  }\n}\n","import type { Observable, TelemetryEvent, RawError, ContextManager } from '@datadog/browser-core'\nimport {\n  sendToExtension,\n  createPageExitObservable,\n  TelemetryService,\n  addTelemetryConfiguration,\n  startTelemetry,\n  canUseEventBridge,\n  getEventBridge,\n  addTelemetryDebug,\n} from '@datadog/browser-core'\nimport { createDOMMutationObservable } from '../browser/domMutationObservable'\nimport { startPerformanceCollection } from '../browser/performanceCollection'\nimport { startRumAssembly } from '../domain/assembly'\nimport { startInternalContext } from '../domain/contexts/internalContext'\nimport { LifeCycle, LifeCycleEventType } from '../domain/lifeCycle'\nimport { startViewContexts } from '../domain/contexts/viewContexts'\nimport { startRequestCollection } from '../domain/requestCollection'\nimport { startActionCollection } from '../domain/rumEventsCollection/action/actionCollection'\nimport { startErrorCollection } from '../domain/rumEventsCollection/error/errorCollection'\nimport { startLongTaskCollection } from '../domain/rumEventsCollection/longTask/longTaskCollection'\nimport { startResourceCollection } from '../domain/rumEventsCollection/resource/resourceCollection'\nimport { startViewCollection } from '../domain/rumEventsCollection/view/viewCollection'\nimport type { RumSessionManager } from '../domain/rumSessionManager'\nimport { startRumSessionManager, startRumSessionManagerStub } from '../domain/rumSessionManager'\nimport { startRumBatch } from '../transport/startRumBatch'\nimport { startRumEventBridge } from '../transport/startRumEventBridge'\nimport { startUrlContexts } from '../domain/contexts/urlContexts'\nimport type { LocationChange } from '../browser/locationChangeObservable'\nimport { createLocationChangeObservable } from '../browser/locationChangeObservable'\nimport type { RumConfiguration, RumInitConfiguration } from '../domain/configuration'\nimport { serializeRumConfiguration } from '../domain/configuration'\nimport type { ViewOptions } from '../domain/rumEventsCollection/view/trackViews'\nimport { startFeatureFlagContexts } from '../domain/contexts/featureFlagContext'\nimport { startCustomerDataTelemetry } from '../domain/startCustomerDataTelemetry'\nimport { startPageStateHistory } from '../domain/contexts/pageStateHistory'\nimport type { CommonContext } from '../domain/contexts/commonContext'\nimport { buildCommonContext } from '../domain/contexts/commonContext'\nimport { startWebVitalTelemetryDebug } from '../domain/rumEventsCollection/view/startWebVitalTelemetryDebug'\nimport type { RecorderApi } from './rumPublicApi'\n\nexport function startRum(\n  initConfiguration: RumInitConfiguration,\n  configuration: RumConfiguration,\n  recorderApi: RecorderApi,\n  globalContextManager: ContextManager,\n  userContextManager: ContextManager,\n  initialViewOptions?: ViewOptions\n) {\n  const lifeCycle = new LifeCycle()\n\n  lifeCycle.subscribe(LifeCycleEventType.RUM_EVENT_COLLECTED, (event) => sendToExtension('rum', event))\n\n  const telemetry = startRumTelemetry(configuration)\n  telemetry.setContextProvider(() => ({\n    application: {\n      id: configuration.applicationId,\n    },\n    session: {\n      id: session.findTrackedSession()?.id,\n    },\n    view: {\n      id: viewContexts.findView()?.id,\n    },\n    action: {\n      id: actionContexts.findActionId(),\n    },\n  }))\n\n  const reportError = (error: RawError) => {\n    lifeCycle.notify(LifeCycleEventType.RAW_ERROR_COLLECTED, { error })\n    addTelemetryDebug('Error reported to customer', { 'error.message': error.message })\n  }\n  const featureFlagContexts = startFeatureFlagContexts(lifeCycle)\n\n  const pageExitObservable = createPageExitObservable()\n  pageExitObservable.subscribe((event) => {\n    lifeCycle.notify(LifeCycleEventType.PAGE_EXITED, event)\n  })\n\n  const session = !canUseEventBridge() ? startRumSessionManager(configuration, lifeCycle) : startRumSessionManagerStub()\n  if (!canUseEventBridge()) {\n    const batch = startRumBatch(\n      configuration,\n      lifeCycle,\n      telemetry.observable,\n      reportError,\n      pageExitObservable,\n      session.expireObservable\n    )\n    startCustomerDataTelemetry(\n      configuration,\n      telemetry,\n      lifeCycle,\n      globalContextManager,\n      userContextManager,\n      featureFlagContexts,\n      batch.flushObservable\n    )\n  } else {\n    startRumEventBridge(lifeCycle)\n  }\n\n  const domMutationObservable = createDOMMutationObservable()\n  const locationChangeObservable = createLocationChangeObservable(location)\n\n  const { viewContexts, pageStateHistory, urlContexts, actionContexts, addAction } = startRumEventCollection(\n    lifeCycle,\n    configuration,\n    location,\n    session,\n    locationChangeObservable,\n    domMutationObservable,\n    () => buildCommonContext(globalContextManager, userContextManager, recorderApi),\n    reportError\n  )\n\n  addTelemetryConfiguration(serializeRumConfiguration(initConfiguration))\n\n  startLongTaskCollection(lifeCycle, session)\n  startResourceCollection(lifeCycle, configuration, session, pageStateHistory)\n\n  const webVitalTelemetryDebug = startWebVitalTelemetryDebug(configuration, telemetry, recorderApi, session)\n  const { addTiming, startView } = startViewCollection(\n    lifeCycle,\n    configuration,\n    location,\n    domMutationObservable,\n    locationChangeObservable,\n    featureFlagContexts,\n    pageStateHistory,\n    recorderApi,\n    webVitalTelemetryDebug,\n    initialViewOptions\n  )\n  const { addError } = startErrorCollection(lifeCycle, pageStateHistory, featureFlagContexts)\n\n  startRequestCollection(lifeCycle, configuration, session)\n  startPerformanceCollection(lifeCycle, configuration)\n\n  const internalContext = startInternalContext(\n    configuration.applicationId,\n    session,\n    viewContexts,\n    actionContexts,\n    urlContexts\n  )\n\n  return {\n    addAction,\n    addError,\n    addTiming,\n    addFeatureFlagEvaluation: featureFlagContexts.addFeatureFlagEvaluation,\n    startView,\n    lifeCycle,\n    viewContexts,\n    session,\n    stopSession: () => session.expire(),\n    getInternalContext: internalContext.get,\n  }\n}\n\nfunction startRumTelemetry(configuration: RumConfiguration) {\n  const telemetry = startTelemetry(TelemetryService.RUM, configuration)\n  if (canUseEventBridge()) {\n    const bridge = getEventBridge<'internal_telemetry', TelemetryEvent>()!\n    telemetry.observable.subscribe((event) => bridge.send('internal_telemetry', event))\n  }\n  return telemetry\n}\n\nexport function startRumEventCollection(\n  lifeCycle: LifeCycle,\n  configuration: RumConfiguration,\n  location: Location,\n  sessionManager: RumSessionManager,\n  locationChangeObservable: Observable<LocationChange>,\n  domMutationObservable: Observable<void>,\n  buildCommonContext: () => CommonContext,\n  reportError: (error: RawError) => void\n) {\n  const viewContexts = startViewContexts(lifeCycle)\n  const urlContexts = startUrlContexts(lifeCycle, locationChangeObservable, location)\n\n  const pageStateHistory = startPageStateHistory()\n\n  const { addAction, actionContexts } = startActionCollection(\n    lifeCycle,\n    domMutationObservable,\n    configuration,\n    pageStateHistory\n  )\n\n  startRumAssembly(\n    configuration,\n    lifeCycle,\n    sessionManager,\n    viewContexts,\n    urlContexts,\n    actionContexts,\n    buildCommonContext,\n    reportError\n  )\n\n  return {\n    viewContexts,\n    pageStateHistory,\n    urlContexts,\n    addAction,\n    actionContexts,\n    stop: () => {\n      viewContexts.stop()\n      pageStateHistory.stop()\n    },\n  }\n}\n","import type { Context } from '@datadog/browser-core'\nimport { getEventBridge } from '@datadog/browser-core'\nimport type { LifeCycle } from '../domain/lifeCycle'\nimport { LifeCycleEventType } from '../domain/lifeCycle'\nimport type { RumEvent } from '../rumEvent.types'\n\nexport function startRumEventBridge(lifeCycle: LifeCycle) {\n  const bridge = getEventBridge<'rum', RumEvent>()!\n\n  lifeCycle.subscribe(LifeCycleEventType.RUM_EVENT_COLLECTED, (serverRumEvent: RumEvent & Context) => {\n    bridge.send('rum', serverRumEvent)\n  })\n}\n","import { toServerDuration, relativeToClocks, generateUUID } from '@datadog/browser-core'\nimport type { RawRumLongTaskEvent } from '../../../rawRumEvent.types'\nimport { RumEventType } from '../../../rawRumEvent.types'\nimport type { LifeCycle } from '../../lifeCycle'\nimport { LifeCycleEventType } from '../../lifeCycle'\nimport type { RumSessionManager } from '../../rumSessionManager'\n\nexport function startLongTaskCollection(lifeCycle: LifeCycle, sessionManager: RumSessionManager) {\n  lifeCycle.subscribe(LifeCycleEventType.PERFORMANCE_ENTRIES_COLLECTED, (entries) => {\n    for (const entry of entries) {\n      if (entry.entryType !== 'longtask') {\n        break\n      }\n      const session = sessionManager.findTrackedSession(entry.startTime)\n      if (!session || !session.longTaskAllowed) {\n        break\n      }\n      const startClocks = relativeToClocks(entry.startTime)\n      const rawRumEvent: RawRumLongTaskEvent = {\n        date: startClocks.timeStamp,\n        long_task: {\n          id: generateUUID(),\n          duration: toServerDuration(entry.duration),\n        },\n        type: RumEventType.LONG_TASK,\n        _dd: {\n          discarded: false,\n        },\n      }\n      lifeCycle.notify(LifeCycleEventType.RAW_RUM_EVENT_COLLECTED, {\n        rawRumEvent,\n        startTime: startClocks.relative,\n        domainContext: { performanceEntry: entry.toJSON() },\n      })\n    }\n  })\n}\n","import { addTelemetryDebug, elapsed, noop, performDraw, relativeNow, toServerDuration } from '@datadog/browser-core'\nimport type { Telemetry, RelativeTime } from '@datadog/browser-core'\nimport type { RecorderApi } from '../../../boot/rumPublicApi'\nimport type { RumSessionManager } from '../../rumSessionManager'\nimport type { RumConfiguration } from '../../configuration'\n\nexport type WebVitalTelemetryDebug = ReturnType<typeof startWebVitalTelemetryDebug>\n\nexport function startWebVitalTelemetryDebug(\n  configuration: RumConfiguration,\n  telemetry: Telemetry,\n  recorderApi: RecorderApi,\n  session: RumSessionManager\n) {\n  const webVitalTelemetryEnabled = telemetry.enabled && performDraw(configuration.customerDataTelemetrySampleRate)\n\n  if (!webVitalTelemetryEnabled) {\n    return {\n      addWebVitalTelemetryDebug: noop,\n    }\n  }\n  return {\n    addWebVitalTelemetryDebug(webVitalName: string, webVitalNode: Node | undefined, webVitalTime: RelativeTime) {\n      const computationTime = relativeNow()\n      if (!recorderApi.isRecording()) {\n        recorderApi.recorderStartObservable.subscribe((recordingStartTime) => {\n          addTelemetryDebug(`${webVitalName} attribution recording delay`, {\n            computationDelay: toServerDuration(elapsed(webVitalTime, computationTime)),\n            recordingDelay: toServerDuration(elapsed(webVitalTime, recordingStartTime)),\n            hasNode: !!webVitalNode,\n            serializedDomNode: webVitalNode ? recorderApi.getSerializedNodeId(webVitalNode) : undefined,\n          })\n        })\n      }\n\n      addTelemetryDebug(`${webVitalName} attribution`, {\n        computationDelay: toServerDuration(elapsed(webVitalTime, computationTime)),\n        hasNode: !!webVitalNode,\n        replayRecording: recorderApi.isRecording(),\n        replaySampled: session.findTrackedSession()?.sessionReplayAllowed,\n        serializedDomNode: webVitalNode ? recorderApi.getSerializedNodeId(webVitalNode) : undefined,\n      })\n    },\n  }\n}\n","import type { RelativeTime } from '@datadog/browser-core'\nimport type { ActionContexts } from '../rumEventsCollection/action/actionCollection'\nimport type { RumSessionManager } from '../rumSessionManager'\nimport type { ViewContexts } from './viewContexts'\nimport type { UrlContexts } from './urlContexts'\n\nexport interface InternalContext {\n  application_id: string\n  session_id: string | undefined\n  view?: {\n    id: string\n    url: string\n    referrer: string\n    name?: string\n  }\n  user_action?: {\n    id: string | string[]\n  }\n}\n\n/**\n * Internal context keep returning v1 format\n * to not break compatibility with logs data format\n */\nexport function startInternalContext(\n  applicationId: string,\n  sessionManager: RumSessionManager,\n  viewContexts: ViewContexts,\n  actionContexts: ActionContexts,\n  urlContexts: UrlContexts\n) {\n  return {\n    get: (startTime?: number): InternalContext | undefined => {\n      const viewContext = viewContexts.findView(startTime as RelativeTime)\n      const urlContext = urlContexts.findUrl(startTime as RelativeTime)\n      const session = sessionManager.findTrackedSession(startTime as RelativeTime)\n      if (session && viewContext && urlContext) {\n        const actionId = actionContexts.findActionId(startTime as RelativeTime)\n        return {\n          application_id: applicationId,\n          session_id: session.id,\n          user_action: actionId ? { id: actionId } : undefined,\n          view: { id: viewContext.id, name: viewContext.name, referrer: urlContext.referrer, url: urlContext.url },\n        }\n      }\n    },\n  }\n}\n","import type { RumConfiguration } from '@datadog/browser-rum-core'\nimport { getSessionReplayUrl } from '@datadog/browser-rum-core'\n\nexport function getSessionReplayLink(configuration: RumConfiguration): string | undefined {\n  return getSessionReplayUrl(configuration, { errorType: 'slim-package' })\n}\n"],"names":["getGlobalObject","globalThis","Object","defineProperty","prototype","get","this","configurable","globalObject","_dd_temp_","self","window","getZoneJsOriginalValue","target","name","original","browserWindow","Zone","__symbol__","ConsoleApiName","log","debug","info","warn","error","display","api","hasOwnProperty","call","args","globalConsole","console","bind","onMonitorErrorCollected","debugMode","setDebugMode","newDebugMode","monitor","fn","callMonitored","arguments","context","apply","e","displayIfDebugEnabled","callback","delay","timeoutId","throttle","wait","options","pendingExecutionWithParameters","pendingTimeoutId","needLeadingExecution","undefined","leading","needTrailingExecution","trailing","inWaitPeriod","throttled","parameters","cancel","onFirstSubscribe","observers","subscribe","f","length","onLastUnsubscribe","push","unsubscribe","filter","other","notify","data","forEach","observer","mergeObservables","globalObservable","Observable","subscriptions","observables","map","observable","subscription","catchUserErrors","errorMsg","err","includes","candidate","search","indexOf","arrayFrom","arrayLike","Array","from","array","Set","item","i","find","predicate","objectValues","object","keys","key","objectEntries","startsWith","slice","cssEscape","str","CSS","escape","replace","ch","asCodePoint","charCodeAt","toString","toAssign","source","ONE_KIBI_BYTE","ONE_MEBI_BYTE","HAS_MULTI_BYTES_CHARACTERS","computeBytesCount","test","TextEncoder","encode","Blob","size","getType","value","isArray","mergeInto","destination","circularReferenceChecker","WeakSet","hasAlreadyBeenSeen","has","add","createCircularReferenceChecker","Date","getTime","RegExp","flags","global","ignoreCase","multiline","sticky","unicode","join","merged","deepClone","combine","sources","jsonStringify","replacer","space","JSON","stringify","restoreObjectPrototypeToJson","detachToJsonMethod","restoreArrayPrototypeToJson","restoreValuePrototypeToJson","getPrototypeOf","restoreValueToJson","objectToJson","toJSON","SANITIZE_DEFAULT_MAX_CHARACTER_COUNT","JSON_PATH_ROOT_ELEMENT","KEY_DECORATION_LENGTH","sanitize","maxCharacterCount","containerQueue","visitedObjectsWithPath","WeakMap","sanitizedData","sanitizeProcessor","accumulatedCharacterCount","containerToProcess","shift","separatorLength","targetData","path","warnOverCharacterLimit","parentPath","queue","sourceToSanitize","tryToApplyToJSON","description","sanitizePrimitivesAndFunctions","sanitizedSource","Event","isTrusted","match","sanitizeObjects","sourceAsObject","currentPath","set","changeType","CUSTOMER_DATA_BYTES_LIMIT","warnIfCustomerDataLimitReached","bytesCount","customerDataType","BYTES_COMPUTATION_THROTTLING_DELAY","createContextManager","computeBytesCountImpl","bytesCountCache","alreadyWarned","computeBytesCountThrottled","contextManager","getBytesCount","remove","newContext","getContext","setContext","clearContext","setContextProperty","property","removeContextProperty","buffer","splice","drain","performDraw","threshold","Math","random","round","num","decimals","toFixed","isPercentage","isNumber","navigationStart","ONE_SECOND","ONE_MINUTE","ONE_HOUR","ONE_YEAR","relativeToClocks","relative","timeStamp","getCorrectedTimeStamp","relativeTime","correctedOrigin","dateNow","performance","now","getNavigationStart","addDuration","getTimeStamp","toServerDuration","duration","timeStampNow","relativeNow","clocksNow","clocksOrigin","elapsed","start","end","a","b","getRelativeTime","timestamp","timing","generateUUID","placeholder","parseInt","findCommaSeparatedValue","rawString","matches","exec","safeTruncate","suffix","lastChar","correctedLength","getCurrentSiteCache","cookieMap","Map","setCookie","_expireDelay","_options","getCookie","deleteCookie","delete","SYNTHETICS_TEST_ID_COOKIE_NAME","SYNTHETICS_RESULT_ID_COOKIE_NAME","SYNTHETICS_INJECTS_RUM_COOKIE_NAME","willSyntheticsInjectRum","Boolean","_DATADOG_SYNTHETICS_INJECTS_RUM","getEventBridge","eventBridgeGlobal","DatadogEventBridge","getAllowedWebViewHosts","parse","send","eventType","event","canUseEventBridge","currentHost","location","hostname","bridge","some","allowedHost","UNKNOWN_FUNCTION","computeStackTrace","ex","stack","stackProperty","tryToGetString","exString","String","split","line","stackFrame","parts","CHROME_LINE_RE","isNative","isEval","submatch","CHROME_EVAL_RE","column","func","url","parseChromeLine","CHROME_ANONYMOUS_FUNCTION_RE","parseChromeAnonymousLine","WINJS_LINE_RE","parseWinLine","GECKO_LINE_RE","GECKO_EVAL_RE","parseGeckoLine","message","fileUrl","filePosition","ExperimentalFeature","NO_ERROR_STACK_PRESENT_MESSAGE","computeRawError","stackTrace","originalError","handlingStack","startClocks","nonErrorPrefix","handling","isErrorInstance","Error","computeMessage","hasUsableStack","toStackTraceString","causes","parentSource","currentError","cause","type","flattenErrorCauses","fingerprint","tryToGetFingerprint","dd_fingerprint","result","formatErrorMessage","frame","createHandlingStack","formattedStack","sanitizeUser","newUser","user","enabledExperimentalFeatures","isExperimentalFeatureEnabled","featureName","getExperimentalFeatures","shallowClone","objectHasValue","isEmptyObject","SESSION_TIME_OUT_DELAY","SESSION_EXPIRATION_DELAY","SESSION_STORE_KEY","SESSION_ENTRY_REGEXP","SESSION_ENTRY_SEPARATOR","isSessionInExpiredState","session","expandSessionState","expire","toSessionString","toSessionState","sessionString","isValidSessionString","entry","OLD_SESSION_COOKIE_NAME","OLD_RUM_COOKIE_NAME","OLD_LOGS_COOKIE_NAME","RUM_SESSION_KEY","LOGS_SESSION_KEY","selectCookieStrategy","initConfiguration","cookieOptions","secure","useSecureSessionCookie","useCrossSiteSessionCookie","crossSite","trackSessionAcrossSubdomains","domain","testCookieName","domainLevels","candidateDomain","pop","getCurrentSite","buildCookieOptions","document","cookie","testCookieValue","isCookieCorrectlySet","areCookiesAuthorized","initCookieStrategy","cookieStore","persistSession","retrieveSession","retrieveSessionCookie","clearSession","deleteSessionCookie","cookieStoreStrategy","oldSessionId","oldRumType","oldLogsType","id","tryOldCookiesMigration","LOCAL_STORAGE_TEST_KEY","persistInLocalStorage","sessionState","localStorage","setItem","retrieveSessionFromLocalStorage","getItem","clearSessionFromLocalStorage","removeItem","ongoingOperations","LOCK_RETRY_DELAY","LOCK_MAX_TRIES","bufferedOperations","processSessionStoreOperations","operations","sessionStoreStrategy","numberOfRetries","lockEnabled","isLockEnabled","next","currentLock","currentSession","lock","retryLater","processedSession","process","after","chrome","navigator","userAgent","sessionStore","currentNumberOfRetries","nextOperations","STORAGE_POLL_DELAY","selectSessionStoreStrategyType","sessionStoreStrategyType","allowFallbackToLocalStorage","testKey","retrievedId","selectLocalStorageStrategy","startSessionStore","productKey","computeSessionState","renewObservable","expireObservable","watchSessionTimeoutId","isActiveSession","synchronizeSession","sessionCache","retrieveActiveSession","hasSessionInCache","isSessionInCacheOutdated","created","Number","expandOrRenewSession","isTracked","synchronizedSession","trackingType","expandOrRenewSessionState","renewSessionInCache","expandSession","getSession","stop","normalizeUrl","buildUrl","getLinkElementOrigin","href","getOrigin","base","supportedURL","isURLSupported","originalURL","getSupportedUrl","doc","anchorElement","createElement","baseElement","implementation","createHTMLDocument","head","appendChild","body","URL","element","origin","sanitizedHost","host","protocol","INTAKE_SITE_STAGING","INTAKE_SITE_US1","INTAKE_SITE_EU1","INTAKE_SITE_AP1","ENDPOINTS","logs","rum","sessionReplay","INTAKE_TRACKS","createEndpointBuilder","endpointType","configurationTags","buildUrlWithParameters","proxy","proxyUrl","encodeURIComponent","site","internalAnalyticsSubdomain","domainParts","extension","subdomain","buildEndpointHost","createEndpointUrlWithParametersBuilder","build","flushReason","retry","clientToken","tags","concat","COLLECT_FLUSH_REASON","count","lastFailureStatus","reverse","buildEndpointParameters","urlPrefix","TAG_SIZE_LIMIT","FORBIDDEN_CHARACTERS","buildTag","rawValue","valueSizeLimit","sanitizedValue","computeTransportConfiguration","configuration","env","service","version","datacenter","buildTags","endpointBuilders","logsEndpointBuilder","rumEndpointBuilder","sessionReplayEndpointBuilder","computeEndpointBuilders","intakeUrlPrefixes","builder","replicaConfiguration","replica","replicaEndpointBuilders","applicationId","computeReplicaConfiguration","isIntakeUrl","intakeEndpoint","DefaultPrivacyLevel","ALLOW","MASK","MASK_USER_INPUT","validateAndBuildConfiguration","sessionSampleRate","sampleRate","telemetrySampleRate","telemetryConfigurationSampleRate","enableExperimentalFeatures","flag","beforeSend","silentMultipleInit","batchBytesLimit","eventRateLimiterThreshold","maxTelemetryEventsPerPage","flushTimeout","batchMessagesLimit","messageBytesLimit","isMatchOption","itemType","matchList","list","useStartsWith","clearTracingIfNeeded","status","isAborted","traceId","spanId","traceSampled","injectHeadersIfTracingAllowed","sessionManager","inject","getCrypto","findTrackedSession","propagatorTypes","tracingHeaders","tracingOption","allowedTracingUrls","TraceIdentifier","traceSampleRate","propagatorType","toDecimalString","traceparent","toPaddedHexadecimalString","b3","crypto","msCrypto","Uint8Array","getRandomValues","radix","high","readInt32","low","mod","floor","offset","validateAndBuildRumConfiguration","sessionReplaySampleRate","premiumSampleRate","replaySampleRate","tracingSampleRate","excludedActivityUrls","allowedTracingOrigins","option","expectedItem","legacyMatchOption","convertLegacyMatchOptionToTracingOption","validateAndBuildTracingOptions","baseConfiguration","trackUserInteractions","trackInteractions","trackFrustrations","actionNameAttribute","oldPlansBehavior","trackViewsManually","trackResources","trackLongTasks","defaultPrivacyLevel","customerDataTelemetrySampleRate","getSelectedTracingPropagators","usedTracingPropagators","buildCommonContext","globalContextManager","userContextManager","recorderApi","hasReplay","isRecording","sendToExtension","payload","__ddBrowserSdkExtensionCallback","onRawTelemetryEventCollected","TelemetryType","ALLOWED_FRAME_URLS","TELEMETRY_EXCLUDED_SITES","telemetryConfiguration","maxEventsPerPage","sentEventCount","telemetryEnabled","telemetryConfigurationEnabled","startTelemetry","telemetryService","contextProvider","rawEvent","date","_dd","format_version","telemetry","experimental_features","toTelemetryEvent","addTelemetryError","setContextProvider","provider","enabled","addTelemetryDebug","addTelemetry","kind","scrubCustomerFrames","formatError","allowedFrameUrl","addEventListener","eventTarget","eventName","listener","addEventListeners","eventNames","once","capture","passive","wrappedListener","PageExitReason","HIDDEN","UNLOADING","PAGEHIDE","FROZEN","createDOMMutationObservable","MutationObserver","constructor","originalInstance","getMutationObserverConstructor","observe","attributes","characterData","childList","subtree","disconnect","runOnReadyState","expectedReadyState","readyState","FAKE_INITIAL_DOCUMENT","RESOURCE_TYPES","initiatorType","_","computeResourceKind","isValidUrl","pathname","getPathName","isType","areInOrder","numbers","computePerformanceResourceDetails","validEntry","toValidEntry","startTime","fetchStart","redirectStart","redirectEnd","domainLookupStart","domainLookupEnd","connectStart","secureConnectionStart","connectEnd","requestStart","responseStart","details","download","formatTiming","first_byte","connect","ssl","dns","hasRedirection","redirect","responseEnd","computeSize","decodedBodySize","isAllowedRequestUrl","isTextNode","node","nodeType","Node","TEXT_NODE","INITIAL_DOCUMENT_OUTDATED_TRACE_ID_THRESHOLD","getDocumentTraceId","traceIdMeta","querySelector","traceTimeMeta","createDocumentTraceData","content","getDocumentTraceDataFromMeta","comment","childNodes","getTraceCommentFromNode","findTraceComment","getDocumentTraceDataFromComment","traceTime","rawTraceTime","COMMENT_NODE","isCommentNode","supportPerformanceObject","supportPerformanceTimingEvent","entryType","PerformanceObserver","supportedEntryTypes","startPerformanceCollection","lifeCycle","handleRumPerformanceEntries","forcedAttributes","getEntriesByType","relativePerformanceTiming","computeRelativePerformanceTiming","getEntries","entries","mainEntries","experimentalEntries","buffered","entryTypes","clearResourceTimings","sendFakeTiming","retrieveNavigationTiming","startTimeStamp","timingSent","removeEventListeners","evt","cancelable","processingStart","sendTimingIfPointerIsNotCancelled","sendTiming","retrieveFirstInputTiming","numberKey","timingElement","rumAllowedPerformanceEntries","loadEventEnd","isIncompleteNavigation","isForbiddenResource","viewportObservable","viewport","ErrorSource","AGENT","CONSOLE","CUSTOM","LOGGER","NETWORK","SOURCE","REPORT","createEventRateLimiter","limit","onLimitReached","eventCount","allowNextEvent","isLimitReached","getSyntheticsContext","testId","_DATADOG_SYNTHETICS_PUBLIC_ID","resultId","_DATADOG_SYNTHETICS_RESULT_ID","getSyntheticsResultId","test_id","result_id","injected","initViewportObservable","updateDimension","getViewportDimension","visual","visualViewport","width","scale","height","innerWidth","innerHeight","limitModification","modifiableFieldPaths","modifier","clone","fieldPath","fieldType","newValue","current","field","isValidObjectContaining","newType","fields","isValidObject","modifiableFieldPathsByEvent","VIEW_MODIFIABLE_FIELD_PATHS","USER_CUSTOMIZABLE_FIELD_PATHS","startRumAssembly","viewContexts","urlContexts","actionContexts","reportError","eventRateLimiters","syntheticsContext","ciTestContext","testExecutionId","Cypress","test_execution_id","getCiTestContext","rawRumEvent","domainContext","savedCommonContext","customerContext","viewContext","findView","urlContext","findUrl","commonContext","actionId","findActionId","serverRumEvent","drift","plan","session_sample_rate","session_replay_sample_rate","browser_sdk_version","application","view","referrer","action","synthetics","ci_test","viewportDimension","has_replay","usr","rateLimitReached","shouldSend","xhrObservable","LifeCycle","callbacks","eventCallbacks","END_OF_TIMES","Infinity","CLEAR_OLD_VALUES_INTERVAL","expireDelay","maxEntries","clearOldValuesInterval","clearOldValues","endTime","index","close","unshift","closeActive","latestEntry","findAll","reset","oldTimeThreshold","VIEW_CONTEXT_TIME_OUT_DELAY","instrumentMethod","method","instrumentationFactory","instrumentation","instrumentationWrapper","instrumentMethodAndCallOriginal","before","fetchObservable","xhrContexts","initXhrObservable","stopInstrumentingStart","XMLHttpRequest","openXhr","stopInstrumentingSend","sendXhr","stopInstrumentingAbort","abortXhr","state","startContext","xhr","hasBeenReported","stopInstrumentingOnReadyStateChange","DONE","onEnd","unsubscribeLoadEndListener","completeContext","initFetchObservable","fetch","originalFetch","input","init","responsePromise","afterSend","Request","reportFetch","response","DOMException","code","ABORT_ERR","responseType","then","nextRequestIndex","startRequestCollection","tracer","traceFetch","headers","append","Headers","header","traceXhr","setRequestHeader","startTracer","rawContext","requestIndex","getNextRequestIndex","trackXhr","clonedResponse","tryToClone","stream","reader","getReader","chunks","readBytesCount","onDone","bytes","limitExceeded","catch","collectStreamBody","chunk","bytesLimit","readMore","read","done","readBytesFromStream","POSITIVE_INFINITY","waitForResponseToComplete","trackFetch","trackEventCounts","isChildEvent","onChange","eventCounts","errorCount","longTaskCount","resourceCount","actionCount","frustrationCount","frustration","PAGE_ACTIVITY_VALIDATION_DELAY","PAGE_ACTIVITY_END_DELAY","waitPageActivityEnd","domMutationObservable","pageActivityEndCallback","maxDuration","pageActivityObservable","firstRequestIndex","pendingRequestsCount","notifyPageActivity","isExcludedUrl","startEvent","request","stopTrackingWindowOpen","s","isBusy","createPageActivityObservable","pageActivityEndTimeoutId","hasCompleted","validationTimeoutId","complete","hadActivity","maxDurationTimeoutId","pageActivitySubscription","lastChangeTime","doWaitPageActivityEnd","requestUrl","MAX_DURATION_BETWEEN_CLICKS","MAX_DISTANCE_BETWEEN_CLICKS","createClickChain","firstClick","onFinalize","maxDurationBetweenClicksTimeoutId","bufferedClicks","appendClick","click","stopObservable","tryFinalize","dontAcceptMoreClick","every","isStopped","tryAppend","first","second","sqrt","pow","clientX","clientY","DEFAULT_PROGRAMMATIC_ACTION_NAME_ATTRIBUTE","getActionNameFromElement","userProgrammaticAttribute","getActionNameFromElementProgrammatically","getActionNameFromElementForStrategies","priorityStrategies","fallbackStrategies","targetElement","programmaticAttribute","elementWithAttribute","supportsElementClosestResult","HTMLElement","supportsElementClosest","closest","hasAttribute","parentElement","truncate","normalizeWhitespace","getAttribute","trim","supportsLabelPropertyResult","HTMLInputElement","supportsLabelProperty","labels","getTextualContent","label","ownerDocument","querySelectorAll","htmlFor","nodeName","labelledByAttribute","refElement","getElementById","MAX_PARENTS_TO_CONSIDER","strategies","recursionCounter","strategy","trimmedName","isContentEditable","innerText","removeTextFromElements","query","textToReplace","documentMode","textContent","supportScopeSelectorCache","STABLE_ATTRIBUTES","GLOBALLY_UNIQUE_SELECTOR_GETTERS","getStableAttributeSelector","isGeneratedValue","UNIQUE_AMONG_CHILDREN_SELECTOR_GETTERS","tagName","classList","className","getSelectorFromElement","targetElementSelector","globallyUniqueSelector","findSelector","isSelectorUniqueGlobally","isSelectorUniqueAmongSiblings","combineSelector","getPositionSelector","selector","getAttributeSelector","attributeName","sibling","firstElementChild","elementIndex","nextElementSibling","selectorGetters","childSelector","elementSelector","selectorGetter","fullSelector","supportScopeSelector","parent","child","isSelectionEmpty","selection","getSelection","isCollapsed","isValidPointerEvent","Element","isPrimary","MIN_CLICKS_PER_SECOND_TO_CONSIDER_RAGE","computeFrustration","clicks","rageClick","getUserActivity","isRage","addFrustration","isDead","hasError","hasSelectionChanged","DEAD_CLICK_EXCLUDE_SELECTOR","hasPageActivity","msMatchesSelector","CLICK_ACTION_MAX_DURATION","ACTION_CONTEXT_TIME_OUT_DELAY","trackClickActions","currentClickChain","history","ValueHistory","stopClickChain","selectionEmptyAtPointerDown","clickContext","onPointerDown","onPointerUp","userActivity","listeners","stopActionEventsListener","pointerDownEvent","rect","clickActionBase","getBoundingClientRect","position","x","left","y","top","hadActivityOnPointerDown","pageActivityEndEvent","processPointerDown","appendClickToClickChain","newClick","stopWaitPageActivityEnd","discard","validate","viewEndedSubscription","endClocks","stopSubscription","startClickAction","finalizeClicks","activityEndTime","historyEntry","eventCountsSubscription","frustrationTypes","newActivityEndTime","frustrationType","domEvents","clickAction","counts","events","processAction","pageStateHistory","autoActionProperties","isAutoAction","loading_time","long_task","resource","in_foreground","isInActivePageStateAt","ERROR_TYPES_RE","startUnhandledErrorCollection","stopInstrumentingOnError","messageObj","errorObj","tryToParseMessage","instrumentOnError","stopInstrumentingOnUnhandledRejection","reason","instrumentUnhandledRejection","consoleObservablesByApi","initConsoleObservable","apis","consoleObservables","originalConsoleApi","params","param","formatConsoleParameters","firstErrorParam","buildConsoleLog","createConsoleObservable","trackFirstHiddenSingleton","RawReportType","intervention","deprecation","cspViolation","initReportObservable","blockedURI","effectiveDirective","subtype","buildStack","originalPolicy","sourceFile","lineNumber","columnNumber","buildRawReportFromCspViolation","reportTypes","ReportingObserver","handleReports","reports","report","types","createReportObservable","startErrorCollection","featureFlagContexts","errorObservable","consoleError","trackConsoleError","trackRuntimeError","trackReportError","handling_stack","source_type","featureFlagContext","findFeatureFlagEvaluations","feature_flags","processError","addError","rawError","doStartErrorCollection","matchRequestTiming","sameNameEntries","getEntriesByName","candidates","errorMargin","startResourceCollection","matchingTiming","correspondingTimingOverrides","computePerformanceEntryMetrics","tracingInfo","hasBeenTraced","span_id","trace_id","rule_psr","getRulePsr","computeRequestTracingInfo","indexingInfo","computeIndexingInfo","NO_RESOURCE_DURATION_FROZEN_STATE","requestCrossedFrozenState","pageState","computeRequestDuration","pageStateInfo","computePageStateInfo","resourceEvent","status_code","performanceEntry","requestInput","requestInit","processRequest","processResourceEntry","entryMetrics","computeEntryTracingInfo","resourceStart","discarded","resourceAllowed","RESOURCE_PAGE_STATES","page_states","page_was_discarded","wasDiscarded","mapToForegroundPeriods","pageStateServerEntries","foregroundPeriods","trackFirstHidden","visibilityState","TIMING_MAXIMUM_DELAY","KEEP_TRACKING_TIMINGS_AFTER_VIEW_DELAY","trackInitialViewTimings","webVitalTelemetryDebug","setLoadEvent","scheduleViewUpdate","timings","setTimings","newTimings","stopNavigationTracking","domComplete","domContentLoaded","domContentLoadedEventEnd","domInteractive","loadEvent","firstByte","trackNavigationTimings","stopFCPTracking","firstHidden","fcpEntry","trackFirstContentfulPaintTiming","firstContentfulPaint","stopLCPTracking","firstInteractionTimestamp","stopEventListener","unsubscribeLifeCycle","lcpEntry","findLast","trackLargestContentfulPaintTiming","largestContentfulPaint","lcpElement","addWebVitalTelemetryDebug","stopFIDTracking","firstInputEntry","firstInputDelay","firstInputTime","firstInputTarget","trackFirstInputTimings","scheduleStop","THROTTLE_SCROLL_DURATION","trackViewMetrics","loadingType","viewStart","scrollMetrics","stopCLSTracking","viewMetrics","loadType","isWaitingForLoadEvent","isWaitingForActivityLoadingTime","loadingTimeCandidates","invokeCallbackIfAllCandidatesAreReceived","max","trackLoadingTime","newLoadingTime","loadingTime","SCROLLMAP","computeScrollValues","scrollHeight","scrollDepth","scrollTop","maxDepth","maxDepthScrollHeight","maxDepthTime","maxDepthScrollTop","stopLoadingTimeTracking","stopScrollMetricsTracking","getScrollValues","handleScrollEvent","trackScrollMetrics","newScrollMetrics","clsAttributionCollected","cumulativeLayoutShift","maxClsValue","largestLayoutShiftNode","largestLayoutShiftTime","largestLayoutShift","update","largestLayoutShiftSource","slidingSessionWindow","hadRecentInput","trackCumulativeLayoutShift","getScrollMetrics","scrollY","pageTop","offsetTop","pageYOffset","scrollingElement","documentElement","KEEP_TRACKING_EVENT_COUNTS_AFTER_VIEW_DELAY","THROTTLE_VIEW_UPDATE_PERIOD","SESSION_KEEP_ALIVE_INTERVAL","trackViews","locationChangeObservable","areViewsTrackedAutomatically","initialViewOptions","locationChangeSubscription","currentView","startNewView","viewOptions","initialLocation","customTimings","documentVersion","sessionIsActive","triggerViewUpdate","cancelScheduleViewUpdate","stopViewMetricsTracking","scheduleStopInitialViewTimingsTracking","viewId","trackViewEventCounts","scheduleStopEventCountsTracking","keepAliveIntervalId","currentEnd","isActive","addTiming","time","looksLikeRelativeTime","sanitized","sanitizeTiming","newView","pageExitEvent","currentLocation","otherLocation","hash","correspondingId","oldLocation","newLocation","substr","getPathFromHash","renewViewOnLocationChange","startView","startViewCollection","replayStats","getReplayStats","pageStatesEnabled","PAGE_STATES","pageStates","viewEvent","document_version","replay_stats","cumulative_layout_shift","dom_complete","dom_content_loaded","dom_interactive","first_contentful_paint","first_input_delay","first_input_time","is_active","largest_contentful_paint","load_event","discardNegativeDuration","loading_type","time_spent","in_foreground_periods","scroll","max_depth","max_depth_scroll_height","max_depth_scroll_top","max_depth_time","privacy","replay_level","custom_timings","newObject","mapValues","processViewUpdate","VISIBILITY_CHECK_DELAY","SESSION_CONTEXT_TIMEOUT_DELAY","stopCallbacks","startSessionManager","sessionContextHistory","buildSessionContext","expandSessionWhenVisible","visibilityCheckInterval","trackVisibility","findActiveSession","startRumSessionManager","rawTrackingType","hasValidRumSession","isTypeTracked","sessionReplayAllowed","longTaskAllowed","rumSessionType","createFlushController","messagesLimit","durationLimit","pageExitObservable","sessionExpireObservable","flushObservable","flush","durationLimitTimeoutId","currentBytesCount","currentMessagesCount","messagesCount","cancelDurationLimitTimeout","notifyBeforeAddMessage","messageBytesCount","notifyAfterAddMessage","notifyAfterRemoveMessage","flushController","pushOnlyBuffer","upsertBuffer","addOrUpdate","upsert","messages","sendOnExit","processedMessage","hasMessageFor","separatorBytesCount","removedMessage","MAX_ONGOING_BYTES_COUNT","MAX_ONGOING_REQUESTS","MAX_QUEUE_BYTES_COUNT","MAX_BACKOFF_TIME","INITIAL_BACKOFF_TIME","sendWithRetryStrategy","sendStrategy","transportStatus","queuedPayloads","bandwidthMonitor","canHandle","onSuccess","retryQueuedPayloads","onFailure","enqueue","scheduleRetry","dequeue","currentBackoffTime","min","onLine","shouldRetryRequest","ongoingRequestCount","isFull","queueFullReported","previousQueue","newPayloadQueue","createHttpRequest","endpointBuilder","retryState","ongoingByteCount","sendStrategyForRetry","onResponse","canUseKeepAlive","isKeepAliveSupported","fetchUrl","keepalive","mode","sendXHR","fetchKeepAliveStrategy","canUseBeacon","sendBeacon","beaconUrl","hasReportedBeaconError","reportBeaconError","xhrUrl","sendBeaconStrategy","open","startRumBatch","telemetryEventObservable","batch","replicaBatch","createRumBatch","primaryBatch","primaryFlushController","Batch","withReplicaApplicationId","replicated","makeRumBatch","isTelemetryReplicationAllowed","URL_CONTEXT_TIME_OUT_DELAY","createLocationChangeObservable","onHistoryChange","stopInstrumentingPushState","stopInstrumentingReplaceState","removeListener","onHashChange","stopHistoryTracking","onLocationChange","stopHashTracking","FEATURE_FLAG_CONTEXT_TIME_OUT_DELAY","currentPeriodMeasures","currentBatchMeasures","batchHasRumEvent","MEASURES_PERIOD_DURATION","sendCurrentPeriodMeasures","batchCount","initCurrentPeriodMeasures","updateMeasure","measure","sum","mergeMeasure","batchBytesCount","batchMessagesCount","globalContextBytes","userContextBytes","featureFlagBytes","initCurrentBatchMeasures","MAX_PAGE_STATE_ENTRIES","MAX_PAGE_STATE_ENTRIES_SELECTABLE","PAGE_STATE_CONTEXT_TIME_OUT_DELAY","startPageStateHistory","maxPageStateEntriesSelectable","currentPageState","addPageState","getPageState","stopEventListeners","persisted","computePageState","nextPageState","eventStartTime","pageStateEntries","relativeStartTime","pageStateEntry","hasFocus","getSessionReplayUrl","errorType","sessionId","rumConfiguration","getSiteDefaultSubdomain","existingGlobalVariable","datadogRum","startRumImpl","ignoreInitIfSyntheticsWillInjectRum","isAlreadyInitialized","getInternalContextStrategy","getInitConfigurationStrategy","stopSessionStrategy","getSessionReplayLinkStrategy","bufferApiCalls","BoundedBuffer","addTimingStrategy","startViewStrategy","addActionStrategy","addErrorStrategy","providedError","addFeatureFlagEvaluationStrategy","doStartRum","startRumResults","getSessionReplayLink","onRumStart","stub","publicApi","eventBridgeAvailable","overrideInitConfigurationForBridge","canInitRum","beforeInitCalls","addRumGlobalContext","setGlobalContextProperty","removeRumGlobalContext","removeGlobalContextProperty","getRumGlobalContext","getGlobalContext","setRumGlobalContext","setGlobalContext","clearGlobalContext","getInternalContext","getInitConfiguration","addAction","setUser","isValid","checkUser","getUser","setUserProperty","sanitizedProperty","removeUserProperty","removeUser","clearUser","stopSession","startSessionReplayRecording","stopSessionReplayRecording","addFeatureFlagEvaluation","onReady","enumerable","makeRumPublicApi","startRumTelemetry","FEATURE_FLAGS","getFeatureFlagBytesCount","currentContext","startFeatureFlagContexts","pagehideEnabled","stopListeners","stopBeforeUnloadListener","startRumSessionManagerStub","startRumEventBridge","batchFlushObservable","hasFeatureFlagContext","startCustomerDataTelemetry","viewContextHistory","buildViewContext","startViewContexts","previousViewUrl","urlContextHistory","viewUrl","buildUrlContext","changeTime","startUrlContexts","startActionCollection","startRumEventCollection","addTelemetryConfiguration","baseSerializedConfiguration","telemetry_sample_rate","telemetry_configuration_sample_rate","use_before_send","use_cross_site_session_cookie","use_secure_session_cookie","use_proxy","silent_multiple_init","track_session_across_subdomains","track_resources","track_long_task","allow_fallback_to_local_storage","serializeConfiguration","premium_sample_rate","replay_sample_rate","trace_sample_rate","action_name_attribute","use_allowed_tracing_origins","use_allowed_tracing_urls","selected_tracing_propagators","default_privacy_level","use_excluded_activity_urls","track_frustrations","track_views_manually","track_user_interactions","serializeRumConfiguration","startLongTaskCollection","webVitalName","webVitalNode","webVitalTime","computationTime","recorderStartObservable","recordingStartTime","computationDelay","recordingDelay","hasNode","serializedDomNode","getSerializedNodeId","replayRecording","replaySampled","startWebVitalTelemetryDebug","internalContext","application_id","session_id","user_action","startInternalContext","q"],"sourceRoot":""}